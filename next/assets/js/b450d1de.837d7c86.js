"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[28080],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>y});var n=o(67294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var c=n.createContext({}),i=function(e){var t=n.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},u=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=i(o),y=a,m=p["".concat(c,".").concat(y)]||p[y]||d[y]||r;return o?n.createElement(m,l(l({ref:t},u),{},{components:o})):n.createElement(m,l({ref:t},u))}));function y(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,l=new Array(r);l[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var i=2;i<r;i++)l[i]=o[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}p.displayName="MDXCreateElement"},40236:(e,t,o)=>{o.r(t),o.d(t,{Badge:()=>p,Bullet:()=>u,Details:()=>m,SpecifiedBy:()=>d,assets:()=>i,contentTitle:()=>s,default:()=>b,frontMatter:()=>l,metadata:()=>c,toc:()=>y});var n=o(87462),a=o(67294),r=o(3905);const l={id:"colony-status",title:"ColonyStatus",hide_table_of_contents:!1},s=void 0,c={unversionedId:"graphql/objects/colony-status",id:"graphql/objects/colony-status",title:"ColonyStatus",description:"Represents the status of a Colony.",source:"@site/colony/graphql/objects/colony-status.mdx",sourceDirName:"graphql/objects",slug:"/graphql/objects/colony-status",permalink:"/next/graphql/objects/colony-status",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/objects/colony-status.mdx",tags:[],version:"current",frontMatter:{id:"colony-status",title:"ColonyStatus",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"ColonyMetadata",permalink:"/next/graphql/objects/colony-metadata"},next:{title:"ColonyTokens",permalink:"/next/graphql/objects/colony-tokens"}},i={},u=()=>(0,r.kt)(a.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),d=e=>(0,r.kt)(a.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),p=e=>(0,r.kt)(a.Fragment,null,(0,r.kt)("span",{className:"badge badge--"+e.class},e.text)),y=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>ColonyStatus.<b>nativeToken</b></code><Bullet /><code>NativeTokenStatus</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-colonystatusbnativetokenbcodenativetokenstatus-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ColonyStatus.<b>recovery</b></code><Bullet /><code>Boolean</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-colonystatusbrecoverybcodeboolean-",level:4},{value:"Member of",id:"member-of",level:3}],m=e=>{let{dataOpen:t,dataClose:o,children:l,startOpen:s=!1}=e;const[c,i]=(0,a.useState)(s);return(0,r.kt)("details",(0,n.Z)({},c?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,r.kt)("summary",{onClick:e=>{e.preventDefault(),i((e=>!e))},style:{listStyle:"none"}},c?t:o),c&&l)},f={Bullet:u,SpecifiedBy:d,Badge:p,toc:y,Details:m};function b(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},f,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Represents the status of a Colony."),(0,r.kt)("p",null,"This contains important meta information about the Colony's token and other fundamental settings"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"type ColonyStatus {\n  nativeToken: NativeTokenStatus\n  recovery: Boolean\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-colonystatusbnativetokenbcodenativetokenstatus-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"ColonyStatus.",(0,r.kt)("b",null,"nativeToken"))),(0,r.kt)(u,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/objects/native-token-status"},(0,r.kt)("inlineCode",{parentName:"a"},"NativeTokenStatus"))," ",(0,r.kt)(p,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Status information for the Colony's native token.")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-colonystatusbrecoverybcodeboolean-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"ColonyStatus.",(0,r.kt)("b",null,"recovery"))),(0,r.kt)(u,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/scalars/boolean"},(0,r.kt)("inlineCode",{parentName:"a"},"Boolean"))," ",(0,r.kt)(p,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Whether the Colony is in recovery mode.")),(0,r.kt)("h3",{id:"member-of"},"Member of"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/graphql/objects/colony"},(0,r.kt)("inlineCode",{parentName:"a"},"Colony")),"  ",(0,r.kt)(p,{class:"secondary",text:"object",mdxType:"Badge"})))}b.isMDXComponent=!0}}]);