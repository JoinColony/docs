"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[13485],{3905:(e,t,o)=>{o.d(t,{Zo:()=>s,kt:()=>y});var n=o(67294);function l(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){l(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,n,l=function(e,t){if(null==e)return{};var o,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(l[o]=e[o]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(l[o]=e[o])}return l}var d=n.createContext({}),p=function(e){var t=n.useContext(d),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=p(o),y=l,k=u["".concat(d,".").concat(y)]||u[y]||c[y]||r;return o?n.createElement(k,i(i({ref:t},s),{},{components:o})):n.createElement(k,i({ref:t},s))}));function y(e,t){var o=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=o.length,i=new Array(r);i[0]=u;var a={};for(var d in t)hasOwnProperty.call(t,d)&&(a[d]=t[d]);a.originalType=e,a.mdxType="string"==typeof e?e:l,i[1]=a;for(var p=2;p<r;p++)i[p]=o[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},60929:(e,t,o)=>{o.r(t),o.d(t,{Badge:()=>u,Bullet:()=>s,Details:()=>k,SpecifiedBy:()=>c,assets:()=>p,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>d,toc:()=>y});var n=o(87462),l=o(67294),r=o(3905);const i={id:"model-colony-tokens-filter-input",title:"ModelColonyTokensFilterInput",hide_table_of_contents:!1},a=void 0,d={unversionedId:"graphql/inputs/model-colony-tokens-filter-input",id:"graphql/inputs/model-colony-tokens-filter-input",title:"ModelColonyTokensFilterInput",description:"No description",source:"@site/colony/graphql/inputs/model-colony-tokens-filter-input.mdx",sourceDirName:"graphql/inputs",slug:"/graphql/inputs/model-colony-tokens-filter-input",permalink:"/next/graphql/inputs/model-colony-tokens-filter-input",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/inputs/model-colony-tokens-filter-input.mdx",tags:[],version:"current",frontMatter:{id:"model-colony-tokens-filter-input",title:"ModelColonyTokensFilterInput",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"ModelColonyTokensConditionInput",permalink:"/next/graphql/inputs/model-colony-tokens-condition-input"},next:{title:"ModelColonyTypeInput",permalink:"/next/graphql/inputs/model-colony-type-input"}},p={},s=()=>(0,r.kt)(l.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),c=e=>(0,r.kt)(l.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,r.kt)(l.Fragment,null,(0,r.kt)("span",{className:"badge badge--"+e.class},e.text)),y=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyTokensFilterInput.<b>id</b></code><Bullet /><code>ModelIDInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelcolonytokensfilterinputbidbcodemodelidinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyTokensFilterInput.<b>tokenID</b></code><Bullet /><code>ModelIDInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelcolonytokensfilterinputbtokenidbcodemodelidinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyTokensFilterInput.<b>colonyID</b></code><Bullet /><code>ModelIDInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelcolonytokensfilterinputbcolonyidbcodemodelidinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyTokensFilterInput.<b>and</b></code><Bullet /><code>[ModelColonyTokensFilterInput]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelcolonytokensfilterinputbandbcodemodelcolonytokensfilterinput--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyTokensFilterInput.<b>or</b></code><Bullet /><code>[ModelColonyTokensFilterInput]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelcolonytokensfilterinputborbcodemodelcolonytokensfilterinput--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyTokensFilterInput.<b>not</b></code><Bullet /><code>ModelColonyTokensFilterInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelcolonytokensfilterinputbnotbcodemodelcolonytokensfilterinput-",level:4},{value:"Member of",id:"member-of",level:3}],k=e=>{let{dataOpen:t,dataClose:o,children:i,startOpen:a=!1}=e;const[d,p]=(0,l.useState)(a);return(0,r.kt)("details",(0,n.Z)({},d?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,r.kt)("summary",{onClick:e=>{e.preventDefault(),p((e=>!e))},style:{listStyle:"none"}},d?t:o),d&&i)},m={Bullet:s,SpecifiedBy:c,Badge:u,toc:y,Details:k};function f(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"No description"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"input ModelColonyTokensFilterInput {\n  id: ModelIDInput\n  tokenID: ModelIDInput\n  colonyID: ModelIDInput\n  and: [ModelColonyTokensFilterInput]\n  or: [ModelColonyTokensFilterInput]\n  not: ModelColonyTokensFilterInput\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-modelcolonytokensfilterinputbidbcodemodelidinput-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyTokensFilterInput.",(0,r.kt)("b",null,"id"))),(0,r.kt)(s,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-idinput"},(0,r.kt)("inlineCode",{parentName:"a"},"ModelIDInput"))," ",(0,r.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-modelcolonytokensfilterinputbtokenidbcodemodelidinput-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyTokensFilterInput.",(0,r.kt)("b",null,"tokenID"))),(0,r.kt)(s,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-idinput"},(0,r.kt)("inlineCode",{parentName:"a"},"ModelIDInput"))," ",(0,r.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-modelcolonytokensfilterinputbcolonyidbcodemodelidinput-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyTokensFilterInput.",(0,r.kt)("b",null,"colonyID"))),(0,r.kt)(s,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-idinput"},(0,r.kt)("inlineCode",{parentName:"a"},"ModelIDInput"))," ",(0,r.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-modelcolonytokensfilterinputbandbcodemodelcolonytokensfilterinput--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyTokensFilterInput.",(0,r.kt)("b",null,"and"))),(0,r.kt)(s,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-colony-tokens-filter-input"},(0,r.kt)("inlineCode",{parentName:"a"},"[ModelColonyTokensFilterInput]"))," ",(0,r.kt)(u,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,r.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-modelcolonytokensfilterinputborbcodemodelcolonytokensfilterinput--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyTokensFilterInput.",(0,r.kt)("b",null,"or"))),(0,r.kt)(s,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-colony-tokens-filter-input"},(0,r.kt)("inlineCode",{parentName:"a"},"[ModelColonyTokensFilterInput]"))," ",(0,r.kt)(u,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,r.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-modelcolonytokensfilterinputbnotbcodemodelcolonytokensfilterinput-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyTokensFilterInput.",(0,r.kt)("b",null,"not"))),(0,r.kt)(s,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-colony-tokens-filter-input"},(0,r.kt)("inlineCode",{parentName:"a"},"ModelColonyTokensFilterInput"))," ",(0,r.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h3",{id:"member-of"},"Member of"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/graphql/queries/list-colony-tokens"},(0,r.kt)("inlineCode",{parentName:"a"},"listColonyTokens")),"  ",(0,r.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"}),(0,r.kt)(s,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/graphql/inputs/model-colony-tokens-filter-input"},(0,r.kt)("inlineCode",{parentName:"a"},"ModelColonyTokensFilterInput")),"  ",(0,r.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})))}f.isMDXComponent=!0}}]);