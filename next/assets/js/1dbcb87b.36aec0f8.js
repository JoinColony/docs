"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[52203],{3905:(e,o,n)=>{n.d(o,{Zo:()=>s,kt:()=>y});var t=n(67294);function l(e,o,n){return o in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}function i(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,t)}return n}function d(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?i(Object(n),!0).forEach((function(o){l(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}function a(e,o){if(null==e)return{};var n,t,l=function(e,o){if(null==e)return{};var n,t,l={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],o.indexOf(n)>=0||(l[n]=e[n]);return l}(e,o);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var r=t.createContext({}),c=function(e){var o=t.useContext(r),n=o;return e&&(n="function"==typeof e?e(o):d(d({},o),e)),n},s=function(e){var o=c(e.components);return t.createElement(r.Provider,{value:o},e.children)},p={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},u=t.forwardRef((function(e,o){var n=e.components,l=e.mdxType,i=e.originalType,r=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=c(n),y=l,m=u["".concat(r,".").concat(y)]||u[y]||p[y]||i;return n?t.createElement(m,d(d({ref:o},s),{},{components:n})):t.createElement(m,d({ref:o},s))}));function y(e,o){var n=arguments,l=o&&o.mdxType;if("string"==typeof e||l){var i=n.length,d=new Array(i);d[0]=u;var a={};for(var r in o)hasOwnProperty.call(o,r)&&(a[r]=o[r]);a.originalType=e,a.mdxType="string"==typeof e?e:l,d[1]=a;for(var c=2;c<i;c++)d[c]=n[c];return t.createElement.apply(null,d)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},13836:(e,o,n)=>{n.r(o),n.d(o,{Badge:()=>u,Bullet:()=>s,Details:()=>m,SpecifiedBy:()=>p,assets:()=>c,contentTitle:()=>a,default:()=>f,frontMatter:()=>d,metadata:()=>r,toc:()=>y});var t=n(87462),l=n(67294),i=n(3905);const d={id:"model-colony-tokens-condition-input",title:"ModelColonyTokensConditionInput",hide_table_of_contents:!1},a=void 0,r={unversionedId:"graphql/inputs/model-colony-tokens-condition-input",id:"graphql/inputs/model-colony-tokens-condition-input",title:"ModelColonyTokensConditionInput",description:"No description",source:"@site/colony/graphql/inputs/model-colony-tokens-condition-input.mdx",sourceDirName:"graphql/inputs",slug:"/graphql/inputs/model-colony-tokens-condition-input",permalink:"/next/graphql/inputs/model-colony-tokens-condition-input",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/inputs/model-colony-tokens-condition-input.mdx",tags:[],version:"current",frontMatter:{id:"model-colony-tokens-condition-input",title:"ModelColonyTokensConditionInput",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"ModelColonyMetadataFilterInput",permalink:"/next/graphql/inputs/model-colony-metadata-filter-input"},next:{title:"ModelColonyTokensFilterInput",permalink:"/next/graphql/inputs/model-colony-tokens-filter-input"}},c={},s=()=>(0,i.kt)(l.Fragment,null,(0,i.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,i.kt)(l.Fragment,null,"Specification",(0,i.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,i.kt)(l.Fragment,null,(0,i.kt)("span",{className:"badge badge--"+e.class},e.text)),y=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyTokensConditionInput.<b>tokenID</b></code><Bullet /><code>ModelIDInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelcolonytokensconditioninputbtokenidbcodemodelidinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyTokensConditionInput.<b>colonyID</b></code><Bullet /><code>ModelIDInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelcolonytokensconditioninputbcolonyidbcodemodelidinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyTokensConditionInput.<b>and</b></code><Bullet /><code>[ModelColonyTokensConditionInput]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelcolonytokensconditioninputbandbcodemodelcolonytokensconditioninput--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyTokensConditionInput.<b>or</b></code><Bullet /><code>[ModelColonyTokensConditionInput]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelcolonytokensconditioninputborbcodemodelcolonytokensconditioninput--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyTokensConditionInput.<b>not</b></code><Bullet /><code>ModelColonyTokensConditionInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelcolonytokensconditioninputbnotbcodemodelcolonytokensconditioninput-",level:4},{value:"Member of",id:"member-of",level:3}],m=e=>{let{dataOpen:o,dataClose:n,children:d,startOpen:a=!1}=e;const[r,c]=(0,l.useState)(a);return(0,i.kt)("details",(0,t.Z)({},r?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,i.kt)("summary",{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"}},r?o:n),r&&d)},k={Bullet:s,SpecifiedBy:p,Badge:u,toc:y,Details:m};function f(e){let{components:o,...n}=e;return(0,i.kt)("wrapper",(0,t.Z)({},k,n,{components:o,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"No description"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"input ModelColonyTokensConditionInput {\n  tokenID: ModelIDInput\n  colonyID: ModelIDInput\n  and: [ModelColonyTokensConditionInput]\n  or: [ModelColonyTokensConditionInput]\n  not: ModelColonyTokensConditionInput\n}\n")),(0,i.kt)("h3",{id:"fields"},"Fields"),(0,i.kt)("h4",{id:"code-style-fontweight-normal-modelcolonytokensconditioninputbtokenidbcodemodelidinput-"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyTokensConditionInput.",(0,i.kt)("b",null,"tokenID"))),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-idinput"},(0,i.kt)("inlineCode",{parentName:"a"},"ModelIDInput"))," ",(0,i.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h4",{id:"code-style-fontweight-normal-modelcolonytokensconditioninputbcolonyidbcodemodelidinput-"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyTokensConditionInput.",(0,i.kt)("b",null,"colonyID"))),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-idinput"},(0,i.kt)("inlineCode",{parentName:"a"},"ModelIDInput"))," ",(0,i.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h4",{id:"code-style-fontweight-normal-modelcolonytokensconditioninputbandbcodemodelcolonytokensconditioninput--"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyTokensConditionInput.",(0,i.kt)("b",null,"and"))),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-colony-tokens-condition-input"},(0,i.kt)("inlineCode",{parentName:"a"},"[ModelColonyTokensConditionInput]"))," ",(0,i.kt)(u,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,i.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h4",{id:"code-style-fontweight-normal-modelcolonytokensconditioninputborbcodemodelcolonytokensconditioninput--"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyTokensConditionInput.",(0,i.kt)("b",null,"or"))),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-colony-tokens-condition-input"},(0,i.kt)("inlineCode",{parentName:"a"},"[ModelColonyTokensConditionInput]"))," ",(0,i.kt)(u,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,i.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h4",{id:"code-style-fontweight-normal-modelcolonytokensconditioninputbnotbcodemodelcolonytokensconditioninput-"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyTokensConditionInput.",(0,i.kt)("b",null,"not"))),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-colony-tokens-condition-input"},(0,i.kt)("inlineCode",{parentName:"a"},"ModelColonyTokensConditionInput"))," ",(0,i.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h3",{id:"member-of"},"Member of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/graphql/mutations/create-colony-tokens"},(0,i.kt)("inlineCode",{parentName:"a"},"createColonyTokens")),"  ",(0,i.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"p",href:"/graphql/mutations/delete-colony-tokens"},(0,i.kt)("inlineCode",{parentName:"a"},"deleteColonyTokens")),"  ",(0,i.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"p",href:"/graphql/inputs/model-colony-tokens-condition-input"},(0,i.kt)("inlineCode",{parentName:"a"},"ModelColonyTokensConditionInput")),"  ",(0,i.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"p",href:"/graphql/mutations/update-colony-tokens"},(0,i.kt)("inlineCode",{parentName:"a"},"updateColonyTokens")),"  ",(0,i.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"})))}f.isMDXComponent=!0}}]);