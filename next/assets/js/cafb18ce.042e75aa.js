"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[64851],{3905:(e,t,o)=>{o.d(t,{Zo:()=>s,kt:()=>m});var n=o(67294);function l(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function d(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){l(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,n,l=function(e,t){if(null==e)return{};var o,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(l[o]=e[o]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(l[o]=e[o])}return l}var c=n.createContext({}),r=function(e){var t=n.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):d(d({},t),e)),o},s=function(e){var t=r(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,l=e.mdxType,i=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=r(o),m=l,h=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return o?n.createElement(h,d(d({ref:t},s),{},{components:o})):n.createElement(h,d({ref:t},s))}));function m(e,t){var o=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=o.length,d=new Array(i);d[0]=u;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:l,d[1]=a;for(var r=2;r<i;r++)d[r]=o[r];return n.createElement.apply(null,d)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},16802:(e,t,o)=>{o.r(t),o.d(t,{Badge:()=>u,Bullet:()=>s,Details:()=>h,SpecifiedBy:()=>p,assets:()=>r,contentTitle:()=>a,default:()=>f,frontMatter:()=>d,metadata:()=>c,toc:()=>m});var n=o(87462),l=o(67294),i=o(3905);const d={id:"model-watched-colonies-condition-input",title:"ModelWatchedColoniesConditionInput",hide_table_of_contents:!1},a=void 0,c={unversionedId:"graphql/inputs/model-watched-colonies-condition-input",id:"graphql/inputs/model-watched-colonies-condition-input",title:"ModelWatchedColoniesConditionInput",description:"No description",source:"@site/colony/graphql/inputs/model-watched-colonies-condition-input.mdx",sourceDirName:"graphql/inputs",slug:"/graphql/inputs/model-watched-colonies-condition-input",permalink:"/next/graphql/inputs/model-watched-colonies-condition-input",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/inputs/model-watched-colonies-condition-input.mdx",tags:[],version:"current",frontMatter:{id:"model-watched-colonies-condition-input",title:"ModelWatchedColoniesConditionInput",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"ModelUserTokensFilterInput",permalink:"/next/graphql/inputs/model-user-tokens-filter-input"},next:{title:"ModelWatchedColoniesFilterInput",permalink:"/next/graphql/inputs/model-watched-colonies-filter-input"}},r={},s=()=>(0,i.kt)(l.Fragment,null,(0,i.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,i.kt)(l.Fragment,null,"Specification",(0,i.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,i.kt)(l.Fragment,null,(0,i.kt)("span",{className:"badge badge--"+e.class},e.text)),m=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>ModelWatchedColoniesConditionInput.<b>colonyID</b></code><Bullet /><code>ModelIDInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelwatchedcoloniesconditioninputbcolonyidbcodemodelidinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelWatchedColoniesConditionInput.<b>userID</b></code><Bullet /><code>ModelIDInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelwatchedcoloniesconditioninputbuseridbcodemodelidinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelWatchedColoniesConditionInput.<b>and</b></code><Bullet /><code>[ModelWatchedColoniesConditionInput]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelwatchedcoloniesconditioninputbandbcodemodelwatchedcoloniesconditioninput--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelWatchedColoniesConditionInput.<b>or</b></code><Bullet /><code>[ModelWatchedColoniesConditionInput]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelwatchedcoloniesconditioninputborbcodemodelwatchedcoloniesconditioninput--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelWatchedColoniesConditionInput.<b>not</b></code><Bullet /><code>ModelWatchedColoniesConditionInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-modelwatchedcoloniesconditioninputbnotbcodemodelwatchedcoloniesconditioninput-",level:4},{value:"Member of",id:"member-of",level:3}],h=e=>{let{dataOpen:t,dataClose:o,children:d,startOpen:a=!1}=e;const[c,r]=(0,l.useState)(a);return(0,i.kt)("details",(0,n.Z)({},c?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,i.kt)("summary",{onClick:e=>{e.preventDefault(),r((e=>!e))},style:{listStyle:"none"}},c?t:o),c&&d)},y={Bullet:s,SpecifiedBy:p,Badge:u,toc:m,Details:h};function f(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,n.Z)({},y,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"No description"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"input ModelWatchedColoniesConditionInput {\n  colonyID: ModelIDInput\n  userID: ModelIDInput\n  and: [ModelWatchedColoniesConditionInput]\n  or: [ModelWatchedColoniesConditionInput]\n  not: ModelWatchedColoniesConditionInput\n}\n")),(0,i.kt)("h3",{id:"fields"},"Fields"),(0,i.kt)("h4",{id:"code-style-fontweight-normal-modelwatchedcoloniesconditioninputbcolonyidbcodemodelidinput-"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"ModelWatchedColoniesConditionInput.",(0,i.kt)("b",null,"colonyID"))),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-idinput"},(0,i.kt)("inlineCode",{parentName:"a"},"ModelIDInput"))," ",(0,i.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h4",{id:"code-style-fontweight-normal-modelwatchedcoloniesconditioninputbuseridbcodemodelidinput-"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"ModelWatchedColoniesConditionInput.",(0,i.kt)("b",null,"userID"))),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-idinput"},(0,i.kt)("inlineCode",{parentName:"a"},"ModelIDInput"))," ",(0,i.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h4",{id:"code-style-fontweight-normal-modelwatchedcoloniesconditioninputbandbcodemodelwatchedcoloniesconditioninput--"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"ModelWatchedColoniesConditionInput.",(0,i.kt)("b",null,"and"))),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-watched-colonies-condition-input"},(0,i.kt)("inlineCode",{parentName:"a"},"[ModelWatchedColoniesConditionInput]"))," ",(0,i.kt)(u,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,i.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h4",{id:"code-style-fontweight-normal-modelwatchedcoloniesconditioninputborbcodemodelwatchedcoloniesconditioninput--"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"ModelWatchedColoniesConditionInput.",(0,i.kt)("b",null,"or"))),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-watched-colonies-condition-input"},(0,i.kt)("inlineCode",{parentName:"a"},"[ModelWatchedColoniesConditionInput]"))," ",(0,i.kt)(u,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,i.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h4",{id:"code-style-fontweight-normal-modelwatchedcoloniesconditioninputbnotbcodemodelwatchedcoloniesconditioninput-"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"ModelWatchedColoniesConditionInput.",(0,i.kt)("b",null,"not"))),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-watched-colonies-condition-input"},(0,i.kt)("inlineCode",{parentName:"a"},"ModelWatchedColoniesConditionInput"))," ",(0,i.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h3",{id:"member-of"},"Member of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/graphql/mutations/create-watched-colonies"},(0,i.kt)("inlineCode",{parentName:"a"},"createWatchedColonies")),"  ",(0,i.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"p",href:"/graphql/mutations/delete-watched-colonies"},(0,i.kt)("inlineCode",{parentName:"a"},"deleteWatchedColonies")),"  ",(0,i.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"}),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"p",href:"/graphql/inputs/model-watched-colonies-condition-input"},(0,i.kt)("inlineCode",{parentName:"a"},"ModelWatchedColoniesConditionInput")),"  ",(0,i.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"p",href:"/graphql/mutations/update-watched-colonies"},(0,i.kt)("inlineCode",{parentName:"a"},"updateWatchedColonies")),"  ",(0,i.kt)(u,{class:"secondary",text:"mutation",mdxType:"Badge"})))}f.isMDXComponent=!0}}]);