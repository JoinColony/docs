"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6189],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var l=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,o=function(e,t){if(null==e)return{};var n,l,o={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=l.createContext({}),c=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return l.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=c(n),p=o,y=m["".concat(s,".").concat(p)]||m[p]||u[p]||a;return n?l.createElement(y,r(r({ref:t},d),{},{components:n})):l.createElement(y,r({ref:t},d))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var c=2;c<a;c++)r[c]=n[c];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},25621:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>m,Bullet:()=>d,Details:()=>y,SpecifiedBy:()=>u,assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var l=n(87462),o=n(67294),a=n(3905);const r={id:"list-colony-funds-claims",title:"listColonyFundsClaims",hide_table_of_contents:!1},i=void 0,s={unversionedId:"graphql/queries/list-colony-funds-claims",id:"graphql/queries/list-colony-funds-claims",title:"listColonyFundsClaims",description:"No description",source:"@site/colony/graphql/queries/list-colony-funds-claims.mdx",sourceDirName:"graphql/queries",slug:"/graphql/queries/list-colony-funds-claims",permalink:"/next/graphql/queries/list-colony-funds-claims",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/queries/list-colony-funds-claims.mdx",tags:[],version:"current",frontMatter:{id:"list-colony-funds-claims",title:"listColonyFundsClaims",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"listColonyExtensions",permalink:"/next/graphql/queries/list-colony-extensions"},next:{title:"listColonyMetadata",permalink:"/next/graphql/queries/list-colony-metadata"}},c={},d=()=>(0,a.kt)(o.Fragment,null,(0,a.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),u=e=>(0,a.kt)(o.Fragment,null,"Specification",(0,a.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,a.kt)(o.Fragment,null,(0,a.kt)("span",{className:"badge badge--"+e.class},e.text)),p=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>listColonyFundsClaims.<b>filter</b></code><Bullet /><code>ModelColonyFundsClaimFilterInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-listcolonyfundsclaimsbfilterbcodemodelcolonyfundsclaimfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>listColonyFundsClaims.<b>limit</b></code><Bullet /><code>Int</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-listcolonyfundsclaimsblimitbcodeint-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>listColonyFundsClaims.<b>nextToken</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-listcolonyfundsclaimsbnexttokenbcodestring-",level:4},{value:"Type",id:"type",level:3},{value:'<code>ModelColonyFundsClaimConnection</code> <Badge class="secondary" text="object"/>',id:"modelcolonyfundsclaimconnection-",level:4}],y=e=>{let{dataOpen:t,dataClose:n,children:r,startOpen:i=!1}=e;const[s,c]=(0,o.useState)(i);return(0,a.kt)("details",(0,l.Z)({},s?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,a.kt)("summary",{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"}},s?t:n),s&&r)},f={Bullet:d,SpecifiedBy:u,Badge:m,toc:p,Details:y};function g(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,l.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"No description"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"listColonyFundsClaims(\n  filter: ModelColonyFundsClaimFilterInput\n  limit: Int\n  nextToken: String\n): ModelColonyFundsClaimConnection\n")),(0,a.kt)("h3",{id:"arguments"},"Arguments"),(0,a.kt)("h4",{id:"code-style-fontweight-normal-listcolonyfundsclaimsbfilterbcodemodelcolonyfundsclaimfilterinput-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"listColonyFundsClaims.",(0,a.kt)("b",null,"filter"))),(0,a.kt)(d,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-colony-funds-claim-filter-input"},(0,a.kt)("inlineCode",{parentName:"a"},"ModelColonyFundsClaimFilterInput"))," ",(0,a.kt)(m,{class:"secondary",text:"input",mdxType:"Badge"})),(0,a.kt)("blockquote",null),(0,a.kt)("h4",{id:"code-style-fontweight-normal-listcolonyfundsclaimsblimitbcodeint-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"listColonyFundsClaims.",(0,a.kt)("b",null,"limit"))),(0,a.kt)(d,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/graphql/scalars/int"},(0,a.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,a.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,a.kt)("blockquote",null),(0,a.kt)("h4",{id:"code-style-fontweight-normal-listcolonyfundsclaimsbnexttokenbcodestring-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"listColonyFundsClaims.",(0,a.kt)("b",null,"nextToken"))),(0,a.kt)(d,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/graphql/scalars/string"},(0,a.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,a.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,a.kt)("blockquote",null),(0,a.kt)("h3",{id:"type"},"Type"),(0,a.kt)("h4",{id:"modelcolonyfundsclaimconnection-"},(0,a.kt)("a",{parentName:"h4",href:"/graphql/objects/model-colony-funds-claim-connection"},(0,a.kt)("inlineCode",{parentName:"a"},"ModelColonyFundsClaimConnection"))," ",(0,a.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})),(0,a.kt)("blockquote",null))}g.isMDXComponent=!0}}]);