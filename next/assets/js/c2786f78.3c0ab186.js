"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2263],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(p,".").concat(m)]||d[m]||l[m]||i;return n?o.createElement(f,a(a({ref:t},u),{},{components:n})):o.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},429:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const i={description:"How to Install the Governance (Reputation Weighted) Extension. Formerly named the Motions & Disputes (Reputation) Extension."},a="\ud83d\udc69\u2696 Governance (Reputation Weighted)",s={unversionedId:"use/motions-and-disputes/README",id:"use/motions-and-disputes/README",title:"\ud83d\udc69\u2696 Governance (Reputation Weighted)",description:"How to Install the Governance (Reputation Weighted) Extension. Formerly named the Motions & Disputes (Reputation) Extension.",source:"@site/colony/use/motions-and-disputes/README.md",sourceDirName:"use/motions-and-disputes",slug:"/use/motions-and-disputes/",permalink:"/next/use/motions-and-disputes/",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/use/motions-and-disputes/README.md",tags:[],version:"current",frontMatter:{description:"How to Install the Governance (Reputation Weighted) Extension. Formerly named the Motions & Disputes (Reputation) Extension."},sidebar:"use",previous:{title:"Disclaimers",permalink:"/next/use/beta"},next:{title:"Motions and Disputes",permalink:"/next/use/motions-and-disputes/"}},p={},c=[{value:"Introduction",id:"introduction",level:2}],u={toc:c};function l(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-governance-reputation-weighted"},"\ud83d\udc69\u2696 Governance (Reputation Weighted)"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Voting is not an efficient way of making decisions, even in a decentralised organisation. In a colony therefore, voting on proposals should be the exception, not the norm. \\\n\\\nIn Colony, if everyone agrees on something, it's unnecessary for everyone to actively state that they agree\u2014simply ",(0,r.kt)("em",{parentName:"p"},"not disagreeing"),' is sufficient. Only if someone does disagree, and wants to attempt to prevent that thing from happening, is it necessary for people to actually vote. We call this principle "lazy consensus" and it keeps your DAO productive while keeping decision-making decentralised. \\\n\\\nThe Governance (Reputation Weighted) feature allows any member of your colony to propose a ',(0,r.kt)("em",{parentName:"p"},"Motion")," to take an ",(0,r.kt)("em",{parentName:"p"},"Action")," that will pass after a security delay unless somebody ",(0,r.kt)("em",{parentName:"p"},"Objects"),". This applies to all ",(0,r.kt)("a",{parentName:"p",href:"https://www.notion.so/page-Actions-8473af3e972d48c0b95bd0c5a7f7c771"},"Actions"),", such as creating an expenditure, managing funds, or managing teams."))}l.isMDXComponent=!0}}]);