"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[62422],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>y});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var i=n.createContext({}),d=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=d(a),y=o,m=u["".concat(i,".").concat(y)]||u[y]||p[y]||r;return a?n.createElement(m,l(l({ref:t},s),{},{components:a})):n.createElement(m,l({ref:t},s))}));function y(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,l=new Array(r);l[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var d=2;d<r;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6304:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>u,Bullet:()=>s,Details:()=>m,SpecifiedBy:()=>p,assets:()=>d,contentTitle:()=>c,default:()=>g,frontMatter:()=>l,metadata:()=>i,toc:()=>y});var n=a(87462),o=a(67294),r=a(3905);const l={id:"create-colony-metadata",title:"createColonyMetadata",hide_table_of_contents:!1},c=void 0,i={unversionedId:"graphql/mutations/create-colony-metadata",id:"graphql/mutations/create-colony-metadata",title:"createColonyMetadata",description:"No description",source:"@site/colony/graphql/mutations/create-colony-metadata.mdx",sourceDirName:"graphql/mutations",slug:"/graphql/mutations/create-colony-metadata",permalink:"/next/graphql/mutations/create-colony-metadata",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/mutations/create-colony-metadata.mdx",tags:[],version:"current",frontMatter:{id:"create-colony-metadata",title:"createColonyMetadata",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"createColonyFundsClaim",permalink:"/next/graphql/mutations/create-colony-funds-claim"},next:{title:"createColonyTokens",permalink:"/next/graphql/mutations/create-colony-tokens"}},d={},s=()=>(0,r.kt)(o.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,r.kt)(o.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,r.kt)(o.Fragment,null,(0,r.kt)("span",{className:"badge badge--"+e.class},e.text)),y=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>createColonyMetadata.<b>input</b></code><Bullet /><code>CreateColonyMetadataInput!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-createcolonymetadatabinputbcodecreatecolonymetadatainput--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>createColonyMetadata.<b>condition</b></code><Bullet /><code>ModelColonyMetadataConditionInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-createcolonymetadatabconditionbcodemodelcolonymetadataconditioninput-",level:4},{value:"Type",id:"type",level:3},{value:'<code>ColonyMetadata</code> <Badge class="secondary" text="object"/>',id:"colonymetadata-",level:4}],m=e=>{let{dataOpen:t,dataClose:a,children:l,startOpen:c=!1}=e;const[i,d]=(0,o.useState)(c);return(0,r.kt)("details",(0,n.Z)({},i?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,r.kt)("summary",{onClick:e=>{e.preventDefault(),d((e=>!e))},style:{listStyle:"none"}},i?t:a),i&&l)},f={Bullet:s,SpecifiedBy:p,Badge:u,toc:y,Details:m};function g(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"No description"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"createColonyMetadata(\n  input: CreateColonyMetadataInput!\n  condition: ModelColonyMetadataConditionInput\n): ColonyMetadata\n")),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-createcolonymetadatabinputbcodecreatecolonymetadatainput--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"createColonyMetadata.",(0,r.kt)("b",null,"input"))),(0,r.kt)(s,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/inputs/create-colony-metadata-input"},(0,r.kt)("inlineCode",{parentName:"a"},"CreateColonyMetadataInput!"))," ",(0,r.kt)(u,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-createcolonymetadatabconditionbcodemodelcolonymetadataconditioninput-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"createColonyMetadata.",(0,r.kt)("b",null,"condition"))),(0,r.kt)(s,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-colony-metadata-condition-input"},(0,r.kt)("inlineCode",{parentName:"a"},"ModelColonyMetadataConditionInput"))," ",(0,r.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h3",{id:"type"},"Type"),(0,r.kt)("h4",{id:"colonymetadata-"},(0,r.kt)("a",{parentName:"h4",href:"/graphql/objects/colony-metadata"},(0,r.kt)("inlineCode",{parentName:"a"},"ColonyMetadata"))," ",(0,r.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null))}g.isMDXComponent=!0}}]);