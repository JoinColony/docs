"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[1193],{8860:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>u});var a=t(7953);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),y=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=y(e.components);return a.createElement(p.Provider,{value:n},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=y(t),m=r,u=d["".concat(p,".").concat(m)]||d[m]||g[m]||i;return t?a.createElement(u,o(o({ref:n},s),{},{components:t})):a.createElement(u,o({ref:n},s))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var y=2;y<i;y++)o[y]=t[y];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},529:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>y});var a=t(4432),r=(t(7953),t(8860));const i={},o="Class: OneTxPayment",l={unversionedId:"api/classes/OneTxPayment",id:"api/classes/OneTxPayment",title:"Class: OneTxPayment",description:"OneTxPayment (One Transaction Payment)",source:"@site/vendor/colonyJS/packages/sdk/docs/api/classes/OneTxPayment.md",sourceDirName:"api/classes",slug:"/api/classes/OneTxPayment",permalink:"/next/colonysdk/api/classes/OneTxPayment",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Class: MetaTxCreator<C, M, E, MD\\>",permalink:"/next/colonysdk/api/classes/MetaTxCreator"},next:{title:"Class: PinataAdapter",permalink:"/next/colonysdk/api/classes/PinataAdapter"}},p={},y=[{value:"<code>OneTxPayment</code> (One Transaction Payment)",id:"onetxpayment-one-transaction-payment",level:2},{value:"Properties",id:"properties",level:2},{value:"address",id:"address",level:3},{value:"version",id:"version",level:3},{value:"extensionType",id:"extensiontype",level:3},{value:"supportedVersions",id:"supportedversions",level:3},{value:"Methods",id:"methods",level:2},{value:"pay",id:"pay",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Required permissions for forced transaction:",id:"required-permissions-for-forced-transaction",level:4},{value:"Event data",id:"event-data",level:4},{value:"upgrade",id:"upgrade",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Event data",id:"event-data-1",level:4},{value:"connect",id:"connect",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"getLatestSupportedVersion",id:"getlatestsupportedversion",level:3},{value:"Returns",id:"returns-3",level:4}],s={toc:y},d="wrapper";function g(e){let{components:n,...t}=e;return(0,r.yg)(d,(0,a.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"class-onetxpayment"},"Class: OneTxPayment"),(0,r.yg)("h2",{id:"onetxpayment-one-transaction-payment"},(0,r.yg)("inlineCode",{parentName:"h2"},"OneTxPayment")," (One Transaction Payment)"),(0,r.yg)("p",null,"Ordinarily payments require more than one transaction, because the payment lifecycle requires more than one permissioned role."),(0,r.yg)("p",null,"In some use cases, there might be a need for one authorized individual to be able to create, funds, and finalize a payment within a single transaction."),(0,r.yg)("p",null,"The OneTxPayment extension adds this functionality by adding a makePayment function which requires the caller to have both Funding and administration ability within the domain of the payment."),(0,r.yg)("p",null,"Extension therefore requires Administration and Funding roles to function."),(0,r.yg)("p",null,"Note: if you deployed your Colony using the Dapp, the OneTxPayment extension is already installed for you"),(0,r.yg)("h2",{id:"properties"},"Properties"),(0,r.yg)("h3",{id:"address"},"address"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("strong",{parentName:"p"},"address"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")),(0,r.yg)("p",null,"The extension contract's address"),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"version"},"version"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("strong",{parentName:"p"},"version"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"2")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"p"},"3")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"p"},"4")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"p"},"5")),(0,r.yg)("p",null,"The extension contract's version"),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"extensiontype"},"extensionType"),(0,r.yg)("p",null,"\u25aa ",(0,r.yg)("inlineCode",{parentName:"p"},"Static")," ",(0,r.yg)("strong",{parentName:"p"},"extensionType"),": ",(0,r.yg)("a",{parentName:"p",href:"/next/colonysdk/api/enums/Extension#onetxpayment"},(0,r.yg)("inlineCode",{parentName:"a"},"OneTxPayment"))," = ",(0,r.yg)("inlineCode",{parentName:"p"},"Extension.OneTxPayment")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"supportedversions"},"supportedVersions"),(0,r.yg)("p",null,"\u25aa ",(0,r.yg)("inlineCode",{parentName:"p"},"Static")," ",(0,r.yg)("strong",{parentName:"p"},"supportedVersions"),": ({ ",(0,r.yg)("inlineCode",{parentName:"p"},"factory"),": typeof ",(0,r.yg)("inlineCode",{parentName:"p"},"OneTxPayment__factory")," = OneTxPaymentFactory3; ",(0,r.yg)("inlineCode",{parentName:"p"},"version"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"number")," = 3 } ","|"," { ",(0,r.yg)("inlineCode",{parentName:"p"},"factory"),": typeof ",(0,r.yg)("inlineCode",{parentName:"p"},"OneTxPayment__factory")," = OneTxPaymentFactory4; ",(0,r.yg)("inlineCode",{parentName:"p"},"version"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"number")," = 4 })[]"),(0,r.yg)("p",null,"The currently supported OneTXPayment contract version. If the extension contract is not on this version it has to be upgraded."),(0,r.yg)("h2",{id:"methods"},"Methods"),(0,r.yg)("h3",{id:"pay"},"pay"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"pay"),"(",(0,r.yg)("inlineCode",{parentName:"p"},"recipient"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"amount"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"teamId?"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"tokenAddress?"),"): ",(0,r.yg)("a",{parentName:"p",href:"/next/colonysdk/api/classes/ColonyTxCreator"},(0,r.yg)("inlineCode",{parentName:"a"},"ColonyTxCreator")),"<",(0,r.yg)("inlineCode",{parentName:"p"},"SupportedOneTxPaymentContract"),", ",(0,r.yg)("inlineCode",{parentName:"p"},'"makePaymentFundedFromDomain"'),", { ",(0,r.yg)("inlineCode",{parentName:"p"},"agent?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"fundamentalId?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"nPayouts?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.yg)("a",{parentName:"p",href:"/next/colonysdk/api/enums/MetadataType"},(0,r.yg)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.yg)("p",null,"Make a payment to a single or multiple addresses using one or more tokens"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Requires the ",(0,r.yg)("inlineCode",{parentName:"p"},"OneTxPayment")," extension to be installed for the Colony (this is usually the case for Colonies created via the Dapp). Note that most tokens use 18 decimals, so add a bunch of zeros or use our ",(0,r.yg)("inlineCode",{parentName:"p"},"w")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"toWei")," functions (see example)"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"import { Id, Tokens, w } from '@colony/sdk';\n\n// Immediately executing async function\n(async function() {\n  // Pay 10 XDAI (on Gnosis chain) from the root domain to the following address\n  // (forced transaction example)\n  await colony.ext.oneTx.pay(\n     '0xb77D57F4959eAfA0339424b83FcFaf9c15407461',\n     w`10`,\n     Id.RootDomain,\n     Tokens.Gnosis.XDAI,\n  ).tx().mined();\n})();\n")),(0,r.yg)("h4",{id:"parameters"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"recipient")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"td"},"string"),"[]"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Wallet address of account to send the funds to (also awarded reputation when sending the native token) - can also be an array of addresses to pay")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"amount")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"BigNumberish")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"td"},"BigNumberish"),"[]"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Amount to pay in wei - can also be an array of amounts for the different tokens")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"teamId?")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"BigNumberish")),(0,r.yg)("td",{parentName:"tr",align:"left"},"The team to use to send the funds from. Has to have funding of at least the amount you need to send. See ",(0,r.yg)("a",{parentName:"td",href:"/next/colonysdk/api/classes/Colony#movefundstoteam"},"moveFundsToTeam"),". Defaults to the Colony's root team")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"tokenAddress?")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"td"},"string"),"[]"),(0,r.yg)("td",{parentName:"tr",align:"left"},"The address of the token to make the payment in. Default is the Colony's native token - can also be an array of token addresses (needs to be the same length as ",(0,r.yg)("inlineCode",{parentName:"td"},"amount"),")")))),(0,r.yg)("h4",{id:"returns"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/next/colonysdk/api/classes/ColonyTxCreator"},(0,r.yg)("inlineCode",{parentName:"a"},"ColonyTxCreator")),"<",(0,r.yg)("inlineCode",{parentName:"p"},"SupportedOneTxPaymentContract"),", ",(0,r.yg)("inlineCode",{parentName:"p"},'"makePaymentFundedFromDomain"'),", { ",(0,r.yg)("inlineCode",{parentName:"p"},"agent?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"fundamentalId?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"nPayouts?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.yg)("a",{parentName:"p",href:"/next/colonysdk/api/enums/MetadataType"},(0,r.yg)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.yg)("p",null,"A transaction creator"),(0,r.yg)("h4",{id:"required-permissions-for-forced-transaction"},"Required permissions for forced transaction:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/next/colonysdk/api/enums/ColonyRole#administration"},"Administration"),", ",(0,r.yg)("a",{parentName:"li",href:"/next/colonysdk/api/enums/ColonyRole#funding"},"Funding"))),(0,r.yg)("h4",{id:"event-data"},"Event data"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Property"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"agent")),(0,r.yg)("td",{parentName:"tr",align:"left"},"string"),(0,r.yg)("td",{parentName:"tr",align:"left"},"The address that is responsible for triggering this event")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"fundamentalId")),(0,r.yg)("td",{parentName:"tr",align:"left"},"BigNumber"),(0,r.yg)("td",{parentName:"tr",align:"left"},"The newly added payment id")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"nPayouts")),(0,r.yg)("td",{parentName:"tr",align:"left"},"BigNumber"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Number of payouts in total")))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"upgrade"},"upgrade"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"upgrade"),"(",(0,r.yg)("inlineCode",{parentName:"p"},"toVersion?"),"): ",(0,r.yg)("a",{parentName:"p",href:"/next/colonysdk/api/classes/ColonyTxCreator"},(0,r.yg)("inlineCode",{parentName:"a"},"ColonyTxCreator")),"<",(0,r.yg)("a",{parentName:"p",href:"/next/colonysdk/api/#supportedcolonycontract"},(0,r.yg)("inlineCode",{parentName:"a"},"SupportedColonyContract")),", ",(0,r.yg)("inlineCode",{parentName:"p"},'"upgradeExtension"'),", { ",(0,r.yg)("inlineCode",{parentName:"p"},"colony?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"extensionId?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"version?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.yg)("a",{parentName:"p",href:"/next/colonysdk/api/enums/MetadataType"},(0,r.yg)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.yg)("p",null,"Upgrade this extension to the next or a custom version"),(0,r.yg)("p",null,"This method upgrades this extension to a specified version or, if no version is provided to the next higher version."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Only users with ",(0,r.yg)("em",{parentName:"li"},"Root")," role are allowed to upgrade an extension (or another extension with appropriate permissions)"),(0,r.yg)("li",{parentName:"ul"},"Downgrading of extensions is not possible")),(0,r.yg)("h4",{id:"parameters-1"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"toVersion?")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"BigNumberish")),(0,r.yg)("td",{parentName:"tr",align:"left"},"Specify a custom version to upgrade the extension to")))),(0,r.yg)("h4",{id:"returns-1"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/next/colonysdk/api/classes/ColonyTxCreator"},(0,r.yg)("inlineCode",{parentName:"a"},"ColonyTxCreator")),"<",(0,r.yg)("a",{parentName:"p",href:"/next/colonysdk/api/#supportedcolonycontract"},(0,r.yg)("inlineCode",{parentName:"a"},"SupportedColonyContract")),", ",(0,r.yg)("inlineCode",{parentName:"p"},'"upgradeExtension"'),", { ",(0,r.yg)("inlineCode",{parentName:"p"},"colony?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"extensionId?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"version?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.yg)("a",{parentName:"p",href:"/next/colonysdk/api/enums/MetadataType"},(0,r.yg)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.yg)("p",null,"A transaction creator"),(0,r.yg)("h4",{id:"event-data-1"},"Event data"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Property"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"extensionId")),(0,r.yg)("td",{parentName:"tr",align:"left"},"string"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Extension id (name of the extension) that was upgraded")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"oldVersion")),(0,r.yg)("td",{parentName:"tr",align:"left"},"BigNumber"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Version of the extension before the upgrade")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"newVersion")),(0,r.yg)("td",{parentName:"tr",align:"left"},"BigNumber"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Version of the extension after the upgrade")))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"connect"},"connect"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"p"},"Static")," ",(0,r.yg)("strong",{parentName:"p"},"connect"),"(",(0,r.yg)("inlineCode",{parentName:"p"},"colony"),"): ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("a",{parentName:"p",href:"/next/colonysdk/api/classes/OneTxPayment"},(0,r.yg)("inlineCode",{parentName:"a"},"OneTxPayment")),">"),(0,r.yg)("p",null,"Create an instance of a OneTxPayment extension client and connect the Colony to it"),(0,r.yg)("p",null,"Only supports the latest version of the OneTxPayment contract"),(0,r.yg)("h4",{id:"parameters-2"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"colony")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("a",{parentName:"td",href:"/next/colonysdk/api/classes/Colony"},(0,r.yg)("inlineCode",{parentName:"a"},"Colony"))),(0,r.yg)("td",{parentName:"tr",align:"left"},"The Colony instance")))),(0,r.yg)("h4",{id:"returns-2"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("a",{parentName:"p",href:"/next/colonysdk/api/classes/OneTxPayment"},(0,r.yg)("inlineCode",{parentName:"a"},"OneTxPayment")),">"),(0,r.yg)("p",null,"A connected OneTxPayment instance"),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"getlatestsupportedversion"},"getLatestSupportedVersion"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"p"},"Static")," ",(0,r.yg)("strong",{parentName:"p"},"getLatestSupportedVersion"),"(): ",(0,r.yg)("inlineCode",{parentName:"p"},"2")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"p"},"3")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"p"},"4")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"p"},"5")),(0,r.yg)("h4",{id:"returns-3"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"2")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"p"},"1")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"p"},"3")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"p"},"4")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"p"},"5")))}g.isMDXComponent=!0}}]);