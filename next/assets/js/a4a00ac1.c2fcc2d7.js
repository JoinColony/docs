"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8400],{3905:(e,t,a)=>{a.d(t,{Zo:()=>k,kt:()=>N});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},k=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,k=p(e,["components","mdxType","originalType","parentName"]),s=d(a),N=r,c=s["".concat(o,".").concat(N)]||s[N]||m[N]||l;return a?n.createElement(c,i(i({ref:t},k),{},{components:a})):n.createElement(c,i({ref:t},k))}));function N(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=s;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},5407:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var n=a(87462),r=(a(67294),a(3905));const l={},i="API",p={unversionedId:"api/README",id:"api/README",title:"API",description:"Namespaces",source:"@site/vendor/colonyJS/packages/sdk/docs/api/README.md",sourceDirName:"api",slug:"/api/",permalink:"/next/colonysdk/api/",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Metadata within Colony",permalink:"/next/colonysdk/guides/metadata"},next:{title:"Class: CloudflareReadonlyAdapter",permalink:"/next/colonysdk/api/classes/CloudflareReadonlyAdapter"}},o={},d=[{value:"Namespaces",id:"namespaces",level:2},{value:"Enumerations",id:"enumerations",level:2},{value:"Classes",id:"classes",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"Data",id:"data",level:3},{value:"Domain",id:"domain",level:3},{value:"EventSource",id:"eventsource",level:3},{value:"Metadata",id:"metadata",level:3},{value:"MetadataEvent",id:"metadataevent",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Motion",id:"motion",level:3},{value:"SignerOrProvider",id:"signerorprovider",level:3},{value:"SupportedColonyContract",id:"supportedcolonycontract",level:3},{value:"Token",id:"token",level:3},{value:"Variables",id:"variables",level:2},{value:"ERC20Interface",id:"erc20interface",level:3},{value:"ERC2612Interface",id:"erc2612interface",level:3},{value:"ERC721Interface",id:"erc721interface",level:3},{value:"ExtensionVersions",id:"extensionversions",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"IpfsMetadataEvents",id:"ipfsmetadataevents",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"METADATA_VERSION",id:"metadata_version",level:3},{value:"Functions",id:"functions",level:2},{value:"addressesAreEqual",id:"addressesareequal",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"createMetadataFor",id:"createmetadatafor",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"getEventMetadataVersion",id:"geteventmetadataversion",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"getToken",id:"gettoken",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"isExtensionCompatible",id:"isextensioncompatible",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"parseEventMetadata",id:"parseeventmetadata",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"parseLogs",id:"parselogs",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"toEth",id:"toeth",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"toWei",id:"towei",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"w",id:"w",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4}],k={toc:d};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api"},"API"),(0,r.kt)("h2",{id:"namespaces"},"Namespaces"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/modules/Tokens"},"Tokens"))),(0,r.kt)("h2",{id:"enumerations"},"Enumerations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/enums/ColonyRole"},"ColonyRole")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/enums/ColonyRpcEndpoint"},"ColonyRpcEndpoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/enums/Extension"},"Extension")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/enums/Id"},"Id")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/enums/MetadataType"},"MetadataType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/enums/MotionState"},"MotionState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/enums/Network"},"Network")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/enums/SupportedExtension"},"SupportedExtension")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/enums/TeamColor"},"TeamColor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/enums/Vote"},"Vote"))),(0,r.kt)("h2",{id:"classes"},"Classes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/CloudflareReadonlyAdapter"},"CloudflareReadonlyAdapter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/Colony"},"Colony")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/ColonyEventManager"},"ColonyEventManager")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/ColonyNetwork"},"ColonyNetwork")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/ColonyToken"},"ColonyToken")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/ColonyTxCreator"},"ColonyTxCreator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/ERC20Token"},"ERC20Token")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/ERC2612Token"},"ERC2612Token")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/IpfsMetadata"},"IpfsMetadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/MetaTxCreator"},"MetaTxCreator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/OneTxPayment"},"OneTxPayment")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/PinataAdapter"},"PinataAdapter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/ReputationClient"},"ReputationClient")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/TokenLocking"},"TokenLocking")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/TxCreator"},"TxCreator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/classes/VotingReputation"},"VotingReputation"))),(0,r.kt)("h2",{id:"interfaces"},"Interfaces"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/AnnotationData"},"AnnotationData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/AnnotationMetadata"},"AnnotationMetadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/BaseContract"},"BaseContract")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/ColonyData"},"ColonyData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/ColonyEvent"},"ColonyEvent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/ColonyEventManagerOptions"},"ColonyEventManagerOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/ColonyFilter"},"ColonyFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/ColonyMetaTransaction"},"ColonyMetaTransaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/ColonyMetadata"},"ColonyMetadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/ColonyMultiFilter"},"ColonyMultiFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/ColonyNetworkOptions"},"ColonyNetworkOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/ColonyTopic"},"ColonyTopic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/ColonyTransaction"},"ColonyTransaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/ContractReceipt"},"ContractReceipt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/ContractTransaction"},"ContractTransaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/DataTypeMap"},"DataTypeMap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/DecisionData"},"DecisionData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/DecisionMetadata"},"DecisionMetadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/DomainData"},"DomainData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/DomainMetadata"},"DomainMetadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/Ethers6Filter"},"Ethers6Filter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/Ethers6FilterByBlockHash"},"Ethers6FilterByBlockHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/EventData"},"EventData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/IpfsAdapter"},"IpfsAdapter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/MetaTxBaseContract"},"MetaTxBaseContract")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/MetadataTypeMap"},"MetadataTypeMap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/MiscData"},"MiscData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/MiscMetadata"},"MiscMetadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/ParsedLogTransactionReceipt"},"ParsedLogTransactionReceipt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/PermissionConfig"},"PermissionConfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/SafeInfo"},"SafeInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/SupportedExtensions"},"SupportedExtensions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/TokenData"},"TokenData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/TransactionResponse"},"TransactionResponse")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/TxConfig"},"TxConfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/colonysdk/api/interfaces/TxCreatorConfig"},"TxCreatorConfig"))),(0,r.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,r.kt)("h3",{id:"data"},"Data"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"Data"),": ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/AnnotationData"},(0,r.kt)("inlineCode",{parentName:"a"},"AnnotationData"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/ColonyData"},(0,r.kt)("inlineCode",{parentName:"a"},"ColonyData"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/DecisionData"},(0,r.kt)("inlineCode",{parentName:"a"},"DecisionData"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/DomainData"},(0,r.kt)("inlineCode",{parentName:"a"},"DomainData"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/MiscData"},(0,r.kt)("inlineCode",{parentName:"a"},"MiscData"))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"domain"},"Domain"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"Domain"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"ColonyDataTypes10.DomainStructOutput")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"ColonyDataTypes11.DomainStructOutput")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"ColonyDataTypes12.DomainStructOutput")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"eventsource"},"EventSource"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"EventSource"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"BaseContract")),(0,r.kt)("p",null,"A valid eventsource (currently just an ethers.js ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/BaseContract"},"BaseContract"),")"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"metadata"},"Metadata"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"Metadata"),": ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/AnnotationMetadata"},(0,r.kt)("inlineCode",{parentName:"a"},"AnnotationMetadata"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/ColonyMetadata"},(0,r.kt)("inlineCode",{parentName:"a"},"ColonyMetadata"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/DecisionMetadata"},(0,r.kt)("inlineCode",{parentName:"a"},"DecisionMetadata"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/DomainMetadata"},(0,r.kt)("inlineCode",{parentName:"a"},"DomainMetadata"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/MiscMetadata"},(0,r.kt)("inlineCode",{parentName:"a"},"MiscMetadata"))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"metadataevent"},"MetadataEvent"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"MetadataEvent"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"K"),">",": typeof ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/#ipfsmetadataevents"},(0,r.kt)("inlineCode",{parentName:"a"},"IpfsMetadataEvents")),"[",(0,r.kt)("inlineCode",{parentName:"p"},"K"),"]"),(0,r.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"K")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/next/colonysdk/api/enums/MetadataType"},(0,r.kt)("inlineCode",{parentName:"a"},"MetadataType")))))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"motion"},"Motion"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"Motion"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"VotingReputationDataTypes7.MotionStructOutput")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"VotingReputationDataTypes8.MotionStructOutput")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"VotingReputationDataTypes9.MotionStructOutput")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"signerorprovider"},"SignerOrProvider"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SignerOrProvider"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Signer")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Provider")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"supportedcolonycontract"},"SupportedColonyContract"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"SupportedColonyContract"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"ColonyContract11")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"ColonyContract12")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"ColonyContract13")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"token"},"Token"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"Token"),": ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/classes/ColonyToken"},(0,r.kt)("inlineCode",{parentName:"a"},"ColonyToken"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/classes/ERC20Token"},(0,r.kt)("inlineCode",{parentName:"a"},"ERC20Token"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/classes/ERC2612Token"},(0,r.kt)("inlineCode",{parentName:"a"},"ERC2612Token"))),(0,r.kt)("h2",{id:"variables"},"Variables"),(0,r.kt)("h3",{id:"erc20interface"},"ERC20Interface"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"ERC20Interface"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"TokenERC20Interface")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"erc2612interface"},"ERC2612Interface"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"ERC2612Interface"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"TokenERC2612Interface")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"erc721interface"},"ERC721Interface"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"ERC721Interface"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"TokenERC721Interface")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"extensionversions"},"ExtensionVersions"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"ExtensionVersions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Latest versions of all extension contracts"),(0,r.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"CoinMachine")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"4")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"5")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"6")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"7")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"8"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"EvaluatedExpenditure")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"4"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FundingQueue")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"4")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"IVotingReputation")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"4")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"5")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"6")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"7")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"8")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"9"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"OneTxPayment")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"4")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ReputationBootstrapper")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"StakedExpenditure")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"3"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"StreamingPayments")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"TokenSupplier")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"4")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"VotingReputation")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"4")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"5")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"6")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"7")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"8")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"9"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Whitelist")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"4"))))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"ipfsmetadataevents"},"IpfsMetadataEvents"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"IpfsMetadataEvents"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"annotation")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"Annotation(address,bytes32,string)"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"colony")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"ColonyMetadata(address,string)"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"decision")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"Annotation(address,bytes32,string)"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"default")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"domain")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"DomainMetadata(address,uint256,string)"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"misc")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'""'))))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"metadata_version"},"METADATA","_","VERSION"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"METADATA","_","VERSION"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"2")),(0,r.kt)("p",null,"Current Colony Event Metadata version"),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"addressesareequal"},"addressesAreEqual"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"addressesAreEqual"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"a"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"b"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Check if two addresses are equal"),(0,r.kt)("p",null,"Addresses can be displayed using a checksum format which contains uppercase and lowercase characters.\nThis function can compare addresses in either format"),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"a")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Left hand side address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"b")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Right hand side address")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether a and b are the same address"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createmetadatafor"},"createMetadataFor"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"createMetadataFor"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"data"),"): ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/MetadataTypeMap"},(0,r.kt)("inlineCode",{parentName:"a"},"MetadataTypeMap")),"[",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"]"),(0,r.kt)("p",null,"Create a valid Metadata object."),(0,r.kt)("p",null,"Validates the input."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createMetadataFor, MetadataType } from '@colony/event-metadata';\n\nconst result = createMetadataFor(MetadataType.Domain, {\n  domainName: 'Cool team',\n});\n\nconsole.log(result.version); // 2\nconsole.log(result.name); // 'domain'\nconsole.log(result.data.domainName); // 'Cool team'\n")),(0,r.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/next/colonysdk/api/enums/MetadataType"},(0,r.kt)("inlineCode",{parentName:"a"},"MetadataType")))))),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The metadata type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"data")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/next/colonysdk/api/interfaces/DataTypeMap"},(0,r.kt)("inlineCode",{parentName:"a"},"DataTypeMap")),"[",(0,r.kt)("inlineCode",{parentName:"td"},"T"),"]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The actual data for the generated metadata object")))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/MetadataTypeMap"},(0,r.kt)("inlineCode",{parentName:"a"},"MetadataTypeMap")),"[",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"]"),(0,r.kt)("p",null,"The version number of the metadata"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"geteventmetadataversion"},"getEventMetadataVersion"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getEventMetadataVersion"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"input"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the version of a Metadata object"),(0,r.kt)("p",null,"Defaults to 1."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"input")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"JavaScript object (parsed, from IPFS)")))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The version number of the metadata"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"gettoken"},"getToken"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getToken"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"colonyNetwork"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"address"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/classes/ERC20Token"},(0,r.kt)("inlineCode",{parentName:"a"},"ERC20Token")),">"),(0,r.kt)("p",null,"Get a properly instantiated Token contract client"),(0,r.kt)("p",null,"This method tries to auto-detect the type of the token under the given address"),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"colonyNetwork")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/next/colonysdk/api/classes/ColonyNetwork"},(0,r.kt)("inlineCode",{parentName:"a"},"ColonyNetwork"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A ",(0,r.kt)("a",{parentName:"td",href:"/next/colonysdk/api/classes/ColonyNetwork"},"ColonyNetwork")," instance")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The token's address")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/classes/ERC20Token"},(0,r.kt)("inlineCode",{parentName:"a"},"ERC20Token")),">"),(0,r.kt)("p",null,"A Token contract client"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isextensioncompatible"},"isExtensionCompatible"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"isExtensionCompatible"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"extension"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"extensionVersion"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"colonyVersion"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Checks the compatibility of an extension version with a colony version it requests to be installed in\nReturns ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if an extension version is compatible with the given colony version"),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"extension")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/next/colonysdk/api/enums/Extension"},(0,r.kt)("inlineCode",{parentName:"a"},"Extension"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"A valid ",(0,r.kt)("inlineCode",{parentName:"td"},"Extension")," contract name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"extensionVersion")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ExtensionVersion")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The version of the extension to check against the colony")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"colonyVersion")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"2")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"3")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"4")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"5")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"6")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"7")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"8")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"9")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"10")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"11")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"12")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"13")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The version of the colony to check for")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"indication whether extension in given version is compatible with colony at the given version"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parseeventmetadata"},"parseEventMetadata"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"parseEventMetadata"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"input"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"type?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/MetadataTypeMap"},(0,r.kt)("inlineCode",{parentName:"a"},"MetadataTypeMap")),"[",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"]"),(0,r.kt)("p",null,"Parses and validates event metadata"),(0,r.kt)("p",null,"This will check the validity of an event metadata object.\nYou can pass in an optional type if you know what to expect.\nIt will also do a data version check."),(0,r.kt)("p",null,"If you don't know what the output will be you can use TypeScript's\nDiscriminated Unions to guard the correct types (see example)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { parseEventMetadata, MetadataType } from '@colony/event-metadata';\n\n// Get `input` from IPFS or other sources.\n\nconst result = parseEventMetadata(input);\n\nif (result.type === MetadataType.Domain) {\n  // Type is DomainMetadata\n  console.log(result.data.domainName);\n}\n")),(0,r.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/next/colonysdk/api/enums/MetadataType"},(0,r.kt)("inlineCode",{parentName:"a"},"MetadataType"))," = ",(0,r.kt)("a",{parentName:"td",href:"/next/colonysdk/api/enums/MetadataType#default"},(0,r.kt)("inlineCode",{parentName:"a"},"DEFAULT")))))),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"input")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"JavaScript object (parsed, from IPFS)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"type?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional MetadataType to check against")))),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/next/colonysdk/api/interfaces/MetadataTypeMap"},(0,r.kt)("inlineCode",{parentName:"a"},"MetadataTypeMap")),"[",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"]"),(0,r.kt)("p",null,"The validated Metadata."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parselogs"},"parseLogs"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"parseLogs"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"logs"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"iface"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"LogDescription"),"[]"),(0,r.kt)("p",null,"Try to parse an array of logs with a given interface"),(0,r.kt)("p",null,"Will filter out logs that can't be parsed with the given interface"),(0,r.kt)("h4",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"logs")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Log"),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Array of log entries (usually from a ",(0,r.kt)("a",{parentName:"td",href:"/next/colonysdk/api/interfaces/ContractReceipt"},"ContractReceipt"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"iface")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Interface")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Ethers compatible contract interface")))),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"LogDescription"),"[]"),(0,r.kt)("p",null,"A list of parsed log entries (events)"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"toeth"},"toEth"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"toEth"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"num"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Convert any number to ETH (remove 18 zeros)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { toEth } from '@colony/sdk';\n\nconst oneEther = BigNumber.from(\"1000000000000000000\");\nconsole.log(toEth(oneEther)); // 1.0\n")),(0,r.kt)("h4",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"num")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"BigNumberish"))))),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"towei"},"toWei"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"toWei"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"num"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,r.kt)("p",null,"Convert any number to wei (add 18 zeros)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { toWei } from '@colony/sdk';\n\nconst oneEther = '1.0';\nconsole.log(toWei(oneEther)); // { BigNumber: \"1000000000000000000\" }\n")),(0,r.kt)("h4",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"num")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"w"},"w"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"w"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"str"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,r.kt)("p",null,"Short-hand method to convert a number to wei using JS tagged template strings"),(0,r.kt)("p",null,"See also here: ",(0,r.kt)("a",{parentName:"p",href:"http://tc39wiki.calculist.org/es6/template-strings/"},"http://tc39wiki.calculist.org/es6/template-strings/")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.kt)("p",null,"This is only useful in contexts where the number is hard-coded (e.g. examples)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { w } from '@colony/sdk';\n\nconsole.log(w`1.0`); // { BigNumber: \"1000000000000000000\" }\n")),(0,r.kt)("h4",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"TemplateStringsArray"))))),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber")))}m.isMDXComponent=!0}}]);