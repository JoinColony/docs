"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[51383],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,y=u["".concat(i,".").concat(m)]||u[m]||p[m]||l;return n?a.createElement(y,r(r({ref:t},s),{},{components:n})):a.createElement(y,r({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,r=new Array(l);r[0]=u;var d={};for(var i in t)hasOwnProperty.call(t,i)&&(d[i]=t[i]);d.originalType=e,d.mdxType="string"==typeof e?e:o,r[1]=d;for(var c=2;c<l;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},90002:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>u,Bullet:()=>s,Details:()=>y,SpecifiedBy:()=>p,assets:()=>c,contentTitle:()=>d,default:()=>g,frontMatter:()=>r,metadata:()=>i,toc:()=>m});var a=n(87462),o=n(67294),l=n(3905);const r={id:"delete-colony-metadata",title:"deleteColonyMetadata",hide_table_of_contents:!1},d=void 0,i={unversionedId:"graphql/mutations/delete-colony-metadata",id:"graphql/mutations/delete-colony-metadata",title:"deleteColonyMetadata",description:"No description",source:"@site/colony/graphql/mutations/delete-colony-metadata.mdx",sourceDirName:"graphql/mutations",slug:"/graphql/mutations/delete-colony-metadata",permalink:"/next/graphql/mutations/delete-colony-metadata",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/mutations/delete-colony-metadata.mdx",tags:[],version:"current",frontMatter:{id:"delete-colony-metadata",title:"deleteColonyMetadata",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"deleteColonyFundsClaim",permalink:"/next/graphql/mutations/delete-colony-funds-claim"},next:{title:"deleteColonyTokens",permalink:"/next/graphql/mutations/delete-colony-tokens"}},c={},s=()=>(0,l.kt)(o.Fragment,null,(0,l.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,l.kt)(o.Fragment,null,"Specification",(0,l.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,l.kt)(o.Fragment,null,(0,l.kt)("span",{className:"badge badge--"+e.class},e.text)),m=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>deleteColonyMetadata.<b>input</b></code><Bullet /><code>DeleteColonyMetadataInput!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-deletecolonymetadatabinputbcodedeletecolonymetadatainput--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>deleteColonyMetadata.<b>condition</b></code><Bullet /><code>ModelColonyMetadataConditionInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-deletecolonymetadatabconditionbcodemodelcolonymetadataconditioninput-",level:4},{value:"Type",id:"type",level:3},{value:'<code>ColonyMetadata</code> <Badge class="secondary" text="object"/>',id:"colonymetadata-",level:4}],y=e=>{let{dataOpen:t,dataClose:n,children:r,startOpen:d=!1}=e;const[i,c]=(0,o.useState)(d);return(0,l.kt)("details",(0,a.Z)({},i?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,l.kt)("summary",{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"}},i?t:n),i&&r)},f={Bullet:s,SpecifiedBy:p,Badge:u,toc:m,Details:y};function g(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"No description"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"deleteColonyMetadata(\n  input: DeleteColonyMetadataInput!\n  condition: ModelColonyMetadataConditionInput\n): ColonyMetadata\n")),(0,l.kt)("h3",{id:"arguments"},"Arguments"),(0,l.kt)("h4",{id:"code-style-fontweight-normal-deletecolonymetadatabinputbcodedeletecolonymetadatainput--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"deleteColonyMetadata.",(0,l.kt)("b",null,"input"))),(0,l.kt)(s,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/inputs/delete-colony-metadata-input"},(0,l.kt)("inlineCode",{parentName:"a"},"DeleteColonyMetadataInput!"))," ",(0,l.kt)(u,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,l.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-deletecolonymetadatabconditionbcodemodelcolonymetadataconditioninput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"deleteColonyMetadata.",(0,l.kt)("b",null,"condition"))),(0,l.kt)(s,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-colony-metadata-condition-input"},(0,l.kt)("inlineCode",{parentName:"a"},"ModelColonyMetadataConditionInput"))," ",(0,l.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h3",{id:"type"},"Type"),(0,l.kt)("h4",{id:"colonymetadata-"},(0,l.kt)("a",{parentName:"h4",href:"/graphql/objects/colony-metadata"},(0,l.kt)("inlineCode",{parentName:"a"},"ColonyMetadata"))," ",(0,l.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Represents metadata for a Colony.")))}g.isMDXComponent=!0}}]);