"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5264],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=d(n),k=r,u=m["".concat(l,".").concat(k)]||m[k]||c[k]||i;return n?a.createElement(u,o(o({ref:t},s),{},{components:n})):a.createElement(u,o({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4104:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const i={},o="Interface: ColonyMetaTransaction<C, E, R, MD>",p={unversionedId:"api/interfaces/ColonyMetaTransaction",id:"api/interfaces/ColonyMetaTransaction",title:"Interface: ColonyMetaTransaction<C, E, R, MD\\>",description:'A standard gasless MetaTransaction ("force" in dApp)',source:"@site/vendor/colonyJS/packages/sdk/docs/api/interfaces/ColonyMetaTransaction.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/ColonyMetaTransaction",permalink:"/next/colonysdk/api/interfaces/ColonyMetaTransaction",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Interface: ColonyFilter",permalink:"/next/colonysdk/api/interfaces/ColonyFilter"},next:{title:"Interface: ColonyMultiFilter",permalink:"/next/colonysdk/api/interfaces/ColonyMultiFilter"}},l={},d=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"mined",id:"mined",level:3},{value:"Returns",id:"returns",level:4},{value:"send",id:"send",level:3},{value:"Returns",id:"returns-1",level:4}],s={toc:d};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"interface-colonymetatransactionc-e-r-md"},"Interface: ColonyMetaTransaction<C, E, R, MD",">"),(0,r.kt)("p",null,'A standard gasless MetaTransaction ("force" in dApp)'),(0,r.kt)("p",null,"You can then ",(0,r.kt)("inlineCode",{parentName:"p"},"send")," the transaction, wait for it to be ",(0,r.kt)("inlineCode",{parentName:"p"},"mined")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"encode")," it.\nSee also ",(0,r.kt)("a",{parentName:"p",href:"https://docs.colony.io/colonysdk/guides/transactions"},"https://docs.colony.io/colonysdk/guides/transactions")," for more information"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"(async function() {\n  // Just send off the transaction and get back the tx object\n  // First tupel value is the ethers transaction, including the hash\n  // Second tupel value is a function that does the same as `.mined()` below\n  const [tx, mined] = await colony.claimFunds().metaTx().send();\n  console.info(tx.hash); // Transaction hash\n  const [eventData, receipt] = await mined();\n  // Wait for tx to be mined, get back the eventData, receipt\n  const [eventData, receipt] = await colony.claimFunds().metaTx().mined();\n})();\n")),(0,r.kt)("h2",{id:"type-parameters"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"C")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/next/colonysdk/api/interfaces/TransactionResponse"},(0,r.kt)("inlineCode",{parentName:"a"},"TransactionResponse")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"E")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/next/colonysdk/api/interfaces/EventData"},(0,r.kt)("inlineCode",{parentName:"a"},"EventData"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"MotionCreatedEventObject"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"R")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/next/colonysdk/api/interfaces/ParsedLogTransactionReceipt"},(0,r.kt)("inlineCode",{parentName:"a"},"ParsedLogTransactionReceipt")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"MD")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/next/colonysdk/api/enums/MetadataType"},(0,r.kt)("inlineCode",{parentName:"a"},"MetadataType")))))),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"mined"},"mined"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"mined"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<","[",(0,r.kt)("inlineCode",{parentName:"p"},"E"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),"]"," ","|"," [",(0,r.kt)("inlineCode",{parentName:"p"},"E"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),", () => ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"MetadataTypeMap"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"MD"),"]",">","]",">"),(0,r.kt)("p",null,"Wait until the tx is mined, returning the event data and the receipt"),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<","[",(0,r.kt)("inlineCode",{parentName:"p"},"E"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),"]"," ","|"," [",(0,r.kt)("inlineCode",{parentName:"p"},"E"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),", () => ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"MetadataTypeMap"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"MD"),"]",">","]",">"),(0,r.kt)("p",null,"A tupel of event data and contract receipt (and a function to retrieve metadata if applicable)"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"send"},"send"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"send"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<[",(0,r.kt)("inlineCode",{parentName:"p"},"C"),", () => ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<[",(0,r.kt)("inlineCode",{parentName:"p"},"E"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),", () => ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"MetadataTypeMap"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"MD"),"]",">","] ","|"," ","[",(0,r.kt)("inlineCode",{parentName:"p"},"E"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),"]",">","]",">"),(0,r.kt)("p",null,"Send off the tx, returning the transaction including its hash, not waiting for it to be mined"),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<[",(0,r.kt)("inlineCode",{parentName:"p"},"C"),", () => ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<[",(0,r.kt)("inlineCode",{parentName:"p"},"E"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),", () => ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"MetadataTypeMap"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"MD"),"]",">","] ","|"," ","[",(0,r.kt)("inlineCode",{parentName:"p"},"E"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),"]",">","]",">"),(0,r.kt)("p",null,"A tupel of a contract transaction and a function to wait for the mined event data as well as the receipt"))}c.isMDXComponent=!0}}]);