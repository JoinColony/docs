"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[19760],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>y});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=n.createContext({}),d=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=d(a),y=o,u=m["".concat(c,".").concat(y)]||m[y]||p[y]||l;return a?n.createElement(u,r(r({ref:t},s),{},{components:a})):n.createElement(u,r({ref:t},s))}));function y(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=a.length,r=new Array(l);r[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var d=2;d<l;d++)r[d]=a[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4164:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>m,Bullet:()=>s,Details:()=>u,SpecifiedBy:()=>p,assets:()=>d,contentTitle:()=>i,default:()=>g,frontMatter:()=>r,metadata:()=>c,toc:()=>y});var n=a(87462),o=a(67294),l=a(3905);const r={id:"list-colony-metadata",title:"listColonyMetadata",hide_table_of_contents:!1},i=void 0,c={unversionedId:"graphql/queries/list-colony-metadata",id:"graphql/queries/list-colony-metadata",title:"listColonyMetadata",description:"No description",source:"@site/colony/graphql/queries/list-colony-metadata.mdx",sourceDirName:"graphql/queries",slug:"/graphql/queries/list-colony-metadata",permalink:"/next/graphql/queries/list-colony-metadata",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/queries/list-colony-metadata.mdx",tags:[],version:"current",frontMatter:{id:"list-colony-metadata",title:"listColonyMetadata",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"listColonyFundsClaims",permalink:"/next/graphql/queries/list-colony-funds-claims"},next:{title:"listColonyTokens",permalink:"/next/graphql/queries/list-colony-tokens"}},d={},s=()=>(0,l.kt)(o.Fragment,null,(0,l.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,l.kt)(o.Fragment,null,"Specification",(0,l.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,l.kt)(o.Fragment,null,(0,l.kt)("span",{className:"badge badge--"+e.class},e.text)),y=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>listColonyMetadata.<b>filter</b></code><Bullet /><code>ModelColonyMetadataFilterInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-listcolonymetadatabfilterbcodemodelcolonymetadatafilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>listColonyMetadata.<b>limit</b></code><Bullet /><code>Int</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-listcolonymetadatablimitbcodeint-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>listColonyMetadata.<b>nextToken</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-listcolonymetadatabnexttokenbcodestring-",level:4},{value:"Type",id:"type",level:3},{value:'<code>ModelColonyMetadataConnection</code> <Badge class="secondary" text="object"/>',id:"modelcolonymetadataconnection-",level:4}],u=e=>{let{dataOpen:t,dataClose:a,children:r,startOpen:i=!1}=e;const[c,d]=(0,o.useState)(i);return(0,l.kt)("details",(0,n.Z)({},c?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,l.kt)("summary",{onClick:e=>{e.preventDefault(),d((e=>!e))},style:{listStyle:"none"}},c?t:a),c&&r)},f={Bullet:s,SpecifiedBy:p,Badge:m,toc:y,Details:u};function g(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"No description"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"listColonyMetadata(\n  filter: ModelColonyMetadataFilterInput\n  limit: Int\n  nextToken: String\n): ModelColonyMetadataConnection\n")),(0,l.kt)("h3",{id:"arguments"},"Arguments"),(0,l.kt)("h4",{id:"code-style-fontweight-normal-listcolonymetadatabfilterbcodemodelcolonymetadatafilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"listColonyMetadata.",(0,l.kt)("b",null,"filter"))),(0,l.kt)(s,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-colony-metadata-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"ModelColonyMetadataFilterInput"))," ",(0,l.kt)(m,{class:"secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-listcolonymetadatablimitbcodeint-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"listColonyMetadata.",(0,l.kt)("b",null,"limit"))),(0,l.kt)(s,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/scalars/int"},(0,l.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,l.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-listcolonymetadatabnexttokenbcodestring-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"listColonyMetadata.",(0,l.kt)("b",null,"nextToken"))),(0,l.kt)(s,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/scalars/string"},(0,l.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,l.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h3",{id:"type"},"Type"),(0,l.kt)("h4",{id:"modelcolonymetadataconnection-"},(0,l.kt)("a",{parentName:"h4",href:"/graphql/objects/model-colony-metadata-connection"},(0,l.kt)("inlineCode",{parentName:"a"},"ModelColonyMetadataConnection"))," ",(0,l.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})),(0,l.kt)("blockquote",null))}g.isMDXComponent=!0}}]);