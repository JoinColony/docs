"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[35771],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),d=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=d(a),m=r,h=u["".concat(c,".").concat(m)]||u[m]||s[m]||o;return a?n.createElement(h,l(l({ref:t},p),{},{components:a})):n.createElement(h,l({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var d=2;d<o;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},81842:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>u,Bullet:()=>p,Details:()=>h,SpecifiedBy:()=>s,assets:()=>d,contentTitle:()=>i,default:()=>y,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var n=a(87462),r=a(67294),o=a(3905);const l={id:"chain-metadata-input",title:"ChainMetadataInput",hide_table_of_contents:!1},i=void 0,c={unversionedId:"graphql/inputs/chain-metadata-input",id:"graphql/inputs/chain-metadata-input",title:"ChainMetadataInput",description:"Input data for relevant chain metadata of a Colony.",source:"@site/colony/graphql/inputs/chain-metadata-input.mdx",sourceDirName:"graphql/inputs",slug:"/graphql/inputs/chain-metadata-input",permalink:"/next/graphql/inputs/chain-metadata-input",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/inputs/chain-metadata-input.mdx",tags:[],version:"current",frontMatter:{id:"chain-metadata-input",title:"ChainMetadataInput",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"Schema Documentation",permalink:"/next/graphql"},next:{title:"ColonyBalanceInput",permalink:"/next/graphql/inputs/colony-balance-input"}},d={},p=()=>(0,o.kt)(r.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,o.kt)(r.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,o.kt)(r.Fragment,null,(0,o.kt)("span",{className:"badge badge--"+e.class},e.text)),m=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>ChainMetadataInput.<b>network</b></code><Bullet /><code>Network</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-chainmetadatainputbnetworkbcodenetwork-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ChainMetadataInput.<b>chainId</b></code><Bullet /><code>Int</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-chainmetadatainputbchainidbcodeint-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ChainMetadataInput.<b>transactionHash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-chainmetadatainputbtransactionhashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ChainMetadataInput.<b>logIndex</b></code><Bullet /><code>Int</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-chainmetadatainputblogindexbcodeint-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ChainMetadataInput.<b>blockNumber</b></code><Bullet /><code>Int</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-chainmetadatainputbblocknumberbcodeint-",level:4},{value:"Member of",id:"member-of",level:3}],h=e=>{let{dataOpen:t,dataClose:a,children:l,startOpen:i=!1}=e;const[c,d]=(0,r.useState)(i);return(0,o.kt)("details",(0,n.Z)({},c?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,o.kt)("summary",{onClick:e=>{e.preventDefault(),d((e=>!e))},style:{listStyle:"none"}},c?t:a),c&&l)},k={Bullet:p,SpecifiedBy:s,Badge:u,toc:m,Details:h};function y(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Input data for relevant chain metadata of a Colony.\n??? I would like to explain why we need this but maybe that's too much info ???"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"input ChainMetadataInput {\n  network: Network\n  chainId: Int\n  transactionHash: String\n  logIndex: Int\n  blockNumber: Int\n}\n")),(0,o.kt)("h3",{id:"fields"},"Fields"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-chainmetadatainputbnetworkbcodenetwork-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"ChainMetadataInput.",(0,o.kt)("b",null,"network"))),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/graphql/enums/network"},(0,o.kt)("inlineCode",{parentName:"a"},"Network"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The network the Colony is deployed on.")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-chainmetadatainputbchainidbcodeint-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"ChainMetadataInput.",(0,o.kt)("b",null,"chainId"))),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/graphql/scalars/int"},(0,o.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The chain ID of the network.")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-chainmetadatainputbtransactionhashbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"ChainMetadataInput.",(0,o.kt)("b",null,"transactionHash"))),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/graphql/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The transaction hash of the creation transaction.")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-chainmetadatainputblogindexbcodeint-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"ChainMetadataInput.",(0,o.kt)("b",null,"logIndex"))),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/graphql/scalars/int"},(0,o.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The log index of the creation transaction.")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-chainmetadatainputbblocknumberbcodeint-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"ChainMetadataInput.",(0,o.kt)("b",null,"blockNumber"))),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/graphql/scalars/int"},(0,o.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The block number of the creation transaction.")),(0,o.kt)("h3",{id:"member-of"},"Member of"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/graphql/inputs/create-colony-input"},(0,o.kt)("inlineCode",{parentName:"a"},"CreateColonyInput")),"  ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"p",href:"/graphql/inputs/create-contract-event-input"},(0,o.kt)("inlineCode",{parentName:"a"},"CreateContractEventInput")),"  ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"p",href:"/graphql/inputs/create-token-input"},(0,o.kt)("inlineCode",{parentName:"a"},"CreateTokenInput")),"  ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"p",href:"/graphql/inputs/create-unique-colony-input"},(0,o.kt)("inlineCode",{parentName:"a"},"CreateUniqueColonyInput")),"  ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"p",href:"/graphql/inputs/update-colony-input"},(0,o.kt)("inlineCode",{parentName:"a"},"UpdateColonyInput")),"  ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"p",href:"/graphql/inputs/update-contract-event-input"},(0,o.kt)("inlineCode",{parentName:"a"},"UpdateContractEventInput")),"  ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"p",href:"/graphql/inputs/update-token-input"},(0,o.kt)("inlineCode",{parentName:"a"},"UpdateTokenInput")),"  ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})))}y.isMDXComponent=!0}}]);