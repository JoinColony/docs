"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5718],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||r;return n?o.createElement(h,l(l({ref:t},u),{},{components:n})):o.createElement(h,l({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<r;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3055:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var o=n(7462),a=(n(7294),n(3905)),r=n(5488),l=n(5162);const i={sidebar_position:0,description:"A stupidly short guide to get started with Colony development"},s="Start Building",c={unversionedId:"start",id:"start",title:"Start Building",description:"A stupidly short guide to get started with Colony development",source:"@site/vendor/colonySDK/docs/start.md",sourceDirName:".",slug:"/start",permalink:"/next/colonysdk/start",draft:!1,editUrl:"https://github.com/JoinColony/start.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,description:"A stupidly short guide to get started with Colony development"},sidebar:"sidebar",previous:{title:"Colony SDK",permalink:"/next/colonysdk/"},next:{title:"API",permalink:"/next/colonysdk/api/"}},u={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Connecting to Colony on Gnosis Chain",id:"connecting-to-colony-on-gnosis-chain",level:2}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"start-building"},"Start Building"),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"NodeJS v 16.15.0 is installed on your system (use ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/nvm-sh/nvm"},(0,a.kt)("inlineCode",{parentName:"a"},"nvm"))," for changing NodeJS versions on the fly)"),(0,a.kt)("li",{parentName:"ul"},"A JavaScript/TypeScript project with a ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json")," and the ",(0,a.kt)("inlineCode",{parentName:"li"},"@colony/sdk")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"ethers")," packages installed.")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"To get started even faster, use our ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/JoinColony/colonyStarter"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"Colony Starter")))," template. It's just a matter of cloning the repository and running ",(0,a.kt)("inlineCode",{parentName:"p"},"npm run serve")," to get to the first working example. Follow the guide after the link for more information.")),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"It's as easy as"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install ethers @colony/sdk\n")),(0,a.kt)("p",null,"You'll need ",(0,a.kt)("inlineCode",{parentName:"p"},"ethers")," v5.x as a dependency in your project."),(0,a.kt)("h2",{id:"connecting-to-colony-on-gnosis-chain"},"Connecting to Colony on Gnosis Chain"),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"browser",label:"In the browser (using MetaMask)",default:!0,mdxType:"TabItem"},(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"For browser based projects, consider using a build system like ",(0,a.kt)("a",{parentName:"p",href:"https://esbuild.github.io/"},"esbuild")," that can understand the ",(0,a.kt)("inlineCode",{parentName:"p"},"import")," commands and will bundle all necessary libraries into one file. Again, feel free to just use the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/JoinColony/colonyStarter"},"colonyStarter")," template which has this already set up for you.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// index.js\nimport { providers } from 'ethers';\nimport { ColonyNetwork, toEth } from '@colony/sdk';\n\n// If MetaMask is installed there will be an `ethereum` object on the `window`\n// NOTE: Make sure MetaMask is connected to Gnosis chain (see https://www.xdaichain.com/for-users/wallets/metamask/metamask-setup)\nconst provider = new providers.Web3Provider(window.ethereum);\n\n// Get the Colony's XDAI funding in the ROOT pot (id 1)\nconst start = async () => {\n  // This will try to connect the page to MetaMask\n  await provider.send('eth_requestAccounts', []);\n  // Create a new connection to the Colony Network contracts using the MetaMask \"wallet\"\n  const colonyNetwork = new ColonyNetwork(provider.getSigner());\n  // Connect to the MetaColony (this could be replaced with your own colony using `colonyNetwork.getColony(COLONY_ADDRESS)`)\n  const metaColony = await colonyNetwork.getMetaColony();\n  // Get the CLNY funding for the MetaColony (CLNY is it's native token)\n  const funding = await metaColony.getBalance();\n  // The funding will be in wei (x * 10^18), so we format into a readable string using the `toEth` function\n  alert('MetaColony balance is ' + toEth(funding) + ' CLNY');\n};\n\nstart();\n")),(0,a.kt)("p",null,"Include the resulting bundle in an HTML file and open it in you favorite browser. It should connect to MetaMask and alert you with the current MetaColony CLNY balance.")),(0,a.kt)(l.Z,{value:"nodejs",label:"In NodeJS",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// index.js\nconst { providers, Wallet } = require('ethers');\nconst { ColonyNetwork } = require('@colony/sdk');\n\nconst provider = new providers.JsonRpcProvider('https://rpc.gnosischain.com/');\nconst wallet = Wallet.createRandom().connect(provider);\n\n// Get the Colony's XDAI funding in the ROOT pot (id 1)\nconst start = async () => {\n  // Create a new connection to the Colony Network contracts using the MetaMask \"wallet\"\n  const colonyNetwork = new ColonyNetwork(wallet);\n  // Connect to the MetaColony (this could be replaced with your own colony using `colonyNetwork.getColony(COLONY_ADDRESS)`)\n  const metaColony = await colonyNetwork.getMetaColony();\n  // Get the CLNY funding for the MetaColony (CLNY is it's native token)\n  const funding = await metaColony.getBalance();\n  // The funding will be in wei (x * 10^18), so we format into a readable string using the `toEth` function\n  console.log('MetaColony balance is ' + toEth(funding) + ' CLNY')\n};\n\nstart();\n")),(0,a.kt)("p",null,"Run this file by executing ",(0,a.kt)("inlineCode",{parentName:"p"},"node index.js")," and carefully observe the output. The last line should be something like"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MetaColony balance is 2.125319999999999999 CLNY\n")))))}m.isMDXComponent=!0},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var o=n(7294),a=n(6010);const r="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return o.createElement("div",{role:"tabpanel",className:(0,a.Z)(r,l),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var o=n(7462),a=n(7294),r=n(6010),l=n(2389),i=n(7392),s=n(7094),c=n(2466);const u="tabList__CuJ",d="tabItem_LNqP";function p(e){var t,n;const{lazy:l,block:p,defaultValue:m,values:h,groupId:y,className:f}=e,g=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=h?h:g.map((e=>{let{props:{value:t,label:n,attributes:o}}=e;return{value:t,label:n,attributes:o}})),v=(0,i.l)(b,((e,t)=>e.value===t.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===m?m:null!=(t=null!=m?m:null==(n=g.find((e=>e.props.default)))?void 0:n.props.value)?t:g[0].props.value;if(null!==k&&!b.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+b.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:C}=(0,s.U)(),[N,O]=(0,a.useState)(k),T=[],{blockElementScrollPositionUntilNextRender:E}=(0,c.o5)();if(null!=y){const e=w[y];null!=e&&e!==N&&b.some((t=>t.value===e))&&O(e)}const j=e=>{const t=e.currentTarget,n=T.indexOf(t),o=b[n].value;o!==N&&(E(t),O(o),null!=y&&C(y,String(o)))},M=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var o;const t=T.indexOf(e.currentTarget)+1;n=null!=(o=T[t])?o:T[0];break}case"ArrowLeft":{var a;const t=T.indexOf(e.currentTarget)-1;n=null!=(a=T[t])?a:T[T.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,r.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":p},f)},b.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,o.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>T.push(e),onKeyDown:M,onFocus:j,onClick:j},l,{className:(0,r.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":N===t})}),null!=n?n:t)}))),l?(0,a.cloneElement)(g.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,l.Z)();return a.createElement(p,(0,o.Z)({key:String(t)},e))}}}]);