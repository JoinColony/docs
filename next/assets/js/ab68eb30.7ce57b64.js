"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[4656],{8860:(t,e,a)=>{a.d(e,{xA:()=>m,yg:()=>s});var n=a(7953);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var g=n.createContext({}),y=function(t){var e=n.useContext(g),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=y(t.components);return n.createElement(g.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},p=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,g=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),d=y(a),p=r,s=d["".concat(g,".").concat(p)]||d[p]||u[p]||l;return a?n.createElement(s,i(i({ref:e},m),{},{components:a})):n.createElement(s,i({ref:e},m))}));function s(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=p;var o={};for(var g in e)hasOwnProperty.call(e,g)&&(o[g]=e[g]);o.originalType=t,o[d]="string"==typeof t?t:r,i[1]=o;for(var y=2;y<l;y++)i[y]=a[y];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},4282:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>g,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>y});var n=a(4432),r=(a(7953),a(8860));const l={},i="Motions & Disputes Extension (VotingReputation)",o={unversionedId:"interfaces/extensions/votingreputation",id:"interfaces/extensions/votingreputation",title:"Motions & Disputes Extension (VotingReputation)",description:"This extension allows any member of your colony to propose a Motion to take an Action that will pass after a security delay unless somebody Objects. This applies to all Actions, such as creating an expenditure, managing funds, or managing teams.",source:"@site/vendor/colonyNetwork/docs/interfaces/extensions/votingreputation.md",sourceDirName:"interfaces/extensions",slug:"/interfaces/extensions/votingreputation",permalink:"/next/colonynetwork/interfaces/extensions/votingreputation",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Token Supplier (TokenSupplier)",permalink:"/next/colonynetwork/interfaces/extensions/tokensupplier"},next:{title:"Whitelist Extension (Whitelist)",permalink:"/next/colonynetwork/interfaces/extensions/whitelist"}},g={},y=[{value:"Interface Methods",id:"interface-methods",level:2},{value:"\u25b8 <code>claimMisalignedReward(uint256 _motionId, uint256 _permissionDomainId, uint256 _childSkillIndex, address _staker, uint256 _vote)</code>",id:"-claimmisalignedrewarduint256-_motionid-uint256-_permissiondomainid-uint256-_childskillindex-address-_staker-uint256-_vote",level:3},{value:"\u25b8 <code>claimReward(uint256 _motionId, uint256 _permissionDomainId, uint256 _childSkillIndex, address _staker, uint256 _vote)</code>",id:"-claimrewarduint256-_motionid-uint256-_permissiondomainid-uint256-_childskillindex-address-_staker-uint256-_vote",level:3},{value:"\u25b8 <code>createClaimDelayAction(bytes memory _action, uint256 _value):bytes _delayAction</code>",id:"-createclaimdelayactionbytes-memory-_action-uint256-_valuebytes-_delayaction",level:3},{value:"\u25b8 <code>createMotion(uint256 _domainId, uint256 _childSkillIndex, address _altTarget, bytes memory _action, bytes memory _key, bytes memory _value, uint256 _branchMask, bytes32[] memory _siblings)</code>",id:"-createmotionuint256-_domainid-uint256-_childskillindex-address-_alttarget-bytes-memory-_action-bytes-memory-_key-bytes-memory-_value-uint256-_branchmask-bytes32-memory-_siblings",level:3},{value:"\u25b8 <code>escalateMotion(uint256 _motionId, uint256 _newDomainId, uint256 _childSkillIndex, bytes memory _key, bytes memory _value, uint256 _branchMask, bytes32[] memory _siblings)</code>",id:"-escalatemotionuint256-_motionid-uint256-_newdomainid-uint256-_childskillindex-bytes-memory-_key-bytes-memory-_value-uint256-_branchmask-bytes32-memory-_siblings",level:3},{value:"\u25b8 <code>failingExecutionAllowed(uint256 _motionId):bool _allowed</code>",id:"-failingexecutionalloweduint256-_motionidbool-_allowed",level:3},{value:"\u25b8 <code>finalizeMotion(uint256 _motionId)</code>",id:"-finalizemotionuint256-_motionid",level:3},{value:"\u25b8 <code>getEscalationPeriod():uint256 _period</code>",id:"-getescalationperioduint256-_period",level:3},{value:"\u25b8 <code>getExpenditureMotionCount(bytes32 _structHash):uint256 _count</code>",id:"-getexpendituremotioncountbytes32-_structhashuint256-_count",level:3},{value:"\u25b8 <code>getExpenditurePastVote(bytes32 _actionHash):uint256 _vote</code>",id:"-getexpenditurepastvotebytes32-_actionhashuint256-_vote",level:3},{value:"\u25b8 <code>getMaxVoteFraction():uint256 _fraction</code>",id:"-getmaxvotefractionuint256-_fraction",level:3},{value:"\u25b8 <code>getMotion(uint256 _motionId):Motion _motion</code>",id:"-getmotionuint256-_motionidmotion-_motion",level:3},{value:"\u25b8 <code>getMotionCount():uint256 _count</code>",id:"-getmotioncountuint256-_count",level:3},{value:"\u25b8 <code>getMotionState(uint256 _motionId):MotionState _motionState</code>",id:"-getmotionstateuint256-_motionidmotionstate-_motionstate",level:3},{value:"\u25b8 <code>getRevealPeriod():uint256 _period</code>",id:"-getrevealperioduint256-_period",level:3},{value:"\u25b8 <code>getStake(uint256 _motionId, address _staker, uint256 _vote):uint256 _stake</code>",id:"-getstakeuint256-_motionid-address-_staker-uint256-_voteuint256-_stake",level:3},{value:"\u25b8 <code>getStakePeriod():uint256 _period</code>",id:"-getstakeperioduint256-_period",level:3},{value:"\u25b8 <code>getStakerReward(uint256 _motionId, address _staker, uint256 _vote):uint256 _reward, uint256 _penalty</code>",id:"-getstakerrewarduint256-_motionid-address-_staker-uint256-_voteuint256-_reward-uint256-_penalty",level:3},{value:"\u25b8 <code>getSubmitPeriod():uint256 _period</code>",id:"-getsubmitperioduint256-_period",level:3},{value:"\u25b8 <code>getTotalStakeFraction():uint256 _fraction</code>",id:"-gettotalstakefractionuint256-_fraction",level:3},{value:"\u25b8 <code>getUserMinStakeFraction():uint256 _fraction</code>",id:"-getuserminstakefractionuint256-_fraction",level:3},{value:"\u25b8 <code>getVoterReward(uint256 _motionId, uint256 _voterRep):uint256 _reward</code>",id:"-getvoterrewarduint256-_motionid-uint256-_voterrepuint256-_reward",level:3},{value:"\u25b8 <code>getVoterRewardFraction():uint256 _fraction</code>",id:"-getvoterrewardfractionuint256-_fraction",level:3},{value:"\u25b8 <code>getVoterRewardRange(uint256 _motionId, uint256 _voterRep, address _voterAddress):uint256 _rewardMin, uint256 _rewardMax</code>",id:"-getvoterrewardrangeuint256-_motionid-uint256-_voterrep-address-_voteraddressuint256-_rewardmin-uint256-_rewardmax",level:3},{value:"\u25b8 <code>initialise(uint256 _totalStakeFraction, uint256 _voterRewardFraction, uint256 _userMinStakeFraction, uint256 _maxVoteFraction, uint256 _stakePeriod, uint256 _submitPeriod, uint256 _revealPeriod, uint256 _escalationPeriod)</code>",id:"-initialiseuint256-_totalstakefraction-uint256-_voterrewardfraction-uint256-_userminstakefraction-uint256-_maxvotefraction-uint256-_stakeperiod-uint256-_submitperiod-uint256-_revealperiod-uint256-_escalationperiod",level:3},{value:"\u25b8 <code>revealVote(uint256 _motionId, bytes32 _salt, uint256 _vote, bytes memory _key, bytes memory _value, uint256 _branchMask, bytes32[] memory _siblings)</code>",id:"-revealvoteuint256-_motionid-bytes32-_salt-uint256-_vote-bytes-memory-_key-bytes-memory-_value-uint256-_branchmask-bytes32-memory-_siblings",level:3},{value:"\u25b8 <code>stakeMotion(uint256 _motionId, uint256 _permissionDomainId, uint256 _childSkillIndex, uint256 _vote, uint256 _amount, bytes memory _key, bytes memory _value, uint256 _branchMask, bytes32[] memory _siblings)</code>",id:"-stakemotionuint256-_motionid-uint256-_permissiondomainid-uint256-_childskillindex-uint256-_vote-uint256-_amount-bytes-memory-_key-bytes-memory-_value-uint256-_branchmask-bytes32-memory-_siblings",level:3},{value:"\u25b8 <code>submitVote(uint256 _motionId, bytes32 _voteSecret, bytes memory _key, bytes memory _value, uint256 _branchMask, bytes32[] memory _siblings)</code>",id:"-submitvoteuint256-_motionid-bytes32-_votesecret-bytes-memory-_key-bytes-memory-_value-uint256-_branchmask-bytes32-memory-_siblings",level:3}],m={toc:y},d="wrapper";function u(t){let{components:e,...a}=t;return(0,r.yg)(d,(0,n.A)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"motions--disputes-extension-votingreputation"},"Motions & Disputes Extension (",(0,r.yg)("inlineCode",{parentName:"h1"},"VotingReputation"),")"),(0,r.yg)("p",null,"This extension allows any member of your colony to propose a Motion to take an Action that will pass after a security delay unless somebody Objects. This applies to all Actions, such as creating an expenditure, managing funds, or managing teams."),(0,r.yg)("p",null,"See ",(0,r.yg)("a",{parentName:"p",href:"https://colony.gitbook.io/colony/extensions/governance"},"here")," for more information."),(0,r.yg)("h2",{id:"interface-methods"},"Interface Methods"),(0,r.yg)("h3",{id:"-claimmisalignedrewarduint256-_motionid-uint256-_permissiondomainid-uint256-_childskillindex-address-_staker-uint256-_vote"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"claimMisalignedReward(uint256 _motionId, uint256 _permissionDomainId, uint256 _childSkillIndex, address _staker, uint256 _vote)")),(0,r.yg)("p",null,"Claim the staker's reward from a motion that was created with v4 of the extension, and is now missing and cannot be interacted with via the normal claim function."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_permissionDomainId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The domain where the extension has the arbitration permission")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_childSkillIndex"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"For the domain in which the motion is occurring")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_staker"),(0,r.yg)("td",{parentName:"tr",align:null},"address"),(0,r.yg)("td",{parentName:"tr",align:null},"The staker whose reward is being claimed")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_vote"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The side being supported (0 = NAY, 1 = YAY)")))),(0,r.yg)("h3",{id:"-claimrewarduint256-_motionid-uint256-_permissiondomainid-uint256-_childskillindex-address-_staker-uint256-_vote"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"claimReward(uint256 _motionId, uint256 _permissionDomainId, uint256 _childSkillIndex, address _staker, uint256 _vote)")),(0,r.yg)("p",null,"Claim the staker's reward"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_permissionDomainId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The domain where the extension has the arbitration permission")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_childSkillIndex"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"For the domain in which the motion is occurring")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_staker"),(0,r.yg)("td",{parentName:"tr",align:null},"address"),(0,r.yg)("td",{parentName:"tr",align:null},"The staker whose reward is being claimed")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_vote"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The side being supported (0 = NAY, 1 = YAY)")))),(0,r.yg)("h3",{id:"-createclaimdelayactionbytes-memory-_action-uint256-_valuebytes-_delayaction"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"createClaimDelayAction(bytes memory _action, uint256 _value):bytes _delayAction")),(0,r.yg)("p",null,"Create the action that should be taken based on the passed action to appropriately set the claim window of an expenditure from starting."),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Note: Not expected to be used directly, could be made private in the future")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_action"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes"),(0,r.yg)("td",{parentName:"tr",align:null},"The action being voted on")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_value"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The value to set the claim delay to")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_delayAction"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes"),(0,r.yg)("td",{parentName:"tr",align:null},"The delay action")))),(0,r.yg)("h3",{id:"-createmotionuint256-_domainid-uint256-_childskillindex-address-_alttarget-bytes-memory-_action-bytes-memory-_key-bytes-memory-_value-uint256-_branchmask-bytes32-memory-_siblings"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"createMotion(uint256 _domainId, uint256 _childSkillIndex, address _altTarget, bytes memory _action, bytes memory _key, bytes memory _value, uint256 _branchMask, bytes32[] memory _siblings)")),(0,r.yg)("p",null,"Create a motion"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_domainId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The domain where we vote on the motion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_childSkillIndex"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The childSkillIndex pointing to the domain of the action")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_altTarget"),(0,r.yg)("td",{parentName:"tr",align:null},"address"),(0,r.yg)("td",{parentName:"tr",align:null},"The contract to which we send the action (0x0 for the colony)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_action"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes"),(0,r.yg)("td",{parentName:"tr",align:null},"A bytes array encoding a function call")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_key"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes"),(0,r.yg)("td",{parentName:"tr",align:null},"Reputation tree key for the root domain")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_value"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes"),(0,r.yg)("td",{parentName:"tr",align:null},"Reputation tree value for the root domain")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_branchMask"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The branchmask of the proof")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_siblings"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes32[]"),(0,r.yg)("td",{parentName:"tr",align:null},"The siblings of the proof")))),(0,r.yg)("h3",{id:"-escalatemotionuint256-_motionid-uint256-_newdomainid-uint256-_childskillindex-bytes-memory-_key-bytes-memory-_value-uint256-_branchmask-bytes32-memory-_siblings"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"escalateMotion(uint256 _motionId, uint256 _newDomainId, uint256 _childSkillIndex, bytes memory _key, bytes memory _value, uint256 _branchMask, bytes32[] memory _siblings)")),(0,r.yg)("p",null,"Escalate a motion to a higher domain"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_newDomainId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The desired domain of escalation")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_childSkillIndex"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"For the current domain, relative to the escalated domain")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_key"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes"),(0,r.yg)("td",{parentName:"tr",align:null},"Reputation tree key for the new domain")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_value"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes"),(0,r.yg)("td",{parentName:"tr",align:null},"Reputation tree value for the new domain")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_branchMask"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The branchmask of the proof")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_siblings"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes32[]"),(0,r.yg)("td",{parentName:"tr",align:null},"The siblings of the proof")))),(0,r.yg)("h3",{id:"-failingexecutionalloweduint256-_motionidbool-_allowed"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"failingExecutionAllowed(uint256 _motionId):bool _allowed")),(0,r.yg)("p",null,"Return whether a motion, assuming it's in the finalizable state, is allowed to finalize without the call executing successfully."),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Note: We are only expecting this to be called from finalize motion in the contracts. It is marked as external only so that the frontend can use it.")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_allowed"),(0,r.yg)("td",{parentName:"tr",align:null},"bool"),(0,r.yg)("td",{parentName:"tr",align:null},"If motion is allowed to finalize without successful action")))),(0,r.yg)("h3",{id:"-finalizemotionuint256-_motionid"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"finalizeMotion(uint256 _motionId)")),(0,r.yg)("p",null,"Finalized a motion, executing its action if appropriate"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion to finalize")))),(0,r.yg)("h3",{id:"-getescalationperioduint256-_period"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getEscalationPeriod():uint256 _period")),(0,r.yg)("p",null,"Get the escalation period"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_period"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The escalation period")))),(0,r.yg)("h3",{id:"-getexpendituremotioncountbytes32-_structhashuint256-_count"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getExpenditureMotionCount(bytes32 _structHash):uint256 _count")),(0,r.yg)("p",null,"Get the number of ongoing motions for a single expenditure / expenditure slot"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_structHash"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes32"),(0,r.yg)("td",{parentName:"tr",align:null},"The hash of the expenditureId or expenditureId*expenditureSlot")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_count"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The number of ongoing motions")))),(0,r.yg)("h3",{id:"-getexpenditurepastvotebytes32-_actionhashuint256-_vote"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getExpenditurePastVote(bytes32 _actionHash):uint256 _vote")),(0,r.yg)("p",null,"Get the largest past vote on a single expenditure variable"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_actionHash"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes32"),(0,r.yg)("td",{parentName:"tr",align:null},"The hash of the particular expenditure action")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_vote"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The largest past vote on this variable")))),(0,r.yg)("h3",{id:"-getmaxvotefractionuint256-_fraction"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getMaxVoteFraction():uint256 _fraction")),(0,r.yg)("p",null,"Get the max vote fraction"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_fraction"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The max vote fraction")))),(0,r.yg)("h3",{id:"-getmotionuint256-_motionidmotion-_motion"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getMotion(uint256 _motionId):Motion _motion")),(0,r.yg)("p",null,"Get the data for a single motion"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motion"),(0,r.yg)("td",{parentName:"tr",align:null},"Motion"),(0,r.yg)("td",{parentName:"tr",align:null},"The motion struct")))),(0,r.yg)("h3",{id:"-getmotioncountuint256-_count"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getMotionCount():uint256 _count")),(0,r.yg)("p",null,"Get the total motion count"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_count"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The total motion count")))),(0,r.yg)("h3",{id:"-getmotionstateuint256-_motionidmotionstate-_motionstate"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getMotionState(uint256 _motionId):MotionState _motionState")),(0,r.yg)("p",null,"Get the current state of the motion"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionState"),(0,r.yg)("td",{parentName:"tr",align:null},"MotionState"),(0,r.yg)("td",{parentName:"tr",align:null},"The current motion state")))),(0,r.yg)("h3",{id:"-getrevealperioduint256-_period"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getRevealPeriod():uint256 _period")),(0,r.yg)("p",null,"Get the reveal period"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_period"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The reveal period")))),(0,r.yg)("h3",{id:"-getstakeuint256-_motionid-address-_staker-uint256-_voteuint256-_stake"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getStake(uint256 _motionId, address _staker, uint256 _vote):uint256 _stake")),(0,r.yg)("p",null,"Get a user's stake on a motion"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_staker"),(0,r.yg)("td",{parentName:"tr",align:null},"address"),(0,r.yg)("td",{parentName:"tr",align:null},"The staker address")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_vote"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The side being supported (0 = NAY, 1 = YAY)")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_stake"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The user's stake")))),(0,r.yg)("h3",{id:"-getstakeperioduint256-_period"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getStakePeriod():uint256 _period")),(0,r.yg)("p",null,"Get the stake period"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_period"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The stake period")))),(0,r.yg)("h3",{id:"-getstakerrewarduint256-_motionid-address-_staker-uint256-_voteuint256-_reward-uint256-_penalty"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getStakerReward(uint256 _motionId, address _staker, uint256 _vote):uint256 _reward, uint256 _penalty")),(0,r.yg)("p",null,"Get the staker reward"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_staker"),(0,r.yg)("td",{parentName:"tr",align:null},"address"),(0,r.yg)("td",{parentName:"tr",align:null},"The staker's address")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_vote"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The vote (0 = NAY, 1 = YAY)")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_reward"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The staker reward (if any)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_penalty"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The reputation penalty (if any)")))),(0,r.yg)("h3",{id:"-getsubmitperioduint256-_period"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getSubmitPeriod():uint256 _period")),(0,r.yg)("p",null,"Get the submit period"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_period"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The submit period")))),(0,r.yg)("h3",{id:"-gettotalstakefractionuint256-_fraction"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getTotalStakeFraction():uint256 _fraction")),(0,r.yg)("p",null,"Get the total stake fraction"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_fraction"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The total stake fraction")))),(0,r.yg)("h3",{id:"-getuserminstakefractionuint256-_fraction"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getUserMinStakeFraction():uint256 _fraction")),(0,r.yg)("p",null,"Get the user min stake fraction"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_fraction"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The user min stake fraction")))),(0,r.yg)("h3",{id:"-getvoterrewarduint256-_motionid-uint256-_voterrepuint256-_reward"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getVoterReward(uint256 _motionId, uint256 _voterRep):uint256 _reward")),(0,r.yg)("p",null,"Get the voter reward NB This function will only return a meaningful value if in the reveal state. Prior to the reveal state, getVoterRewardRange should be used."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_voterRep"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The reputation the voter has in the domain")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_reward"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The voter reward")))),(0,r.yg)("h3",{id:"-getvoterrewardfractionuint256-_fraction"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getVoterRewardFraction():uint256 _fraction")),(0,r.yg)("p",null,"Get the voter reward fraction"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_fraction"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The voter reward fraction")))),(0,r.yg)("h3",{id:"-getvoterrewardrangeuint256-_motionid-uint256-_voterrep-address-_voteraddressuint256-_rewardmin-uint256-_rewardmax"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"getVoterRewardRange(uint256 _motionId, uint256 _voterRep, address _voterAddress):uint256 _rewardMin, uint256 _rewardMax")),(0,r.yg)("p",null,"Get the range of potential rewards for a voter on a specific motion, intended to be used when the motion is in the reveal state. Once a motion is in the reveal state the reward is known, and getVoterRewardRange should be used."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_voterRep"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The reputation the voter has in the domain")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_voterAddress"),(0,r.yg)("td",{parentName:"tr",align:null},"address"),(0,r.yg)("td",{parentName:"tr",align:null},"The address the user will be voting as")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Return Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_rewardMin"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The voter reward range lower bound")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_rewardMax"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The voter reward range upper bound")))),(0,r.yg)("h3",{id:"-initialiseuint256-_totalstakefraction-uint256-_voterrewardfraction-uint256-_userminstakefraction-uint256-_maxvotefraction-uint256-_stakeperiod-uint256-_submitperiod-uint256-_revealperiod-uint256-_escalationperiod"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"initialise(uint256 _totalStakeFraction, uint256 _voterRewardFraction, uint256 _userMinStakeFraction, uint256 _maxVoteFraction, uint256 _stakePeriod, uint256 _submitPeriod, uint256 _revealPeriod, uint256 _escalationPeriod)")),(0,r.yg)("p",null,"Initialise the extension"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_totalStakeFraction"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The fraction of the domain's reputation we need to stake")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_voterRewardFraction"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The fraction of the total stake paid out to voters as rewards")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_userMinStakeFraction"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The minimum per-user stake as fraction of total stake")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_maxVoteFraction"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The fraction of the domain's reputation which must submit for quick-end")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_stakePeriod"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The length of the staking period in seconds")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_submitPeriod"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The length of the submit period in seconds")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_revealPeriod"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The length of the reveal period in seconds")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_escalationPeriod"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The length of the escalation period in seconds")))),(0,r.yg)("h3",{id:"-revealvoteuint256-_motionid-bytes32-_salt-uint256-_vote-bytes-memory-_key-bytes-memory-_value-uint256-_branchmask-bytes32-memory-_siblings"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"revealVote(uint256 _motionId, bytes32 _salt, uint256 _vote, bytes memory _key, bytes memory _value, uint256 _branchMask, bytes32[] memory _siblings)")),(0,r.yg)("p",null,"Reveal a vote secret for a motion"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_salt"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes32"),(0,r.yg)("td",{parentName:"tr",align:null},"The salt used to hash the vote")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_vote"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The side being supported (0 = NAY, 1 = YAY)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_key"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes"),(0,r.yg)("td",{parentName:"tr",align:null},"Reputation tree key for the staker/domain")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_value"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes"),(0,r.yg)("td",{parentName:"tr",align:null},"Reputation tree value for the staker/domain")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_branchMask"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The branchmask of the proof")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_siblings"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes32[]"),(0,r.yg)("td",{parentName:"tr",align:null},"The siblings of the proof")))),(0,r.yg)("h3",{id:"-stakemotionuint256-_motionid-uint256-_permissiondomainid-uint256-_childskillindex-uint256-_vote-uint256-_amount-bytes-memory-_key-bytes-memory-_value-uint256-_branchmask-bytes32-memory-_siblings"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"stakeMotion(uint256 _motionId, uint256 _permissionDomainId, uint256 _childSkillIndex, uint256 _vote, uint256 _amount, bytes memory _key, bytes memory _value, uint256 _branchMask, bytes32[] memory _siblings)")),(0,r.yg)("p",null,"Stake on a motion"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_permissionDomainId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The domain where the extension has the arbitration permission")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_childSkillIndex"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"For the domain in which the motion is occurring")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_vote"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The side being supported (0 = NAY, 1 = YAY)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_amount"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The amount of tokens being staked")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_key"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes"),(0,r.yg)("td",{parentName:"tr",align:null},"Reputation tree key for the staker/domain")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_value"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes"),(0,r.yg)("td",{parentName:"tr",align:null},"Reputation tree value for the staker/domain")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_branchMask"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The branchmask of the proof")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_siblings"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes32[]"),(0,r.yg)("td",{parentName:"tr",align:null},"The siblings of the proof")))),(0,r.yg)("h3",{id:"-submitvoteuint256-_motionid-bytes32-_votesecret-bytes-memory-_key-bytes-memory-_value-uint256-_branchmask-bytes32-memory-_siblings"},"\u25b8 ",(0,r.yg)("inlineCode",{parentName:"h3"},"submitVote(uint256 _motionId, bytes32 _voteSecret, bytes memory _key, bytes memory _value, uint256 _branchMask, bytes32[] memory _siblings)")),(0,r.yg)("p",null,"Submit a vote secret for a motion"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Parameters")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_motionId"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the motion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_voteSecret"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes32"),(0,r.yg)("td",{parentName:"tr",align:null},"The hashed vote secret")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_key"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes"),(0,r.yg)("td",{parentName:"tr",align:null},"Reputation tree key for the staker/domain")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_value"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes"),(0,r.yg)("td",{parentName:"tr",align:null},"Reputation tree value for the staker/domain")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_branchMask"),(0,r.yg)("td",{parentName:"tr",align:null},"uint256"),(0,r.yg)("td",{parentName:"tr",align:null},"The branchmask of the proof")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_siblings"),(0,r.yg)("td",{parentName:"tr",align:null},"bytes32[]"),(0,r.yg)("td",{parentName:"tr",align:null},"The siblings of the proof")))))}u.isMDXComponent=!0}}]);