"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[90272],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=o.createContext({}),c=function(e){var t=o.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,d=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,y=p["".concat(d,".").concat(m)]||p[m]||s[m]||l;return n?o.createElement(y,r(r({ref:t},u),{},{components:n})):o.createElement(y,r({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=p;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var c=2;c<l;c++)r[c]=n[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},52096:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>p,Bullet:()=>u,Details:()=>y,SpecifiedBy:()=>s,assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>r,metadata:()=>d,toc:()=>m});var o=n(87462),a=n(67294),l=n(3905);const r={id:"update-colony-funds-claim",title:"updateColonyFundsClaim",hide_table_of_contents:!1},i=void 0,d={unversionedId:"graphql/mutations/update-colony-funds-claim",id:"graphql/mutations/update-colony-funds-claim",title:"updateColonyFundsClaim",description:"No description",source:"@site/colony/graphql/mutations/update-colony-funds-claim.mdx",sourceDirName:"graphql/mutations",slug:"/graphql/mutations/update-colony-funds-claim",permalink:"/next/graphql/mutations/update-colony-funds-claim",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/mutations/update-colony-funds-claim.mdx",tags:[],version:"current",frontMatter:{id:"update-colony-funds-claim",title:"updateColonyFundsClaim",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"updateColonyExtension",permalink:"/next/graphql/mutations/update-colony-extension"},next:{title:"updateColonyMetadata",permalink:"/next/graphql/mutations/update-colony-metadata"}},c={},u=()=>(0,l.kt)(a.Fragment,null,(0,l.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,l.kt)(a.Fragment,null,"Specification",(0,l.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),p=e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("span",{className:"badge badge--"+e.class},e.text)),m=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>updateColonyFundsClaim.<b>input</b></code><Bullet /><code>UpdateColonyFundsClaimInput!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-updatecolonyfundsclaimbinputbcodeupdatecolonyfundsclaiminput--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>updateColonyFundsClaim.<b>condition</b></code><Bullet /><code>ModelColonyFundsClaimConditionInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-updatecolonyfundsclaimbconditionbcodemodelcolonyfundsclaimconditioninput-",level:4},{value:"Type",id:"type",level:3},{value:'<code>ColonyFundsClaim</code> <Badge class="secondary" text="object"/>',id:"colonyfundsclaim-",level:4}],y=e=>{let{dataOpen:t,dataClose:n,children:r,startOpen:i=!1}=e;const[d,c]=(0,a.useState)(i);return(0,l.kt)("details",(0,o.Z)({},d?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,l.kt)("summary",{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"}},d?t:n),d&&r)},f={Bullet:u,SpecifiedBy:s,Badge:p,toc:m,Details:y};function g(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,o.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"No description"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"updateColonyFundsClaim(\n  input: UpdateColonyFundsClaimInput!\n  condition: ModelColonyFundsClaimConditionInput\n): ColonyFundsClaim\n")),(0,l.kt)("h3",{id:"arguments"},"Arguments"),(0,l.kt)("h4",{id:"code-style-fontweight-normal-updatecolonyfundsclaimbinputbcodeupdatecolonyfundsclaiminput--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"updateColonyFundsClaim.",(0,l.kt)("b",null,"input"))),(0,l.kt)(u,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/inputs/update-colony-funds-claim-input"},(0,l.kt)("inlineCode",{parentName:"a"},"UpdateColonyFundsClaimInput!"))," ",(0,l.kt)(p,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,l.kt)(p,{class:"secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-updatecolonyfundsclaimbconditionbcodemodelcolonyfundsclaimconditioninput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"updateColonyFundsClaim.",(0,l.kt)("b",null,"condition"))),(0,l.kt)(u,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/inputs/model-colony-funds-claim-condition-input"},(0,l.kt)("inlineCode",{parentName:"a"},"ModelColonyFundsClaimConditionInput"))," ",(0,l.kt)(p,{class:"secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null),(0,l.kt)("h3",{id:"type"},"Type"),(0,l.kt)("h4",{id:"colonyfundsclaim-"},(0,l.kt)("a",{parentName:"h4",href:"/graphql/objects/colony-funds-claim"},(0,l.kt)("inlineCode",{parentName:"a"},"ColonyFundsClaim"))," ",(0,l.kt)(p,{class:"secondary",text:"object",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Represents a Colony Funds Claim for all ERC20 tokens (except native chain tokens)")))}g.isMDXComponent=!0}}]);