"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[44690],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,g=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return n?a.createElement(g,l(l({ref:t},u),{},{components:n})):a.createElement(g,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},24299:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>c,Bullet:()=>u,Details:()=>g,SpecifiedBy:()=>d,assets:()=>p,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>m});var a=n(87462),r=n(67294),o=n(3905);const l={id:"get-user-reputation-input",title:"GetUserReputationInput",hide_table_of_contents:!1},i=void 0,s={unversionedId:"graphql/inputs/get-user-reputation-input",id:"graphql/inputs/get-user-reputation-input",title:"GetUserReputationInput",description:"Input data for a user's reputation within a Domain in a Colony. If no domainId is passed, the Root Domain is used.",source:"@site/colony/graphql/inputs/get-user-reputation-input.mdx",sourceDirName:"graphql/inputs",slug:"/graphql/inputs/get-user-reputation-input",permalink:"/next/graphql/inputs/get-user-reputation-input",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/inputs/get-user-reputation-input.mdx",tags:[],version:"current",frontMatter:{id:"get-user-reputation-input",title:"GetUserReputationInput",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"GetReputationForTopDomainsInput",permalink:"/next/graphql/inputs/get-reputation-for-top-domains-input"},next:{title:"GetUserTokenBalanceInput",permalink:"/next/graphql/inputs/get-user-token-balance-input"}},p={},u=()=>(0,o.kt)(r.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),d=e=>(0,o.kt)(r.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),c=e=>(0,o.kt)(r.Fragment,null,(0,o.kt)("span",{className:"badge badge--"+e.class},e.text)),m=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>GetUserReputationInput.<b>walletAddress</b></code><Bullet /><code>String!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-getuserreputationinputbwalletaddressbcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>GetUserReputationInput.<b>colonyAddress</b></code><Bullet /><code>String!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-getuserreputationinputbcolonyaddressbcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>GetUserReputationInput.<b>domainId</b></code><Bullet /><code>Int</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-getuserreputationinputbdomainidbcodeint-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>GetUserReputationInput.<b>rootHash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-getuserreputationinputbroothashbcodestring-",level:4},{value:"Member of",id:"member-of",level:3}],g=e=>{let{dataOpen:t,dataClose:n,children:l,startOpen:i=!1}=e;const[s,p]=(0,r.useState)(i);return(0,o.kt)("details",(0,a.Z)({},s?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,o.kt)("summary",{onClick:e=>{e.preventDefault(),p((e=>!e))},style:{listStyle:"none"}},s?t:n),s&&l)},f={Bullet:u,SpecifiedBy:d,Badge:c,toc:m,Details:g};function h(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Input data for a user's reputation within a Domain in a Colony. If no ",(0,o.kt)("inlineCode",{parentName:"p"},"domainId")," is passed, the Root Domain is used.\nA ",(0,o.kt)("inlineCode",{parentName:"p"},"rootHash")," can be provided, to get reputation at a certain point in the past."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"input GetUserReputationInput {\n  walletAddress: String!\n  colonyAddress: String!\n  domainId: Int\n  rootHash: String\n}\n")),(0,o.kt)("h3",{id:"fields"},"Fields"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-getuserreputationinputbwalletaddressbcodestring--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"GetUserReputationInput.",(0,o.kt)("b",null,"walletAddress"))),(0,o.kt)(u,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/graphql/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,o.kt)(c,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,o.kt)(c,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The Ethereum wallet address of the user.")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-getuserreputationinputbcolonyaddressbcodestring--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"GetUserReputationInput.",(0,o.kt)("b",null,"colonyAddress"))),(0,o.kt)(u,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/graphql/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,o.kt)(c,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,o.kt)(c,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The Ethereum address of the Colony.")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-getuserreputationinputbdomainidbcodeint-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"GetUserReputationInput.",(0,o.kt)("b",null,"domainId"))),(0,o.kt)(u,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/graphql/scalars/int"},(0,o.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,o.kt)(c,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The ID of the Domain within the Colony. If not provided, defaults to the Root Domain.")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-getuserreputationinputbroothashbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"GetUserReputationInput.",(0,o.kt)("b",null,"rootHash"))),(0,o.kt)(u,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/graphql/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(c,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The root hash of the reputation tree at a specific point in time.")),(0,o.kt)("h3",{id:"member-of"},"Member of"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/graphql/queries/get-user-reputation"},(0,o.kt)("inlineCode",{parentName:"a"},"getUserReputation")),"  ",(0,o.kt)(c,{class:"secondary",text:"query",mdxType:"Badge"})))}h.isMDXComponent=!0}}]);