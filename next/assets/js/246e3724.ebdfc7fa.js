"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[8930],{8860:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>m});var a=t(7953);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),g=i,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||o;return t?a.createElement(m,r(r({ref:n},c),{},{components:t})):a.createElement(m,r({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:i,r[1]=l;for(var p=2;p<o;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},9302:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=t(4432),i=(t(7953),t(8860));const o={description:"How to use the Reputation Mining Client",sidebar_position:2},r="Reputation Mining Client",l={unversionedId:"guides/reputation-mining",id:"guides/reputation-mining",title:"Reputation Mining Client",description:"How to use the Reputation Mining Client",source:"@site/vendor/colonyNetwork/docs/guides/reputation-mining.md",sourceDirName:"guides",slug:"/guides/reputation-mining",permalink:"/next/colonynetwork/guides/reputation-mining",draft:!1,editUrl:"https://github.com/JoinColony/colonyNetwork/edit/develop/docs/guides/reputation-mining.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{description:"How to use the Reputation Mining Client",sidebar_position:2},sidebar:"sidebar",previous:{title:"Reputation Oracle Setup",permalink:"/next/colonynetwork/guides/reputation-oracle-setup"},next:{title:"The Colony Network",permalink:"/next/colonynetwork/"}},s={},p=[{value:"Running the Mining Client",id:"running-the-mining-client",level:2},{value:"<code>--minerAddress</code>",id:"--mineraddress",level:4},{value:"<code>--privateKey</code>",id:"--privatekey",level:4},{value:"<code>--colonyNetworkAddress</code>",id:"--colonynetworkaddress",level:4},{value:"<code>--dbPath</code>",id:"--dbpath",level:4},{value:"<code>--network</code>",id:"--network",level:4},{value:"<code>--localPort</code>",id:"--localport",level:4},{value:"<code>--syncFrom</code>",id:"--syncfrom",level:4},{value:"<code>--auto</code>",id:"--auto",level:4},{value:"Visualizations",id:"visualizations",level:2},{value:"Force Reputation Updates",id:"force-reputation-updates",level:3},{value:"Get Reputation from the Reputation Oracle",id:"get-reputation-from-the-reputation-oracle",level:2}],c={toc:p},d="wrapper";function u(e){let{components:n,...t}=e;return(0,i.yg)(d,(0,a.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"reputation-mining-client"},"Reputation Mining Client"),(0,i.yg)("h2",{id:"running-the-mining-client"},"Running the Mining Client"),(0,i.yg)("p",null,"The reputation mining client can be run locally to sync with a local ganache instance, the ",(0,i.yg)("inlineCode",{parentName:"p"},"goerli")," testnet, or with glider on ",(0,i.yg)("inlineCode",{parentName:"p"},"mainnet"),"."),(0,i.yg)("p",null,"To participate in the reputation mining process you need to have staked at least the ",(0,i.yg)("a",{parentName:"p",href:"../interfaces/ireputationminingcycle#getminstake-uint256-minstake"},"minimum amount of CLNY Tokens"),", for at least ",(0,i.yg)("a",{parentName:"p",href:"../interfaces/ireputationminingcycle#getminingwindowduration-uint256-miningwindowduration"},"one full mining cycle duration")," before you can submit a new reputation root hash."),(0,i.yg)("p",null,"Usage:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"node packages/reputation-miner/bin/index.js (--arguments <params>) [--arguments <params>]\n")),(0,i.yg)("p",null,"Mandatory arguments:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"(--minerAddress <address>) | (--privateKey <key>)\n(--colonyNetworkAddress <address>)\n(--syncFrom <number>)   // [goerli:'548534', mainnet:'7913100']\n")),(0,i.yg)("p",null,"Optional arguments:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"[--network <(goerli|mainnet)>]  \n[--localPort <number>]\n[--dbPath <$PATH>]\n[--auto <(true|false)>]\n")),(0,i.yg)("h4",{id:"--mineraddress"},(0,i.yg)("inlineCode",{parentName:"h4"},"--minerAddress")),(0,i.yg)("p",null,"Address of the miner account which the client will send reputation mining contract transactions from. Used when working with an unlocked account for the miner against ",(0,i.yg)("strong",{parentName:"p"},"development networks only"),". We provision twelve unlocked test accounts stored in ",(0,i.yg)("inlineCode",{parentName:"p"},"ganache-accounts.json")," for testing that are available when starting a local ganache-cli instance via ",(0,i.yg)("inlineCode",{parentName:"p"},"npm run start:blockchain:client")," command."),(0,i.yg)("h4",{id:"--privatekey"},(0,i.yg)("inlineCode",{parentName:"h4"},"--privateKey")),(0,i.yg)("p",null,"Private key of the miner account which the client will sign reputation mining contract transactions with."),(0,i.yg)("h4",{id:"--colonynetworkaddress"},(0,i.yg)("inlineCode",{parentName:"h4"},"--colonyNetworkAddress")),(0,i.yg)("p",null,"The address of the Colony Network's ",(0,i.yg)("inlineCode",{parentName:"p"},"EtherRouter"),". See ",(0,i.yg)("a",{parentName:"p",href:"../concepts/upgrades"},"Upgrades to the Colony Network")," for more information about the EtherRouter design pattern. This address is static on ",(0,i.yg)("inlineCode",{parentName:"p"},"goerli")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"mainnet")," ",(0,i.yg)("inlineCode",{parentName:"p"},"goerli")," ",(0,i.yg)("inlineCode",{parentName:"p"},"0x79073fc2117dD054FCEdaCad1E7018C9CbE3ec0B")," ",(0,i.yg)("inlineCode",{parentName:"p"},"mainnet")," ",(0,i.yg)("inlineCode",{parentName:"p"},"0x5346d0f80e2816fad329f2c140c870ffc3c3e2ef")),(0,i.yg)("h4",{id:"--dbpath"},(0,i.yg)("inlineCode",{parentName:"h4"},"--dbPath")),(0,i.yg)("p",null,"Path for the sqlite database storing reputation state. Default is ",(0,i.yg)("inlineCode",{parentName:"p"},"./reputationStates.sqlite"),"."),(0,i.yg)("h4",{id:"--network"},(0,i.yg)("inlineCode",{parentName:"h4"},"--network")),(0,i.yg)("p",null,"Used for connecting to a supported Infura node (instead of a local client). Valid options are ",(0,i.yg)("inlineCode",{parentName:"p"},"goerli")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"mainnet"),"."),(0,i.yg)("h4",{id:"--localport"},(0,i.yg)("inlineCode",{parentName:"h4"},"--localPort")),(0,i.yg)("p",null,"Used to connect to a local clinet running on the specified port. Default is ",(0,i.yg)("inlineCode",{parentName:"p"},"8545"),"."),(0,i.yg)("h4",{id:"--syncfrom"},(0,i.yg)("inlineCode",{parentName:"h4"},"--syncFrom")),(0,i.yg)("p",null,"Block number to start reputation state sync from. This is the block at which the reputation mining process was initialised. This number is static on ",(0,i.yg)("inlineCode",{parentName:"p"},"goerli")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"mainnet")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"goerli: 548534")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"mainnet: 7913100"))),(0,i.yg)("p",null,"Note that beginning the sync with a too-early block will result in an error. If you get this exception, try syncing from a more recent block. Note that the sync process can take long. Latest tests syncing a client from scratch to 28 reputation cycles took ","~","2 hours."),(0,i.yg)("h4",{id:"--auto"},(0,i.yg)("inlineCode",{parentName:"h4"},"--auto")),(0,i.yg)("p",null,"Default is ",(0,i.yg)("inlineCode",{parentName:"p"},"true")),(0,i.yg)("p",null,'The "auto" reputation mining client will:'),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Propose a new hash at the first possible block time, and submit until the maximum number has been reached (based on staked CLNY, with a maximum of 12 submissions allowed)"),(0,i.yg)("li",{parentName:"ul"},"Respond to challenges if there are disagreeing submissions."),(0,i.yg)("li",{parentName:"ul"},"Confirm the last hash after the mining window closes and any disputes have been resolved.")),(0,i.yg)("p",null,"Reputation mining protocol details can be found in the ",(0,i.yg)("a",{parentName:"p",href:"../tldr/reputation-mining"},"Whitepaper TLDR"),"."),(0,i.yg)("h2",{id:"visualizations"},"Visualizations"),(0,i.yg)("p",null,"The reputation mining client comes with a set of built-in visualizers to make it easier to view reputation states and to see the current state of the mining process. Once a mining client is running and connected to a network, navigate to the client's address in a browser (i.e. ",(0,i.yg)("inlineCode",{parentName:"p"},"http://localhost:3000/"),") to access the available visualization tools."),(0,i.yg)("h3",{id:"force-reputation-updates"},"Force Reputation Updates"),(0,i.yg)("p",null,'The client is set to provide a reputation update once every 24 hours. For testing, you\'ll likely want to "fast-forward" your network through a few submissions to see usable reputation.'),(0,i.yg)("p",null,"You can move the network forward by 24 hours with the following command."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},'curl -H "Content-Type: application/json" -X POST --data \'{"jsonrpc":"2.0","method":"evm_increaseTime","params":[86400],"id": 1}\' localhost:8545\n')),(0,i.yg)("p",null,"Once you have moved the network forward 24 hours, you can then mine a new block with the following command."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},'curl -H "Content-Type: application/json" -X POST --data \'{"jsonrpc":"2.0","method":"evm_mine","params":[]}\' localhost:8545\n')),(0,i.yg)("p",null,"Note that because reputation is awarded for the ",(0,i.yg)("em",{parentName:"p"},"previous"),' submission window, you will need to use the "fast-forward" command above to speed through at least 2 reputation updates before noticing a change in the miner\'s reputation.'),(0,i.yg)("h2",{id:"get-reputation-from-the-reputation-oracle"},"Get Reputation from the Reputation Oracle"),(0,i.yg)("p",null,"The reputation mining client will answer queries for reputation scores locally over HTTP."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"http://127.0.0.1:3000/{reputationState}/{colonyAddress}/{skillId}/{userAddress}\n")),(0,i.yg)("p",null,"An instance of the oracle is available for reputation queries against ",(0,i.yg)("inlineCode",{parentName:"p"},"goerli")," or ",(0,i.yg)("inlineCode",{parentName:"p"},"mainnet")," networks:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"https://xdai.colony.io/reputation/{network}/{reputationState}/{colonyAddress}/{skillId}/{userAddress}\n")),(0,i.yg)("p",null,"The oracle should be able to provide responses to any valid reputation score in all historical states, as well as the current state. For querying the colony-wide reputation instead of user-specific one, instead of {userAddress} use a zero address (",(0,i.yg)("inlineCode",{parentName:"p"},"0x0000000000000000000000000000000000000000"),")"),(0,i.yg)("p",null,"For example, you can get the reputation score of the miner in a reputation state ",(0,i.yg)("inlineCode",{parentName:"p"},"0xc7eb2cf60aa4848ce0feed5d713c07fd26e404dd50ca3b9e4f2fabef196ca3bc"),") using the address of the Meta Colony (",(0,i.yg)("inlineCode",{parentName:"p"},"0x14946533cefe742399e9734a123f0c02d0405a51"),"), the mining skill id (",(0,i.yg)("inlineCode",{parentName:"p"},"2"),"), and address of a miner (",(0,i.yg)("inlineCode",{parentName:"p"},"0x0A1d439C7d0b9244035d4F934BBF8A418B35d064"),")."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"https://xdai.colony.io/reputation/mainnet/0xc7eb2cf60aa4848ce0feed5d713c07fd26e404dd50ca3b9e4f2fabef196ca3bc/0x14946533cefe742399e9734a123f0c02d0405a51/2/0x0A1d439C7d0b9244035d4F934BBF8A418B35d064\n")),(0,i.yg)("p",null,"The oracle returns"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'{"branchMask":"0xc000000000000000000000000000000000000000000000000000000000000000","siblings":["0x15c45d734bccc204df2e275d516250ed0a1cd60ccabadf49e2157a3e8067e59c","0xd4ee79473ec5573d706be030f3077c44aef06f26745349bbd93dcf5f4e254422"],"key":"0x14946533cefe742399e9734a123f0c02d0405a5100000000000000000000000000000000000000000000000000000000000000020a1d439c7d0b9244035d4f934bbf8a418b35d064","value":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004","reputation":"0x0000000000000000000000000000000000000000000000000000000000000000","uid":"0x0000000000000000000000000000000000000000000000000000000000000004","reputationAmount":"0"}\n')))}u.isMDXComponent=!0}}]);