"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8838],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>s});var o=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,l=function(e,t){if(null==e)return{};var n,o,l={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=o.createContext({}),c=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=c(n),s=l,m=u["".concat(i,".").concat(s)]||u[s]||y[s]||r;return n?o.createElement(m,a(a({ref:t},d),{},{components:n})):o.createElement(m,a({ref:t},d))}));function s(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,a=new Array(r);a[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:l,a[1]=p;for(var c=2;c<r;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},55982:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>u,Bullet:()=>d,Details:()=>m,SpecifiedBy:()=>y,assets:()=>c,contentTitle:()=>p,default:()=>g,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var o=n(87462),l=n(67294),r=n(3905);const a={id:"model-colony-type-input",title:"ModelColonyTypeInput",hide_table_of_contents:!1},p=void 0,i={unversionedId:"graphql/inputs/model-colony-type-input",id:"graphql/inputs/model-colony-type-input",title:"ModelColonyTypeInput",description:"No description",source:"@site/colony/graphql/inputs/model-colony-type-input.mdx",sourceDirName:"graphql/inputs",slug:"/graphql/inputs/model-colony-type-input",permalink:"/next/graphql/inputs/model-colony-type-input",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/inputs/model-colony-type-input.mdx",tags:[],version:"current",frontMatter:{id:"model-colony-type-input",title:"ModelColonyTypeInput",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"ModelColonyTokensFilterInput",permalink:"/next/graphql/inputs/model-colony-tokens-filter-input"},next:{title:"ModelContractEventConditionInput",permalink:"/next/graphql/inputs/model-contract-event-condition-input"}},c={},d=()=>(0,r.kt)(l.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),y=e=>(0,r.kt)(l.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,r.kt)(l.Fragment,null,(0,r.kt)("span",{className:"badge badge--"+e.class},e.text)),s=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyTypeInput.<b>eq</b></code><Bullet /><code>ColonyType</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-modelcolonytypeinputbeqbcodecolonytype-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyTypeInput.<b>ne</b></code><Bullet /><code>ColonyType</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-modelcolonytypeinputbnebcodecolonytype-",level:4},{value:"Member of",id:"member-of",level:3}],m=e=>{let{dataOpen:t,dataClose:n,children:a,startOpen:p=!1}=e;const[i,c]=(0,l.useState)(p);return(0,r.kt)("details",(0,o.Z)({},i?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,r.kt)("summary",{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"}},i?t:n),i&&a)},f={Bullet:d,SpecifiedBy:y,Badge:u,toc:s,Details:m};function g(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"No description"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"input ModelColonyTypeInput {\n  eq: ColonyType\n  ne: ColonyType\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-modelcolonytypeinputbeqbcodecolonytype-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyTypeInput.",(0,r.kt)("b",null,"eq"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/enums/colony-type"},(0,r.kt)("inlineCode",{parentName:"a"},"ColonyType"))," ",(0,r.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h4",{id:"code-style-fontweight-normal-modelcolonytypeinputbnebcodecolonytype-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyTypeInput.",(0,r.kt)("b",null,"ne"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/enums/colony-type"},(0,r.kt)("inlineCode",{parentName:"a"},"ColonyType"))," ",(0,r.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h3",{id:"member-of"},"Member of"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/graphql/inputs/model-colony-condition-input"},(0,r.kt)("inlineCode",{parentName:"a"},"ModelColonyConditionInput")),"  ",(0,r.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"p",href:"/graphql/inputs/model-colony-filter-input"},(0,r.kt)("inlineCode",{parentName:"a"},"ModelColonyFilterInput")),"  ",(0,r.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})))}g.isMDXComponent=!0}}]);