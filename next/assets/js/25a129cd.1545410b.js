"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[79143],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>p});var o=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,l=function(e,n){if(null==e)return{};var t,o,l={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var i=o.createContext({}),d=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=d(e.components);return o.createElement(i.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=d(t),p=l,y=u["".concat(i,".").concat(p)]||u[p]||m[p]||a;return t?o.createElement(y,r(r({ref:n},s),{},{components:t})):o.createElement(y,r({ref:n},s))}));function p(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,r=new Array(a);r[0]=u;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:l,r[1]=c;for(var d=2;d<a;d++)r[d]=t[d];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},82206:(e,n,t)=>{t.r(n),t.d(n,{Badge:()=>u,Bullet:()=>s,Details:()=>y,SpecifiedBy:()=>m,assets:()=>d,contentTitle:()=>c,default:()=>b,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var o=t(87462),l=t(67294),a=t(3905);const r={id:"model-colony-funds-claim-connection",title:"ModelColonyFundsClaimConnection",hide_table_of_contents:!1},c=void 0,i={unversionedId:"graphql/objects/model-colony-funds-claim-connection",id:"graphql/objects/model-colony-funds-claim-connection",title:"ModelColonyFundsClaimConnection",description:"No description",source:"@site/colony/graphql/objects/model-colony-funds-claim-connection.mdx",sourceDirName:"graphql/objects",slug:"/graphql/objects/model-colony-funds-claim-connection",permalink:"/next/graphql/objects/model-colony-funds-claim-connection",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/objects/model-colony-funds-claim-connection.mdx",tags:[],version:"current",frontMatter:{id:"model-colony-funds-claim-connection",title:"ModelColonyFundsClaimConnection",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"ModelColonyExtensionConnection",permalink:"/next/graphql/objects/model-colony-extension-connection"},next:{title:"ModelColonyMetadataConnection",permalink:"/next/graphql/objects/model-colony-metadata-connection"}},d={},s=()=>(0,a.kt)(l.Fragment,null,(0,a.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),m=e=>(0,a.kt)(l.Fragment,null,"Specification",(0,a.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,a.kt)(l.Fragment,null,(0,a.kt)("span",{className:"badge badge--"+e.class},e.text)),p=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyFundsClaimConnection.<b>items</b></code><Bullet /><code>[ColonyFundsClaim]!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-modelcolonyfundsclaimconnectionbitemsbcodecolonyfundsclaim--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ModelColonyFundsClaimConnection.<b>nextToken</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-modelcolonyfundsclaimconnectionbnexttokenbcodestring-",level:4},{value:"Returned by",id:"returned-by",level:3},{value:"Member of",id:"member-of",level:3}],y=e=>{let{dataOpen:n,dataClose:t,children:r,startOpen:c=!1}=e;const[i,d]=(0,l.useState)(c);return(0,a.kt)("details",(0,o.Z)({},i?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,a.kt)("summary",{onClick:e=>{e.preventDefault(),d((e=>!e))},style:{listStyle:"none"}},i?n:t),i&&r)},f={Bullet:s,SpecifiedBy:m,Badge:u,toc:p,Details:y};function b(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"No description"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"type ModelColonyFundsClaimConnection {\n  items: [ColonyFundsClaim]!\n  nextToken: String\n}\n")),(0,a.kt)("h3",{id:"fields"},"Fields"),(0,a.kt)("h4",{id:"code-style-fontweight-normal-modelcolonyfundsclaimconnectionbitemsbcodecolonyfundsclaim--"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyFundsClaimConnection.",(0,a.kt)("b",null,"items"))),(0,a.kt)(s,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/graphql/objects/colony-funds-claim"},(0,a.kt)("inlineCode",{parentName:"a"},"[ColonyFundsClaim]!"))," ",(0,a.kt)(u,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,a.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})),(0,a.kt)("blockquote",null),(0,a.kt)("h4",{id:"code-style-fontweight-normal-modelcolonyfundsclaimconnectionbnexttokenbcodestring-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"ModelColonyFundsClaimConnection.",(0,a.kt)("b",null,"nextToken"))),(0,a.kt)(s,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/graphql/scalars/string"},(0,a.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,a.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,a.kt)("blockquote",null),(0,a.kt)("h3",{id:"returned-by"},"Returned by"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/graphql/queries/list-colony-funds-claims"},(0,a.kt)("inlineCode",{parentName:"a"},"listColonyFundsClaims")),"  ",(0,a.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"})),(0,a.kt)("h3",{id:"member-of"},"Member of"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/graphql/objects/colony"},(0,a.kt)("inlineCode",{parentName:"a"},"Colony")),"  ",(0,a.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})))}b.isMDXComponent=!0}}]);