"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[30914],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>u});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function l(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?l(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):l(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)o=l[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)o=l[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var i=n.createContext({}),c=function(e){var t=n.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},d=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(o),u=r,y=m["".concat(i,".").concat(u)]||m[u]||p[u]||l;return o?n.createElement(y,a(a({ref:t},d),{},{components:o})):n.createElement(y,a({ref:t},d))}));function u(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=o.length,a=new Array(l);a[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var c=2;c<l;c++)a[c]=o[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},86198:(e,t,o)=>{o.r(t),o.d(t,{Badge:()=>m,Bullet:()=>d,Details:()=>y,SpecifiedBy:()=>p,assets:()=>c,contentTitle:()=>s,default:()=>b,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var n=o(87462),r=o(67294),l=o(3905);const a={id:"members-for-colony-input",title:"MembersForColonyInput",hide_table_of_contents:!1},s=void 0,i={unversionedId:"graphql/inputs/members-for-colony-input",id:"graphql/inputs/members-for-colony-input",title:"MembersForColonyInput",description:"Input data for fetching the list of members for a specific Colony.",source:"@site/colony/graphql/inputs/members-for-colony-input.mdx",sourceDirName:"graphql/inputs",slug:"/graphql/inputs/members-for-colony-input",permalink:"/next/graphql/inputs/members-for-colony-input",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/graphql/inputs/members-for-colony-input.mdx",tags:[],version:"current",frontMatter:{id:"members-for-colony-input",title:"MembersForColonyInput",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"GetUserTokenBalanceInput",permalink:"/next/graphql/inputs/get-user-token-balance-input"},next:{title:"ModelBooleanInput",permalink:"/next/graphql/inputs/model-boolean-input"}},c={},d=()=>(0,l.kt)(r.Fragment,null,(0,l.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,l.kt)(r.Fragment,null,"Specification",(0,l.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,l.kt)(r.Fragment,null,(0,l.kt)("span",{className:"badge badge--"+e.class},e.text)),u=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>MembersForColonyInput.<b>colonyAddress</b></code><Bullet /><code>String!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-membersforcolonyinputbcolonyaddressbcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>MembersForColonyInput.<b>rootHash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-membersforcolonyinputbroothashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>MembersForColonyInput.<b>domainId</b></code><Bullet /><code>Int</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-membersforcolonyinputbdomainidbcodeint-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>MembersForColonyInput.<b>sortingMethod</b></code><Bullet /><code>SortingMethod</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-membersforcolonyinputbsortingmethodbcodesortingmethod-",level:4},{value:"Member of",id:"member-of",level:3}],y=e=>{let{dataOpen:t,dataClose:o,children:a,startOpen:s=!1}=e;const[i,c]=(0,r.useState)(s);return(0,l.kt)("details",(0,n.Z)({},i?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,l.kt)("summary",{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"}},i?t:o),i&&a)},f={Bullet:d,SpecifiedBy:p,Badge:m,toc:u,Details:y};function b(e){let{components:t,...o}=e;return(0,l.kt)("wrapper",(0,n.Z)({},f,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Input data for fetching the list of members for a specific Colony."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"input MembersForColonyInput {\n  colonyAddress: String!\n  rootHash: String\n  domainId: Int\n  sortingMethod: SortingMethod\n}\n")),(0,l.kt)("h3",{id:"fields"},"Fields"),(0,l.kt)("h4",{id:"code-style-fontweight-normal-membersforcolonyinputbcolonyaddressbcodestring--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"MembersForColonyInput.",(0,l.kt)("b",null,"colonyAddress"))),(0,l.kt)(d,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/scalars/string"},(0,l.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,l.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,l.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Address of the Colony.")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-membersforcolonyinputbroothashbcodestring-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"MembersForColonyInput.",(0,l.kt)("b",null,"rootHash"))),(0,l.kt)(d,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/scalars/string"},(0,l.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,l.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Root hash for the reputation state.")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-membersforcolonyinputbdomainidbcodeint-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"MembersForColonyInput.",(0,l.kt)("b",null,"domainId"))),(0,l.kt)(d,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/scalars/int"},(0,l.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,l.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"ID of the domain within the Colony.")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-membersforcolonyinputbsortingmethodbcodesortingmethod-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"MembersForColonyInput.",(0,l.kt)("b",null,"sortingMethod"))),(0,l.kt)(d,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/enums/sorting-method"},(0,l.kt)("inlineCode",{parentName:"a"},"SortingMethod"))," ",(0,l.kt)(m,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Sorting method to apply to the member list.")),(0,l.kt)("h3",{id:"member-of"},"Member of"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/graphql/queries/get-members-for-colony"},(0,l.kt)("inlineCode",{parentName:"a"},"getMembersForColony")),"  ",(0,l.kt)(m,{class:"secondary",text:"query",mdxType:"Badge"})))}b.isMDXComponent=!0}}]);