"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6090],{80418:e=>{e.exports=JSON.parse('{"pluginId":"develop_colonysdk","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"link","label":"Colony SDK","href":"/colonysdk/","docId":"index"},{"type":"category","label":"Start Building","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating your first transaction","href":"/colonysdk/getting-started/your-first-transaction","docId":"getting-started/your-first-transaction"}],"href":"/colonysdk/getting-started/"},{"type":"category","label":"Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating transactions in Colony SDK","href":"/colonysdk/guides/transactions","docId":"guides/transactions"},{"type":"link","label":"Creating a Colony","href":"/colonysdk/guides/colony-creation","docId":"guides/colony-creation"},{"type":"link","label":"Metadata within Colony","href":"/colonysdk/guides/metadata","docId":"guides/metadata"}],"href":"/colonysdk/guides/"},{"type":"category","label":"API","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Classes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Class: CloudflareReadonlyAdapter","href":"/colonysdk/api/classes/CloudflareReadonlyAdapter","docId":"api/classes/CloudflareReadonlyAdapter"},{"type":"link","label":"Class: Colony","href":"/colonysdk/api/classes/Colony","docId":"api/classes/Colony"},{"type":"link","label":"Class: ColonyEventManager","href":"/colonysdk/api/classes/ColonyEventManager","docId":"api/classes/ColonyEventManager"},{"type":"link","label":"Class: ColonyNetwork","href":"/colonysdk/api/classes/ColonyNetwork","docId":"api/classes/ColonyNetwork"},{"type":"link","label":"Class: ColonyToken","href":"/colonysdk/api/classes/ColonyToken","docId":"api/classes/ColonyToken"},{"type":"link","label":"Class: ColonyTxCreator<C, M, E, MD\\\\>","href":"/colonysdk/api/classes/ColonyTxCreator","docId":"api/classes/ColonyTxCreator"},{"type":"link","label":"Class: ERC20Token","href":"/colonysdk/api/classes/ERC20Token","docId":"api/classes/ERC20Token"},{"type":"link","label":"Class: ERC2612Token","href":"/colonysdk/api/classes/ERC2612Token","docId":"api/classes/ERC2612Token"},{"type":"link","label":"Class: IpfsMetadata","href":"/colonysdk/api/classes/IpfsMetadata","docId":"api/classes/IpfsMetadata"},{"type":"link","label":"Class: MetaTxCreator<C, M, E, MD\\\\>","href":"/colonysdk/api/classes/MetaTxCreator","docId":"api/classes/MetaTxCreator"},{"type":"link","label":"Class: OneTxPayment","href":"/colonysdk/api/classes/OneTxPayment","docId":"api/classes/OneTxPayment"},{"type":"link","label":"Class: PinataAdapter","href":"/colonysdk/api/classes/PinataAdapter","docId":"api/classes/PinataAdapter"},{"type":"link","label":"Class: ReputationClient","href":"/colonysdk/api/classes/ReputationClient","docId":"api/classes/ReputationClient"},{"type":"link","label":"Class: TokenLocking","href":"/colonysdk/api/classes/TokenLocking","docId":"api/classes/TokenLocking"},{"type":"link","label":"Class: TxCreator<C, M, E, MD\\\\>","href":"/colonysdk/api/classes/TxCreator","docId":"api/classes/TxCreator"},{"type":"link","label":"Class: VotingReputation","href":"/colonysdk/api/classes/VotingReputation","docId":"api/classes/VotingReputation"}]},{"type":"category","label":"Enums","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Enumeration: ColonyRole","href":"/colonysdk/api/enums/ColonyRole","docId":"api/enums/ColonyRole"},{"type":"link","label":"Enumeration: ColonyRpcEndpoint","href":"/colonysdk/api/enums/ColonyRpcEndpoint","docId":"api/enums/ColonyRpcEndpoint"},{"type":"link","label":"Enumeration: Extension","href":"/colonysdk/api/enums/Extension","docId":"api/enums/Extension"},{"type":"link","label":"Enumeration: Id","href":"/colonysdk/api/enums/Id","docId":"api/enums/Id"},{"type":"link","label":"Enumeration: MetadataType","href":"/colonysdk/api/enums/MetadataType","docId":"api/enums/MetadataType"},{"type":"link","label":"Enumeration: MotionState","href":"/colonysdk/api/enums/MotionState","docId":"api/enums/MotionState"},{"type":"link","label":"Enumeration: Network","href":"/colonysdk/api/enums/Network","docId":"api/enums/Network"},{"type":"link","label":"Enumeration: SupportedExtension","href":"/colonysdk/api/enums/SupportedExtension","docId":"api/enums/SupportedExtension"},{"type":"link","label":"Enumeration: TeamColor","href":"/colonysdk/api/enums/TeamColor","docId":"api/enums/TeamColor"},{"type":"link","label":"Enumeration: Gnosis","href":"/colonysdk/api/enums/Tokens.Gnosis","docId":"api/enums/Tokens.Gnosis"},{"type":"link","label":"Enumeration: Mainnet","href":"/colonysdk/api/enums/Tokens.Mainnet","docId":"api/enums/Tokens.Mainnet"},{"type":"link","label":"Enumeration: Vote","href":"/colonysdk/api/enums/Vote","docId":"api/enums/Vote"}]},{"type":"category","label":"Interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Interface: AnnotationData","href":"/colonysdk/api/interfaces/AnnotationData","docId":"api/interfaces/AnnotationData"},{"type":"link","label":"Interface: BaseContract","href":"/colonysdk/api/interfaces/BaseContract","docId":"api/interfaces/BaseContract"},{"type":"link","label":"Interface: ColonyData","href":"/colonysdk/api/interfaces/ColonyData","docId":"api/interfaces/ColonyData"},{"type":"link","label":"Interface: ColonyEvent<M\\\\>","href":"/colonysdk/api/interfaces/ColonyEvent","docId":"api/interfaces/ColonyEvent"},{"type":"link","label":"Interface: ColonyEventManagerOptions","href":"/colonysdk/api/interfaces/ColonyEventManagerOptions","docId":"api/interfaces/ColonyEventManagerOptions"},{"type":"link","label":"Interface: ColonyFilter","href":"/colonysdk/api/interfaces/ColonyFilter","docId":"api/interfaces/ColonyFilter"},{"type":"link","label":"Interface: ColonyMetaTransaction<C, E, R, MD\\\\>","href":"/colonysdk/api/interfaces/ColonyMetaTransaction","docId":"api/interfaces/ColonyMetaTransaction"},{"type":"link","label":"Interface: ColonyMultiFilter","href":"/colonysdk/api/interfaces/ColonyMultiFilter","docId":"api/interfaces/ColonyMultiFilter"},{"type":"link","label":"Interface: ColonyNetworkOptions","href":"/colonysdk/api/interfaces/ColonyNetworkOptions","docId":"api/interfaces/ColonyNetworkOptions"},{"type":"link","label":"Interface: ColonyTopic","href":"/colonysdk/api/interfaces/ColonyTopic","docId":"api/interfaces/ColonyTopic"},{"type":"link","label":"Interface: ColonyTransaction<C, E, R, MD\\\\>","href":"/colonysdk/api/interfaces/ColonyTransaction","docId":"api/interfaces/ColonyTransaction"},{"type":"link","label":"Interface: ContractReceipt","href":"/colonysdk/api/interfaces/ContractReceipt","docId":"api/interfaces/ContractReceipt"},{"type":"link","label":"Interface: ContractTransaction","href":"/colonysdk/api/interfaces/ContractTransaction","docId":"api/interfaces/ContractTransaction"},{"type":"link","label":"Interface: DecisionData","href":"/colonysdk/api/interfaces/DecisionData","docId":"api/interfaces/DecisionData"},{"type":"link","label":"Interface: DomainData","href":"/colonysdk/api/interfaces/DomainData","docId":"api/interfaces/DomainData"},{"type":"link","label":"Interface: Ethers6Filter","href":"/colonysdk/api/interfaces/Ethers6Filter","docId":"api/interfaces/Ethers6Filter"},{"type":"link","label":"Interface: Ethers6FilterByBlockHash","href":"/colonysdk/api/interfaces/Ethers6FilterByBlockHash","docId":"api/interfaces/Ethers6FilterByBlockHash"},{"type":"link","label":"Interface: EventData","href":"/colonysdk/api/interfaces/EventData","docId":"api/interfaces/EventData"},{"type":"link","label":"Interface: IpfsAdapter","href":"/colonysdk/api/interfaces/IpfsAdapter","docId":"api/interfaces/IpfsAdapter"},{"type":"link","label":"Interface: MetaTxBaseContract","href":"/colonysdk/api/interfaces/MetaTxBaseContract","docId":"api/interfaces/MetaTxBaseContract"},{"type":"link","label":"Interface: ParsedLogTransactionReceipt","href":"/colonysdk/api/interfaces/ParsedLogTransactionReceipt","docId":"api/interfaces/ParsedLogTransactionReceipt"},{"type":"link","label":"Interface: PermissionConfig","href":"/colonysdk/api/interfaces/PermissionConfig","docId":"api/interfaces/PermissionConfig"},{"type":"link","label":"Interface: SafeInfo","href":"/colonysdk/api/interfaces/SafeInfo","docId":"api/interfaces/SafeInfo"},{"type":"link","label":"Interface: SupportedExtensions","href":"/colonysdk/api/interfaces/SupportedExtensions","docId":"api/interfaces/SupportedExtensions"},{"type":"link","label":"Interface: TokenData","href":"/colonysdk/api/interfaces/TokenData","docId":"api/interfaces/TokenData"},{"type":"link","label":"Interface: TransactionResponse","href":"/colonysdk/api/interfaces/TransactionResponse","docId":"api/interfaces/TransactionResponse"},{"type":"link","label":"Interface: TxConfig<M\\\\>","href":"/colonysdk/api/interfaces/TxConfig","docId":"api/interfaces/TxConfig"},{"type":"link","label":"Interface: TxCreatorConfig<C, M, E, MD\\\\>","href":"/colonysdk/api/interfaces/TxCreatorConfig","docId":"api/interfaces/TxCreatorConfig"}]},{"type":"category","label":"Modules","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Namespace: Tokens","href":"/colonysdk/api/modules/Tokens","docId":"api/modules/Tokens"}]}],"href":"/colonysdk/api/"}]},"docs":{"api/classes/CloudflareReadonlyAdapter":{"id":"api/classes/CloudflareReadonlyAdapter","title":"Class: CloudflareReadonlyAdapter","description":"CloudflareReadonlyAdapter","sidebar":"sidebar"},"api/classes/Colony":{"id":"api/classes/Colony","title":"Class: Colony","description":"Properties","sidebar":"sidebar"},"api/classes/ColonyEventManager":{"id":"api/classes/ColonyEventManager","title":"Class: ColonyEventManager","description":"The ColonyEvents class is a wrapper around ethers\'s event implementations to make it easier to track and fetch Colony related events.","sidebar":"sidebar"},"api/classes/ColonyNetwork":{"id":"api/classes/ColonyNetwork","title":"Class: ColonyNetwork","description":"Constructors","sidebar":"sidebar"},"api/classes/ColonyToken":{"id":"api/classes/ColonyToken","title":"Class: ColonyToken","description":"Hierarchy","sidebar":"sidebar"},"api/classes/ColonyTxCreator":{"id":"api/classes/ColonyTxCreator","title":"Class: ColonyTxCreator<C, M, E, MD\\\\>","description":"An umbrella API for all kinds of transactions within colonies","sidebar":"sidebar"},"api/classes/ERC20Token":{"id":"api/classes/ERC20Token","title":"Class: ERC20Token","description":"Hierarchy","sidebar":"sidebar"},"api/classes/ERC2612Token":{"id":"api/classes/ERC2612Token","title":"Class: ERC2612Token","description":"Hierarchy","sidebar":"sidebar"},"api/classes/IpfsMetadata":{"id":"api/classes/IpfsMetadata","title":"Class: IpfsMetadata","description":"IpfsMetadata","sidebar":"sidebar"},"api/classes/MetaTxCreator":{"id":"api/classes/MetaTxCreator","title":"Class: MetaTxCreator<C, M, E, MD\\\\>","description":"An umbrella API for all kinds of transactions","sidebar":"sidebar"},"api/classes/OneTxPayment":{"id":"api/classes/OneTxPayment","title":"Class: OneTxPayment","description":"OneTxPayment (One Transaction Payment)","sidebar":"sidebar"},"api/classes/PinataAdapter":{"id":"api/classes/PinataAdapter","title":"Class: PinataAdapter","description":"A Colony SDK IPFS adapter for Pinata (https://pinata.cloud)","sidebar":"sidebar"},"api/classes/ReputationClient":{"id":"api/classes/ReputationClient","title":"Class: ReputationClient","description":"Constructors","sidebar":"sidebar"},"api/classes/TokenLocking":{"id":"api/classes/TokenLocking","title":"Class: TokenLocking","description":"Constructors","sidebar":"sidebar"},"api/classes/TxCreator":{"id":"api/classes/TxCreator","title":"Class: TxCreator<C, M, E, MD\\\\>","description":"An umbrella API for all kinds of transactions","sidebar":"sidebar"},"api/classes/VotingReputation":{"id":"api/classes/VotingReputation","title":"Class: VotingReputation","description":"VotingReputation (Motions & Disputes)","sidebar":"sidebar"},"api/enums/ColonyRole":{"id":"api/enums/ColonyRole","title":"Enumeration: ColonyRole","description":"Available roles in the colonyNetwork. Find out more here//github.com/JoinColony/colonyNetwork/blob/develop/docs/DocsPermissions.md","sidebar":"sidebar"},"api/enums/ColonyRpcEndpoint":{"id":"api/enums/ColonyRpcEndpoint","title":"Enumeration: ColonyRpcEndpoint","description":"Official Colony RPC2 endpoint (node)","sidebar":"sidebar"},"api/enums/Extension":{"id":"api/enums/Extension","title":"Enumeration: Extension","description":"Extension contract names","sidebar":"sidebar"},"api/enums/Id":{"id":"api/enums/Id","title":"Enumeration: Id","description":"Shortcuts to certain IDs within Colony","sidebar":"sidebar"},"api/enums/MetadataType":{"id":"api/enums/MetadataType","title":"Enumeration: MetadataType","description":"Available metadata types","sidebar":"sidebar"},"api/enums/MotionState":{"id":"api/enums/MotionState","title":"Enumeration: MotionState","description":"These are the various states a Motion might find itself in","sidebar":"sidebar"},"api/enums/Network":{"id":"api/enums/Network","title":"Enumeration: Network","description":"Supported Ethereum networks. Use Custom if you\'d like to bring your own deployment (e.g. local)","sidebar":"sidebar"},"api/enums/SupportedExtension":{"id":"api/enums/SupportedExtension","title":"Enumeration: SupportedExtension","description":"Extensions that are supported by Colony SDK","sidebar":"sidebar"},"api/enums/TeamColor":{"id":"api/enums/TeamColor","title":"Enumeration: TeamColor","description":"The various team colors that the dApp supports","sidebar":"sidebar"},"api/enums/Tokens.Gnosis":{"id":"api/enums/Tokens.Gnosis","title":"Enumeration: Gnosis","description":"Tokens.Gnosis","sidebar":"sidebar"},"api/enums/Tokens.Mainnet":{"id":"api/enums/Tokens.Mainnet","title":"Enumeration: Mainnet","description":"Tokens.Mainnet","sidebar":"sidebar"},"api/enums/Vote":{"id":"api/enums/Vote","title":"Enumeration: Vote","description":"Enumeration Members","sidebar":"sidebar"},"api/interfaces/AnnotationData":{"id":"api/interfaces/AnnotationData","title":"Interface: AnnotationData","description":"Properties","sidebar":"sidebar"},"api/interfaces/BaseContract":{"id":"api/interfaces/BaseContract","title":"Interface: BaseContract","description":"Hierarchy","sidebar":"sidebar"},"api/interfaces/ColonyData":{"id":"api/interfaces/ColonyData","title":"Interface: ColonyData","description":"Properties","sidebar":"sidebar"},"api/interfaces/ColonyEvent":{"id":"api/interfaces/ColonyEvent","title":"Interface: ColonyEvent<M\\\\>","description":"An Event that came from a contract within the Colony Network","sidebar":"sidebar"},"api/interfaces/ColonyEventManagerOptions":{"id":"api/interfaces/ColonyEventManagerOptions","title":"Interface: ColonyEventManagerOptions","description":"Additional options for the ColonyEventManager","sidebar":"sidebar"},"api/interfaces/ColonyFilter":{"id":"api/interfaces/ColonyFilter","title":"Interface: ColonyFilter","description":"A Colony extended ethers Filter to keep track of where events are coming from","sidebar":"sidebar"},"api/interfaces/ColonyMetaTransaction":{"id":"api/interfaces/ColonyMetaTransaction","title":"Interface: ColonyMetaTransaction<C, E, R, MD\\\\>","description":"A standard gasless MetaTransaction (\\"force\\" in dApp)","sidebar":"sidebar"},"api/interfaces/ColonyMultiFilter":{"id":"api/interfaces/ColonyMultiFilter","title":"Interface: ColonyMultiFilter","description":"ColonyFilter with support for multi-events","sidebar":"sidebar"},"api/interfaces/ColonyNetworkOptions":{"id":"api/interfaces/ColonyNetworkOptions","title":"Interface: ColonyNetworkOptions","description":"Additional options for the ColonyNetwork","sidebar":"sidebar"},"api/interfaces/ColonyTopic":{"id":"api/interfaces/ColonyTopic","title":"Interface: ColonyTopic","description":"A Colony specific topic that keeps track of which contract it belongs to","sidebar":"sidebar"},"api/interfaces/ColonyTransaction":{"id":"api/interfaces/ColonyTransaction","title":"Interface: ColonyTransaction<C, E, R, MD\\\\>","description":"A standard transaction (\\"force\\" in dApp)","sidebar":"sidebar"},"api/interfaces/ContractReceipt":{"id":"api/interfaces/ContractReceipt","title":"Interface: ContractReceipt","description":"Hierarchy","sidebar":"sidebar"},"api/interfaces/ContractTransaction":{"id":"api/interfaces/ContractTransaction","title":"Interface: ContractTransaction","description":"Hierarchy","sidebar":"sidebar"},"api/interfaces/DecisionData":{"id":"api/interfaces/DecisionData","title":"Interface: DecisionData","description":"Properties","sidebar":"sidebar"},"api/interfaces/DomainData":{"id":"api/interfaces/DomainData","title":"Interface: DomainData","description":"Properties","sidebar":"sidebar"},"api/interfaces/Ethers6Filter":{"id":"api/interfaces/Ethers6Filter","title":"Interface: Ethers6Filter","description":"Ethers 6 supports mulitple addresses in a filter. Until then we have this","sidebar":"sidebar"},"api/interfaces/Ethers6FilterByBlockHash":{"id":"api/interfaces/Ethers6FilterByBlockHash","title":"Interface: Ethers6FilterByBlockHash","description":"Ethers 6 supports mulitple addresses in a filter. Until then we have this","sidebar":"sidebar"},"api/interfaces/EventData":{"id":"api/interfaces/EventData","title":"Interface: EventData","description":"Properties","sidebar":"sidebar"},"api/interfaces/IpfsAdapter":{"id":"api/interfaces/IpfsAdapter","title":"Interface: IpfsAdapter","description":"Implemented by","sidebar":"sidebar"},"api/interfaces/MetaTxBaseContract":{"id":"api/interfaces/MetaTxBaseContract","title":"Interface: MetaTxBaseContract","description":"Hierarchy","sidebar":"sidebar"},"api/interfaces/ParsedLogTransactionReceipt":{"id":"api/interfaces/ParsedLogTransactionReceipt","title":"Interface: ParsedLogTransactionReceipt","description":"Custom Transaction receipt for when we manually have to parse logs (metatransactions)","sidebar":"sidebar"},"api/interfaces/PermissionConfig":{"id":"api/interfaces/PermissionConfig","title":"Interface: PermissionConfig","description":"Properties","sidebar":"sidebar"},"api/interfaces/SafeInfo":{"id":"api/interfaces/SafeInfo","title":"Interface: SafeInfo","description":"Properties","sidebar":"sidebar"},"api/interfaces/SupportedExtensions":{"id":"api/interfaces/SupportedExtensions","title":"Interface: SupportedExtensions","description":"Properties","sidebar":"sidebar"},"api/interfaces/TokenData":{"id":"api/interfaces/TokenData","title":"Interface: TokenData","description":"ERC20 Token information","sidebar":"sidebar"},"api/interfaces/TransactionResponse":{"id":"api/interfaces/TransactionResponse","title":"Interface: TransactionResponse","description":"Hierarchy","sidebar":"sidebar"},"api/interfaces/TxConfig":{"id":"api/interfaces/TxConfig","title":"Interface: TxConfig<M\\\\>","description":"Type parameters","sidebar":"sidebar"},"api/interfaces/TxCreatorConfig":{"id":"api/interfaces/TxCreatorConfig","title":"Interface: TxCreatorConfig<C, M, E, MD\\\\>","description":"Type parameters","sidebar":"sidebar"},"api/modules/Tokens":{"id":"api/modules/Tokens","title":"Namespace: Tokens","description":"Shortcut to common token addresses","sidebar":"sidebar"},"api/README":{"id":"api/README","title":"API","description":"Namespaces","sidebar":"sidebar"},"getting-started/index":{"id":"getting-started/index","title":"Start Building","description":"A stupidly short guide to get started with Colony development","sidebar":"sidebar"},"getting-started/your-first-transaction":{"id":"getting-started/your-first-transaction","title":"Creating your first transaction","description":"In this guide we look at a more involved example. We create a team within a colony and inspect the results of this transaction.","sidebar":"sidebar"},"guides/colony-creation":{"id":"guides/colony-creation","title":"Creating a Colony","description":"A guide on how to create a Colony programmatically. The deployment of a Colony requires a handful of transactions for it to be up and running and fully usable. This guide explains how to go through the whole process using Colony SDK","sidebar":"sidebar"},"guides/index":{"id":"guides/index","title":"Guides","description":"Helpful guides","sidebar":"sidebar"},"guides/metadata":{"id":"guides/metadata","title":"Metadata within Colony","description":"A guide on how to handle IPFS metadata in Colony. We explore how to use a different IPFS adapter to let Colony SDK do the heavy lifting.","sidebar":"sidebar"},"guides/transactions":{"id":"guides/transactions","title":"Creating transactions in Colony SDK","description":"A guide on how to create transactions within Colony. You can create motions and even gasless MetaTransactions in a very straightforward and concise way.","sidebar":"sidebar"},"index":{"id":"index","title":"Colony SDK","description":"The Colony SDK is a community project aiming to provide a quick and easy way to get started with building on top of Colony Network contracts.","sidebar":"sidebar"}}}')}}]);