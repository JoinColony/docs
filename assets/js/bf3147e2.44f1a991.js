"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7525],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=o.createContext({}),c=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=c(e.components);return o.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return t?o.createElement(f,i(i({ref:n},l),{},{components:t})):o.createElement(f,i({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9722:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=t(7462),r=(t(7294),t(3905));const a={description:"Now we govern our DAO.",sidebar_position:4},i="\ud83e\udde9 Motions and Disputes",s={unversionedId:"use/governance/motions-and-disputes/index",id:"use/governance/motions-and-disputes/index",title:"\ud83e\udde9 Motions and Disputes",description:"Now we govern our DAO.",source:"@site/colony/use/governance/motions-and-disputes/index.md",sourceDirName:"use/governance/motions-and-disputes",slug:"/use/governance/motions-and-disputes/",permalink:"/use/governance/motions-and-disputes/",draft:!1,editUrl:"https://github.com/JoinColony/docs/edit/main/colony/use/governance/motions-and-disputes/index.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{description:"Now we govern our DAO.",sidebar_position:4},sidebar:"use",previous:{title:"Governance",permalink:"/use/governance/"},next:{title:"Installation",permalink:"/use/governance/motions-and-disputes/installation"}},p={},c=[],l={toc:c};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-motions-and-disputes"},"\ud83e\udde9 Motions and Disputes"),(0,r.kt)("p",null,"The Motions and Disputes extension serves as the core of your DAO governance. "),(0,r.kt)("p",null,"Voting is not an efficient way of making decisions, even in a decentralized organizations. In a colony, voting on proposals should be the exception, not the norm. "),(0,r.kt)("p",null,"In Colony, if everyone agrees on something, it's unnecessary for everyone to actively state that they agree\u2014simply ",(0,r.kt)("em",{parentName:"p"},"not disagreeing")," is sufficient. Only if someone does disagree, and wants to attempt to prevent that thing from happening, is it necessary for people to actually vote. We call this principle ",(0,r.kt)("a",{parentName:"p",href:"/learn/dao-builders-toolkit/lazy-consensus"},(0,r.kt)("strong",{parentName:"a"},"Lazy Consensus"))," and it keeps your DAO productive while keeping decision-making decentralized. "),(0,r.kt)("p",null,"The Motions and Disputes feature allows any member of your colony to propose a ",(0,r.kt)("em",{parentName:"p"},"Motion")," to take an ",(0,r.kt)("em",{parentName:"p"},"Action")," that will pass after a security delay unless somebody ",(0,r.kt)("em",{parentName:"p"},"Objects"),". This applies to all Actions, such as creating an expenditure, managing funds, or managing teams."))}u.isMDXComponent=!0}}]);