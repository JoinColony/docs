"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[186],{8860:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>u});var r=n(7953);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),s=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},g=function(e){var t=s(e.components);return r.createElement(o.Provider,{value:t},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,g=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,u=d["".concat(o,".").concat(m)]||d[m]||y[m]||l;return n?r.createElement(u,p(p({ref:t},g),{},{components:n})):r.createElement(u,p({ref:t},g))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,p=new Array(l);p[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[d]="string"==typeof e?e:a,p[1]=i;for(var s=2;s<l;s++)p[s]=n[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9404:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>y,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=n(4432),a=(n(7953),n(8860));const l={},p="Interface: IpfsAdapter",i={unversionedId:"api/interfaces/IpfsAdapter",id:"api/interfaces/IpfsAdapter",title:"Interface: IpfsAdapter",description:"Implemented by",source:"@site/vendor/colonyJS/packages/sdk/docs/api/interfaces/IpfsAdapter.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/IpfsAdapter",permalink:"/colonysdk/api/interfaces/IpfsAdapter",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Interface: EventData",permalink:"/colonysdk/api/interfaces/EventData"},next:{title:"Interface: MetaTxBaseContract",permalink:"/colonysdk/api/interfaces/MetaTxBaseContract"}},o={},s=[{value:"Implemented by",id:"implemented-by",level:2},{value:"Properties",id:"properties",level:2},{value:"name",id:"name",level:3},{value:"Methods",id:"methods",level:2},{value:"getIpfsUrl",id:"getipfsurl",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"uploadJson",id:"uploadjson",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4}],g={toc:s},d="wrapper";function y(e){let{components:t,...n}=e;return(0,a.yg)(d,(0,r.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"interface-ipfsadapter"},"Interface: IpfsAdapter"),(0,a.yg)("h2",{id:"implemented-by"},"Implemented by"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/colonysdk/api/classes/CloudflareReadonlyAdapter"},(0,a.yg)("inlineCode",{parentName:"a"},"CloudflareReadonlyAdapter"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/colonysdk/api/classes/PinataAdapter"},(0,a.yg)("inlineCode",{parentName:"a"},"PinataAdapter")))),(0,a.yg)("h2",{id:"properties"},"Properties"),(0,a.yg)("h3",{id:"name"},"name"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("strong",{parentName:"p"},"name"),": ",(0,a.yg)("inlineCode",{parentName:"p"},"string")),(0,a.yg)("p",null,"Name for the IpfsAdapter. All uppercase please"),(0,a.yg)("h2",{id:"methods"},"Methods"),(0,a.yg)("h3",{id:"getipfsurl"},"getIpfsUrl"),(0,a.yg)("p",null,"\u25b8 ",(0,a.yg)("strong",{parentName:"p"},"getIpfsUrl"),"(",(0,a.yg)("inlineCode",{parentName:"p"},"cid"),"): ",(0,a.yg)("inlineCode",{parentName:"p"},"string")),(0,a.yg)("p",null,"Should return the whole URL to an IPFS resource on the corresponding gateway (e.g. https://my-ipfs-gateway/ipfs/QmXxxxXXxxXxXxXxxxXXxxxXxXXx)."),(0,a.yg)("h4",{id:"parameters"},"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"cid")),(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:"left"},"An IPFS hash (CID)")))),(0,a.yg)("h4",{id:"returns"},"Returns"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"string")),(0,a.yg)("p",null,"The URL to an ipfs resource"),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"uploadjson"},"uploadJson"),(0,a.yg)("p",null,"\u25b8 ",(0,a.yg)("strong",{parentName:"p"},"uploadJson"),"(",(0,a.yg)("inlineCode",{parentName:"p"},"jsonString"),"): ",(0,a.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.yg)("inlineCode",{parentName:"p"},"string"),">"),(0,a.yg)("p",null,"Function to upload a JSON string to IPFS. Takes the string as an argument (use ",(0,a.yg)("inlineCode",{parentName:"p"},"JSON.stringify()")," if needbe). Returns a promise that resolves to the IPFS hash (CID)"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"This function should ideally ",(0,a.yg)("strong",{parentName:"p"},"pin")," your data on the relevant service."),(0,a.yg)("h4",{id:"parameters-1"},"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"jsonString")),(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:"left"},"JSON string to upload (and pin) to IPFS")))),(0,a.yg)("h4",{id:"returns-1"},"Returns"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.yg)("inlineCode",{parentName:"p"},"string"),">"),(0,a.yg)("p",null,"Promise to IPFS hash (CID)"))}y.isMDXComponent=!0}}]);