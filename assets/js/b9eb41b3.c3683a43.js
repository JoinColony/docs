"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4043],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),k=s(n),u=r,c=k["".concat(p,".").concat(u)]||k[u]||m[u]||o;return n?a.createElement(c,i(i({ref:t},d),{},{components:n})):a.createElement(c,i({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=k;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8443:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={},i="Class: OneTxPayment",l={unversionedId:"api/classes/OneTxPayment",id:"api/classes/OneTxPayment",title:"Class: OneTxPayment",description:"OneTxPayment (One Transaction Payment)",source:"@site/vendor/colonySDK/docs/api/classes/OneTxPayment.md",sourceDirName:"api/classes",slug:"/api/classes/OneTxPayment",permalink:"/colonysdk/api/classes/OneTxPayment",draft:!1,editUrl:"https://github.com/JoinColony/api/classes/OneTxPayment.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Class: ColonyToken",permalink:"/colonysdk/api/classes/ColonyToken"},next:{title:"Class: PinataAdapter",permalink:"/colonysdk/api/classes/PinataAdapter"}},p={},s=[{value:"<code>OneTxPayment</code> (One Transaction Payment)",id:"onetxpayment-one-transaction-payment",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Properties",id:"properties",level:2},{value:"address",id:"address",level:3},{value:"extensionType",id:"extensiontype",level:3},{value:"supportedVersion",id:"supportedversion",level:3},{value:"Methods",id:"methods",level:2},{value:"pay",id:"pay",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"getLatestSupportedVersion",id:"getlatestsupportedversion",level:3},{value:"Returns",id:"returns-1",level:4}],d={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"class-onetxpayment"},"Class: OneTxPayment"),(0,r.kt)("h2",{id:"onetxpayment-one-transaction-payment"},(0,r.kt)("inlineCode",{parentName:"h2"},"OneTxPayment")," (One Transaction Payment)"),(0,r.kt)("p",null,"Ordinarily payments require more than one transaction, because the payment lifecycle requires more than one permissioned role."),(0,r.kt)("p",null,"In some use cases, there might be a need for one authorized individual to be able to create, funds, and finalize a payment within a single transaction."),(0,r.kt)("p",null,"The OneTxPayment extension adds this functionality by adding a makePayment function which requires the caller to have both Funding and administration ability within the domain of the payment."),(0,r.kt)("p",null,"Extension therefore requires Administration and Funding roles to function."),(0,r.kt)("p",null,"Note: if you deployed your Colony using the Dapp, the OneTxPayment extension is already installed for you"),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new OneTxPayment"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"colony"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"oneTxPaymentClient"),")"),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"colony")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/colonysdk/api/classes/Colony"},(0,r.kt)("inlineCode",{parentName:"a"},"Colony")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"oneTxPaymentClient")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"OneTxPaymentClientV3"))))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"address"},"address"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"address"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"extensiontype"},"extensionType"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"extensionType"),": ",(0,r.kt)("a",{parentName:"p",href:"/colonysdk/api/enums/Extension#onetxpayment"},(0,r.kt)("inlineCode",{parentName:"a"},"OneTxPayment"))," = ",(0,r.kt)("inlineCode",{parentName:"p"},"Extension.OneTxPayment")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"supportedversion"},"supportedVersion"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"supportedVersion"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"3"),"[]"),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"pay"},"pay"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"pay"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"recipient"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"amount"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"teamId?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"tokenAddress?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/colonysdk/api/classes/TxCreator"},(0,r.kt)("inlineCode",{parentName:"a"},"TxCreator")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"OneTxPaymentClientV3"),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"makePaymentFundedFromDomain"'),", { ",(0,r.kt)("inlineCode",{parentName:"p"},"agent?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"fundamentalId?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"nPayouts?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.kt)("a",{parentName:"p",href:"/colonysdk/api/enums/MetadataType"},(0,r.kt)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.kt)("p",null,"Make a payment to a single address using a single token"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.kt)("p",null,"Requires the ",(0,r.kt)("inlineCode",{parentName:"p"},"OneTxPayment")," extension to be installed for the Colony (this is usually the case for Colonies created via the Dapp). Note that most tokens use 18 decimals, so add a bunch of zeros or use our ",(0,r.kt)("inlineCode",{parentName:"p"},"w")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"toWei")," functions (see example)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Id, Tokens, w } from '@colony/sdk';\n\n// Immediately executing async function\n(async function() {\n  // Pay 10 XDAI (on Gnosis chain) from the root domain to the following address\n  // (forced transaction example)\n  await colony.pay(\n     '0xb77D57F4959eAfA0339424b83FcFaf9c15407461',\n     w`10`,\n     Id.RootDomain,\n     Tokens.Gnosis.XDAI,\n  ).force();\n})();\n")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"recipient")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Wallet address of account to send the funds to (also awarded reputation when sending the native token)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"BigNumberish")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Amount to pay in wei")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"teamId?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"BigNumberish")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The team to use to send the funds from. Has to have funding of at least the amount you need to send. See ",(0,r.kt)("a",{parentName:"td",href:"/colonysdk/api/classes/Colony#movefundstoteam"},"Colony.moveFundsToTeam"),". Defaults to the Colony's root team")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"tokenAddress?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the token to make the payment in. Default is the Colony's native token")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/colonysdk/api/classes/TxCreator"},(0,r.kt)("inlineCode",{parentName:"a"},"TxCreator")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"OneTxPaymentClientV3"),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"makePaymentFundedFromDomain"'),", { ",(0,r.kt)("inlineCode",{parentName:"p"},"agent?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"fundamentalId?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"nPayouts?"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.kt)("a",{parentName:"p",href:"/colonysdk/api/enums/MetadataType"},(0,r.kt)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.kt)("p",null,"A ",(0,r.kt)("a",{parentName:"p",href:"/colonysdk/api/classes/TxCreator"},"TxCreator")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Event data")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"agent")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address that is responsible for triggering this event")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fundamentalId")),(0,r.kt)("td",{parentName:"tr",align:"left"},"BigNumber"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The newly added payment id")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nPayouts")),(0,r.kt)("td",{parentName:"tr",align:"left"},"BigNumber"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Number of payouts in total")))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getlatestsupportedversion"},"getLatestSupportedVersion"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"getLatestSupportedVersion"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"3")),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"3")))}m.isMDXComponent=!0}}]);