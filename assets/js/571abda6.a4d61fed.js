"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[4843],{3905:(t,e,a)=>{a.d(e,{Zo:()=>s,kt:()=>m});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var i=n.createContext({}),k=function(t){var e=n.useContext(i),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},s=function(t){var e=k(t.components);return n.createElement(i.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,i=t.parentName,s=d(t,["components","mdxType","originalType","parentName"]),u=k(a),m=r,N=u["".concat(i,".").concat(m)]||u[m]||p[m]||l;return a?n.createElement(N,o(o({ref:e},s),{},{components:a})):n.createElement(N,o({ref:e},s))}));function m(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,o=new Array(l);o[0]=u;var d={};for(var i in e)hasOwnProperty.call(e,i)&&(d[i]=e[i]);d.originalType=t,d.mdxType="string"==typeof t?t:r,o[1]=d;for(var k=2;k<l;k++)o[k]=a[k];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},13938:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>k});var n=a(87462),r=(a(67294),a(3905));const l={},o="Token Locking (ITokenLocking)",d={unversionedId:"interfaces/itokenlocking",id:"interfaces/itokenlocking",title:"Token Locking (ITokenLocking)",description:"This contract supports secure token voting for the Colony Network,",source:"@site/vendor/colonyNetwork/docs/interfaces/itokenlocking.md",sourceDirName:"interfaces",slug:"/interfaces/itokenlocking",permalink:"/colonynetwork/interfaces/itokenlocking",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Reputation Mining Cycle (IReputationMiningCycle)",permalink:"/colonynetwork/interfaces/ireputationminingcycle"},next:{title:"Contributing",permalink:"/colonynetwork/contributing"}},i={},k=[{value:"Interface Methods",id:"interface-methods",level:2},{value:"\u25b8 <code>approveStake(address _user, uint256 _amount, address _token)</code>",id:"-approvestakeaddress-_user-uint256-_amount-address-_token",level:3},{value:"\u25b8 <code>deobligateStake(address _user, uint256 _amount, address _token)</code>",id:"-deobligatestakeaddress-_user-uint256-_amount-address-_token",level:3},{value:"\u25b8 <code>deposit(address _token, uint256 _amount)</code>",id:"-depositaddress-_token-uint256-_amount",level:3},{value:"\u25b8 <code>deposit(address _token, uint256 _amount, bool _force)</code>",id:"-depositaddress-_token-uint256-_amount-bool-_force",level:3},{value:"\u25b8 <code>depositFor(address _token, uint256 _amount, address _recipient)</code>",id:"-depositforaddress-_token-uint256-_amount-address-_recipient",level:3},{value:"\u25b8 <code>getApproval(address _user, address _token, address _obligator):uint256 approval</code>",id:"-getapprovaladdress-_user-address-_token-address-_obligatoruint256-approval",level:3},{value:"\u25b8 <code>getColonyNetwork():address networkAddress</code>",id:"-getcolonynetworkaddress-networkaddress",level:3},{value:"\u25b8 <code>getObligation(address _user, address _token, address _obligator):uint256 approval</code>",id:"-getobligationaddress-_user-address-_token-address-_obligatoruint256-approval",level:3},{value:"\u25b8 <code>getTotalLockCount(address _token):uint256 lockCount</code>",id:"-gettotallockcountaddress-_tokenuint256-lockcount",level:3},{value:"\u25b8 <code>getTotalObligation(address _user, address _token):uint256 obligation</code>",id:"-gettotalobligationaddress-_user-address-_tokenuint256-obligation",level:3},{value:"\u25b8 <code>getUserLock(address _token, address _user):Lock lock</code>",id:"-getuserlockaddress-_token-address-_userlock-lock",level:3},{value:"\u25b8 <code>incrementLockCounterTo(address _token, uint256 _lockId)</code>",id:"-incrementlockcountertoaddress-_token-uint256-_lockid",level:3},{value:"\u25b8 <code>lockToken(address _token):uint256 lockCount</code>",id:"-locktokenaddress-_tokenuint256-lockcount",level:3},{value:"\u25b8 <code>obligateStake(address _user, uint256 _amount, address _token)</code>",id:"-obligatestakeaddress-_user-uint256-_amount-address-_token",level:3},{value:"\u25b8 <code>reward(address _recipient, uint256 _amount)</code>",id:"-rewardaddress-_recipient-uint256-_amount",level:3},{value:"\u25b8 <code>setColonyNetwork(address _colonyNetwork)</code>",id:"-setcolonynetworkaddress-_colonynetwork",level:3},{value:"\u25b8 <code>transfer(address _token, uint256 _amount, address _recipient, bool _force)</code>",id:"-transferaddress-_token-uint256-_amount-address-_recipient-bool-_force",level:3},{value:"\u25b8 <code>transferStake(address _user, uint256 _amount, address _token, address _recipient)</code>",id:"-transferstakeaddress-_user-uint256-_amount-address-_token-address-_recipient",level:3},{value:"\u25b8 <code>unlockTokenForUser(address _token, address _user, uint256 _lockId)</code>",id:"-unlocktokenforuseraddress-_token-address-_user-uint256-_lockid",level:3},{value:"\u25b8 <code>withdraw(address _token, uint256 _amount)</code>",id:"-withdrawaddress-_token-uint256-_amount",level:3},{value:"\u25b8 <code>withdraw(address _token, uint256 _amount, bool _force)</code>",id:"-withdrawaddress-_token-uint256-_amount-bool-_force",level:3}],s={toc:k};function p(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"token-locking-itokenlocking"},"Token Locking (",(0,r.kt)("inlineCode",{parentName:"h1"},"ITokenLocking"),")"),(0,r.kt)("p",null,'This contract supports secure token voting for the Colony Network,\nallowing for on-chain token votes to occur without the risk of "double-voting".\nUnlike Snapshot, which uses state snapshots to allow for secure voting off-chain,\nthis contract allows for secure voting on-chain by preventing users from\ntransferring their tokens until their votes have been cast. Only tokens which\nhave been deposited in this contract can be used to vote.'),(0,r.kt)("h2",{id:"interface-methods"},"Interface Methods"),(0,r.kt)("h3",{id:"-approvestakeaddress-_user-uint256-_amount-address-_token"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"approveStake(address _user, uint256 _amount, address _token)")),(0,r.kt)("p",null,"Allow the colony to obligate some amount of tokens as a stake."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note: Can only be called by a colony or colonyNetwork")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_user"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the user that is allowing their holdings to be staked by the caller")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of that colony's internal token up to which we are willing to be obligated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The colony's internal token address")))),(0,r.kt)("h3",{id:"-deobligatestakeaddress-_user-uint256-_amount-address-_token"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"deobligateStake(address _user, uint256 _amount, address _token)")),(0,r.kt)("p",null,"Deobligate the user some amount of tokens, releasing the stake. Can only be called by a colony or colonyNetwork."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_user"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the account we are deobligating.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of colony's internal token we are deobligating.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The colony's internal token address")))),(0,r.kt)("h3",{id:"-depositaddress-_token-uint256-_amount"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"deposit(address _token, uint256 _amount)")),(0,r.kt)("p",null,"Deposit ",(0,r.kt)("inlineCode",{parentName:"p"},"_amount")," of deposited tokens. Can only be called if user tokens are not locked. Before calling this function user has to allow that their tokens can be transferred by token locking contract."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the token to deposit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Amount to deposit")))),(0,r.kt)("h3",{id:"-depositaddress-_token-uint256-_amount-bool-_force"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"deposit(address _token, uint256 _amount, bool _force)")),(0,r.kt)("p",null,"Deposit ",(0,r.kt)("inlineCode",{parentName:"p"},"_amount")," of colony tokens. Before calling this function user has to allow that their tokens can be transferred by token locking contract."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the token to deposit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Amount to deposit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_force"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Pass true to forcibly unlock the token")))),(0,r.kt)("h3",{id:"-depositforaddress-_token-uint256-_amount-address-_recipient"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"depositFor(address _token, uint256 _amount, address _recipient)")),(0,r.kt)("p",null,"Deposit ",(0,r.kt)("inlineCode",{parentName:"p"},"_amount")," of colony tokens in the recipient's account. Goes into pendingBalance if token is locked."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the token to deposit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Amount to deposit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"User to receive the tokens")))),(0,r.kt)("h3",{id:"-getapprovaladdress-_user-address-_token-address-_obligatoruint256-approval"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"getApproval(address _user, address _token, address _obligator):uint256 approval")),(0,r.kt)("p",null,"See how much an address has approved another address to obligate on their behalf."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_user"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the account that has approved _approvee to obligate their funds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The token for which the user has provided the approval.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_obligator"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address that has been approved to obligate the funds.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"approval"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The total amount for this obligation")))),(0,r.kt)("h3",{id:"-getcolonynetworkaddress-networkaddress"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"getColonyNetwork():address networkAddress")),(0,r.kt)("p",null,"Get ColonyNetwork address."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"networkAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"ColonyNetwork address")))),(0,r.kt)("h3",{id:"-getobligationaddress-_user-address-_token-address-_obligatoruint256-approval"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"getObligation(address _user, address _token, address _obligator):uint256 approval")),(0,r.kt)("p",null,"See how much a user is currently obligated by another."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_user"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the account that has had their funds obligated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The token for which the user has provided the approval.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_obligator"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address that obligated the funds (and therefore can slash or return them).")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"approval"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The total amount for this obligation")))),(0,r.kt)("h3",{id:"-gettotallockcountaddress-_tokenuint256-lockcount"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"getTotalLockCount(address _token):uint256 lockCount")),(0,r.kt)("p",null,"Get global lock count for a specific token."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the token")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"lockCount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Global token lock count")))),(0,r.kt)("h3",{id:"-gettotalobligationaddress-_user-address-_tokenuint256-obligation"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"getTotalObligation(address _user, address _token):uint256 obligation")),(0,r.kt)("p",null,"See the total amount of a user's obligation."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_user"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the obligated account.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The token for which the user is obligated.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"obligation"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The total amount this user is obligated")))),(0,r.kt)("h3",{id:"-getuserlockaddress-_token-address-_userlock-lock"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"getUserLock(address _token, address _user):Lock lock")),(0,r.kt)("p",null,"Get user token lock info (lock count and deposited amount)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the token")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_user"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the user")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"lock"),(0,r.kt)("td",{parentName:"tr",align:null},"Lock"),(0,r.kt)("td",{parentName:"tr",align:null},"Lock object containing:   ",(0,r.kt)("inlineCode",{parentName:"td"},"lockCount")," User's token lock count,   ",(0,r.kt)("inlineCode",{parentName:"td"},"balance")," User's deposited amount,   ",(0,r.kt)("inlineCode",{parentName:"td"},"DEPRECATED_timestamp")," Timestamp of deposit (deprecated)   ",(0,r.kt)("inlineCode",{parentName:"td"},"pendingBalance")," Tokens that have been sent to them, but are inaccessible until all locks are cleared and then these                    tokens are claimed")))),(0,r.kt)("h3",{id:"-incrementlockcountertoaddress-_token-uint256-_lockid"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"incrementLockCounterTo(address _token, uint256 _lockId)")),(0,r.kt)("p",null,"Increments sender's lock count to ",(0,r.kt)("inlineCode",{parentName:"p"},"_lockId"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the token we want to increment lock count for")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_lockId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the lock user wants to increment to")))),(0,r.kt)("h3",{id:"-locktokenaddress-_tokenuint256-lockcount"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"lockToken(address _token):uint256 lockCount")),(0,r.kt)("p",null,"Locks everyones' tokens on ",(0,r.kt)("inlineCode",{parentName:"p"},"_token")," address."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the token we want to lock")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"lockCount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Updated total token lock count")))),(0,r.kt)("h3",{id:"-obligatestakeaddress-_user-uint256-_amount-address-_token"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"obligateStake(address _user, uint256 _amount, address _token)")),(0,r.kt)("p",null,"Obligate the user some amount of tokens as a stake. Can only be called by a colony or colonyNetwork."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_user"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the account we are obligating.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of the colony's internal token we are obligating.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The colony's internal token address")))),(0,r.kt)("h3",{id:"-rewardaddress-_recipient-uint256-_amount"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"reward(address _recipient, uint256 _amount)")),(0,r.kt)("p",null,"This function is deprecated and only exists to aid upgrades."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note: It's a NOOP. You don't need to call this, and if you write a contract that does it will break in the future.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address to receive the reward")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount to reward")))),(0,r.kt)("h3",{id:"-setcolonynetworkaddress-_colonynetwork"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"setColonyNetwork(address _colonyNetwork)")),(0,r.kt)("p",null,"Set the ColonyNetwork contract address."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note: ColonyNetwork is used for checking if sender is a colony created on colony network.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_colonyNetwork"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the ColonyNetwork")))),(0,r.kt)("h3",{id:"-transferaddress-_token-uint256-_amount-address-_recipient-bool-_force"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"transfer(address _token, uint256 _amount, address _recipient, bool _force)")),(0,r.kt)("p",null,"Transfer tokens to a recipient's pending balance. Can only be called if user tokens are not locked."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the token to transfer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Amount to transfer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"User to receive the tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_force"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Pass true to forcibly unlock the token")))),(0,r.kt)("h3",{id:"-transferstakeaddress-_user-uint256-_amount-address-_token-address-_recipient"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"transferStake(address _user, uint256 _amount, address _token, address _recipient)")),(0,r.kt)("p",null,"Transfer some amount of staked tokens. Can only be called by a colony or colonyNetwork."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_user"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the account we are taking.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of colony's internal token we are taking.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The colony's internal token address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Recipient of the slashed tokens")))),(0,r.kt)("h3",{id:"-unlocktokenforuseraddress-_token-address-_user-uint256-_lockid"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"unlockTokenForUser(address _token, address _user, uint256 _lockId)")),(0,r.kt)("p",null,"Increments the lock counter to ",(0,r.kt)("inlineCode",{parentName:"p"},"_lockId")," for the ",(0,r.kt)("inlineCode",{parentName:"p"},"_user")," if user's lock count is less than ",(0,r.kt)("inlineCode",{parentName:"p"},"_lockId")," by 1. Can only be called by a colony."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the token we want to unlock")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_user"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_lockId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the lock we want to increment to")))),(0,r.kt)("h3",{id:"-withdrawaddress-_token-uint256-_amount"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"withdraw(address _token, uint256 _amount)")),(0,r.kt)("p",null,"Withdraw ",(0,r.kt)("inlineCode",{parentName:"p"},"_amount")," of deposited tokens. Can only be called if user tokens are not locked."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the token to withdraw from")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Amount to withdraw")))),(0,r.kt)("h3",{id:"-withdrawaddress-_token-uint256-_amount-bool-_force"},"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"h3"},"withdraw(address _token, uint256 _amount, bool _force)")),(0,r.kt)("p",null,"Withdraw ",(0,r.kt)("inlineCode",{parentName:"p"},"_amount")," of deposited tokens. Set ",(0,r.kt)("inlineCode",{parentName:"p"},"_force")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," to forcibly unlock the token before the withdrawal."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_token"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the token to withdraw from")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Amount to withdraw")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_force"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Pass true to forcibly unlock the token")))))}p.isMDXComponent=!0}}]);