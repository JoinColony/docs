"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[4609],{8860:(e,a,t)=>{t.d(a,{xA:()=>y,yg:()=>N});var n=t(7953);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=n.createContext({}),g=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},y=function(e){var a=g(e.components);return n.createElement(p.Provider,{value:a},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,y=o(e,["components","mdxType","originalType","parentName"]),d=g(t),m=r,N=d["".concat(p,".").concat(m)]||d[m]||s[m]||l;return t?n.createElement(N,i(i({ref:a},y),{},{components:t})):n.createElement(N,i({ref:a},y))}));function N(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=m;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var g=2;g<l;g++)i[g]=t[g];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},767:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>g});var n=t(4432),r=(t(7953),t(8860));const l={},i="Class: ERC2612Token",o={unversionedId:"api/classes/ERC2612Token",id:"api/classes/ERC2612Token",title:"Class: ERC2612Token",description:"Hierarchy",source:"@site/vendor/colonyJS/packages/sdk/docs/api/classes/ERC2612Token.md",sourceDirName:"api/classes",slug:"/api/classes/ERC2612Token",permalink:"/colonysdk/api/classes/ERC2612Token",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Class: ERC20Token",permalink:"/colonysdk/api/classes/ERC20Token"},next:{title:"Class: IpfsMetadata",permalink:"/colonysdk/api/classes/IpfsMetadata"}},p={},g=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides",level:4},{value:"Properties",id:"properties",level:2},{value:"address",id:"address",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Methods",id:"methods",level:2},{value:"allowance",id:"allowance",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"approve",id:"approve",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Event data",id:"event-data",level:4},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"balanceOf",id:"balanceof",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"decimals",id:"decimals",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"name",id:"name",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"permit",id:"permit",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Event data",id:"event-data-1",level:4},{value:"symbol",id:"symbol",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Inherited from",id:"inherited-from-6",level:4},{value:"totalSupply",id:"totalsupply",level:3},{value:"Returns",id:"returns-7",level:4},{value:"Inherited from",id:"inherited-from-7",level:4},{value:"transfer",id:"transfer",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Event data",id:"event-data-2",level:4},{value:"Inherited from",id:"inherited-from-8",level:4},{value:"transferFrom",id:"transferfrom",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Event data",id:"event-data-3",level:4},{value:"Inherited from",id:"inherited-from-9",level:4}],y={toc:g},d="wrapper";function s(e){let{components:a,...t}=e;return(0,r.yg)(d,(0,n.A)({},y,t,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"class-erc2612token"},"Class: ERC2612Token"),(0,r.yg)("h2",{id:"hierarchy"},"Hierarchy"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token"},(0,r.yg)("inlineCode",{parentName:"a"},"ERC20Token"))),(0,r.yg)("p",{parentName:"li"},"\u21b3 ",(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"ERC2612Token"))))),(0,r.yg)("h2",{id:"constructors"},"Constructors"),(0,r.yg)("h3",{id:"constructor"},"constructor"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("strong",{parentName:"p"},"new ERC2612Token"),"(",(0,r.yg)("inlineCode",{parentName:"p"},"colonyNetwork"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"token"),")"),(0,r.yg)("p",null,"Creates a new instance of an ERC2612 token (ERC20 with Permit extension)"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"This does not deploy a new token, only connects to an exisiting one"),(0,r.yg)("h4",{id:"parameters"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"colonyNetwork")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("a",{parentName:"td",href:"/colonysdk/api/classes/ColonyNetwork"},(0,r.yg)("inlineCode",{parentName:"a"},"ColonyNetwork"))),(0,r.yg)("td",{parentName:"tr",align:"left"},"A ",(0,r.yg)("a",{parentName:"td",href:"/colonysdk/api/classes/ColonyNetwork"},"ColonyNetwork")," instance")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"token")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"td"},"TokenERC2612")),(0,r.yg)("td",{parentName:"tr",align:"left"},"A token address or a full contract (like on a colony token client)")))),(0,r.yg)("h4",{id:"overrides"},"Overrides"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token"},"ERC20Token"),".",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token#constructor"},"constructor")),(0,r.yg)("h2",{id:"properties"},"Properties"),(0,r.yg)("h3",{id:"address"},"address"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("strong",{parentName:"p"},"address"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")),(0,r.yg)("h4",{id:"inherited-from"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token"},"ERC20Token"),".",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token#address"},"address")),(0,r.yg)("h2",{id:"methods"},"Methods"),(0,r.yg)("h3",{id:"allowance"},"allowance"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"allowance"),"(",(0,r.yg)("inlineCode",{parentName:"p"},"owner"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"spender"),"): ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,r.yg)("p",null,"Returns the amount which ",(0,r.yg)("inlineCode",{parentName:"p"},"spender")," is still allowed to withdraw from ",(0,r.yg)("inlineCode",{parentName:"p"},"owner")),(0,r.yg)("h4",{id:"parameters-1"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"owner")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"string"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"spender")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"string"))))),(0,r.yg)("h4",{id:"returns"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,r.yg)("p",null,"The allowance amount"),(0,r.yg)("h4",{id:"inherited-from-1"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token"},"ERC20Token"),".",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token#allowance"},"allowance")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"approve"},"approve"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"approve"),"(",(0,r.yg)("inlineCode",{parentName:"p"},"amount"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"spender?"),"): ",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/TxCreator"},(0,r.yg)("inlineCode",{parentName:"a"},"TxCreator")),"<",(0,r.yg)("inlineCode",{parentName:"p"},"TokenERC20"),", ",(0,r.yg)("inlineCode",{parentName:"p"},'"approve"'),", { ",(0,r.yg)("inlineCode",{parentName:"p"},"guy?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"src?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"wad?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/enums/MetadataType"},(0,r.yg)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.yg)("p",null,"Approve ",(0,r.yg)("inlineCode",{parentName:"p"},"amount")," of the wallet owners holdings of the specified token"),(0,r.yg)("p",null,'In order for the wallet owner to stake tokens, that amount has to be approved and deposited into the Colony first. In the dapp the process is called "Activation" of a certain amount of the Colony\'s native token. The wallet must hold at least the amount of the token that will be approved.'),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"import { w } from '@colony/sdk';\n\n// Immediately executing async function\n(async function() {\n  // Approve 100 tokens to be \"activated\"\n  await colony.token.approve(w`100`).tx().mined();\n  // Deposit the tokens\n  await colonyNetwork.locking.deposit(token.address, w`100`).tx().mined();\n})();\n")),(0,r.yg)("h4",{id:"parameters-2"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"amount")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"BigNumberish")),(0,r.yg)("td",{parentName:"tr",align:"left"},"Amount of the token to be approved")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"spender?")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:"left"},"Spender to approve the amount for. Defaults to the Colony Network")))),(0,r.yg)("h4",{id:"returns-1"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/TxCreator"},(0,r.yg)("inlineCode",{parentName:"a"},"TxCreator")),"<",(0,r.yg)("inlineCode",{parentName:"p"},"TokenERC20"),", ",(0,r.yg)("inlineCode",{parentName:"p"},'"approve"'),", { ",(0,r.yg)("inlineCode",{parentName:"p"},"guy?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"src?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"wad?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/enums/MetadataType"},(0,r.yg)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.yg)("p",null,"A transaction creator"),(0,r.yg)("h4",{id:"event-data"},"Event data"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Property"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"src")),(0,r.yg)("td",{parentName:"tr",align:"left"},"string"),(0,r.yg)("td",{parentName:"tr",align:"left"},"The address that approved the tokens from their wallet")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"guy")),(0,r.yg)("td",{parentName:"tr",align:"left"},"string"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Address of the TokenLocking contract")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"wad")),(0,r.yg)("td",{parentName:"tr",align:"left"},"BigNumber"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Amount that was approved")))),(0,r.yg)("h4",{id:"inherited-from-2"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token"},"ERC20Token"),".",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token#approve"},"approve")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"balanceof"},"balanceOf"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"balanceOf"),"(",(0,r.yg)("inlineCode",{parentName:"p"},"owner"),"): ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,r.yg)("p",null,"Returns the account balance of another account with address ",(0,r.yg)("inlineCode",{parentName:"p"},"owner")),(0,r.yg)("h4",{id:"parameters-3"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"owner")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"string"))))),(0,r.yg)("h4",{id:"returns-2"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,r.yg)("p",null,"The account balance of the corresponding address"),(0,r.yg)("h4",{id:"inherited-from-3"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token"},"ERC20Token"),".",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token#balanceof"},"balanceOf")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"decimals"},"decimals"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"decimals"),"(): ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"number"),">"),(0,r.yg)("p",null,"Returns the token's decimals"),(0,r.yg)("h4",{id:"returns-3"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"number"),">"),(0,r.yg)("p",null,"The token's decimals (e.g. 18)"),(0,r.yg)("h4",{id:"inherited-from-4"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token"},"ERC20Token"),".",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token#decimals"},"decimals")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"name"},"name"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"name"),"(): ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"string"),">"),(0,r.yg)("p",null,"Returns the token's name"),(0,r.yg)("h4",{id:"returns-4"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"string"),">"),(0,r.yg)("p",null,"The token's name (e.g. Colony Network Token)"),(0,r.yg)("h4",{id:"inherited-from-5"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token"},"ERC20Token"),".",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token#name"},"name")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"permit"},"permit"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"permit"),"(",(0,r.yg)("inlineCode",{parentName:"p"},"amount"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"spender?"),"): ",(0,r.yg)("inlineCode",{parentName:"p"},"EIP2612TxCreator"),"<{ ",(0,r.yg)("inlineCode",{parentName:"p"},"guy?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"src?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"wad?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/enums/MetadataType"},(0,r.yg)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.yg)("p",null,"Permit ",(0,r.yg)("inlineCode",{parentName:"p"},"amount")," of the wallet owners holdings of the specified token."),(0,r.yg)("p",null,"This is the same as ",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ColonyToken#approve"},"approve")," but works only for gasless metatransactions. If you have a Colony-deployed token, use ",(0,r.yg)("inlineCode",{parentName:"p"},"approve"),". This is mainly to support gasless transactions for BYOT (bring-your-own-token)."),(0,r.yg)("p",null,'This follows the EIP-2612 "Permit" specification. See ',(0,r.yg)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-2612"},"https://eips.ethereum.org/EIPS/eip-2612"),"."),(0,r.yg)("p",null,'In order for the wallet owner to stake tokens, that amount has to be approved and deposited into the Colony first. In the dapp the process is called "Activation" of a certain amount of the Colony\'s native token. The wallet must hold at least the amount of the token that will be approved.'),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Note that the arguments are turned around when comparing with the EIP2612 format."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"import { w } from '@colony/sdk';\n\n// Immediately executing async function\n(async function() {\n  // Permit 100 tokens to be \"activated\"\n  await colony.token.permit(w`100`).metaTx().mined();\n  // Deposit the tokens\n  await colonyNetwork.locking.deposit(token.address, w`100`).metaTx().mined();\n})();\n")),(0,r.yg)("h4",{id:"parameters-4"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"amount")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"BigNumberish")),(0,r.yg)("td",{parentName:"tr",align:"left"},"Amount of the token to be approved")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"spender?")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:"left"},"Spender to approve the amount for. Defaults to the Colony Network")))),(0,r.yg)("h4",{id:"returns-5"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"EIP2612TxCreator"),"<{ ",(0,r.yg)("inlineCode",{parentName:"p"},"guy?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"src?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"wad?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/enums/MetadataType"},(0,r.yg)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.yg)("p",null,"A transaction creator"),(0,r.yg)("h4",{id:"event-data-1"},"Event data"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Property"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"src")),(0,r.yg)("td",{parentName:"tr",align:"left"},"string"),(0,r.yg)("td",{parentName:"tr",align:"left"},"The address that approved the tokens from their wallet")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"guy")),(0,r.yg)("td",{parentName:"tr",align:"left"},"string"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Address of the TokenLocking contract")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"wad")),(0,r.yg)("td",{parentName:"tr",align:"left"},"BigNumber"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Amount that was approved")))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"symbol"},"symbol"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"symbol"),"(): ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"string"),">"),(0,r.yg)("p",null,"Returns the token's symbol"),(0,r.yg)("h4",{id:"returns-6"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"string"),">"),(0,r.yg)("p",null,"The token's symbol (e.g. CLNY)"),(0,r.yg)("h4",{id:"inherited-from-6"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token"},"ERC20Token"),".",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token#symbol"},"symbol")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"totalsupply"},"totalSupply"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"totalSupply"),"(): ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,r.yg)("p",null,"Returns the total token supply"),(0,r.yg)("h4",{id:"returns-7"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,r.yg)("p",null,"The token's total supply"),(0,r.yg)("h4",{id:"inherited-from-7"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token"},"ERC20Token"),".",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token#totalsupply"},"totalSupply")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"transfer"},"transfer"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"transfer"),"(",(0,r.yg)("inlineCode",{parentName:"p"},"to"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/TxCreator"},(0,r.yg)("inlineCode",{parentName:"a"},"TxCreator")),"<",(0,r.yg)("inlineCode",{parentName:"p"},"TokenERC20"),", ",(0,r.yg)("inlineCode",{parentName:"p"},'"transfer"'),", { ",(0,r.yg)("inlineCode",{parentName:"p"},"dst?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"src?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"wad?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/enums/MetadataType"},(0,r.yg)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.yg)("p",null,"Transfers ",(0,r.yg)("inlineCode",{parentName:"p"},"value")," amount of tokens to address ",(0,r.yg)("inlineCode",{parentName:"p"},"to")," from the currently used wallet"),(0,r.yg)("h4",{id:"parameters-5"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"to")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"string"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"value")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"BigNumberish"))))),(0,r.yg)("h4",{id:"returns-8"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/TxCreator"},(0,r.yg)("inlineCode",{parentName:"a"},"TxCreator")),"<",(0,r.yg)("inlineCode",{parentName:"p"},"TokenERC20"),", ",(0,r.yg)("inlineCode",{parentName:"p"},'"transfer"'),", { ",(0,r.yg)("inlineCode",{parentName:"p"},"dst?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"src?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"wad?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/enums/MetadataType"},(0,r.yg)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.yg)("p",null,"A transaction creator"),(0,r.yg)("h4",{id:"event-data-2"},"Event data"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Property"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"src")),(0,r.yg)("td",{parentName:"tr",align:"left"},"string"),(0,r.yg)("td",{parentName:"tr",align:"left"},"The address that transferred the tokens from their wallet")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"dst")),(0,r.yg)("td",{parentName:"tr",align:"left"},"string"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Address of the recipient of the tokens")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"wad")),(0,r.yg)("td",{parentName:"tr",align:"left"},"BigNumber"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Amount that was transferred")))),(0,r.yg)("h4",{id:"inherited-from-8"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token"},"ERC20Token"),".",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token#transfer"},"transfer")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"transferfrom"},"transferFrom"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"transferFrom"),"(",(0,r.yg)("inlineCode",{parentName:"p"},"from"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"to"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/TxCreator"},(0,r.yg)("inlineCode",{parentName:"a"},"TxCreator")),"<",(0,r.yg)("inlineCode",{parentName:"p"},"TokenERC20"),", ",(0,r.yg)("inlineCode",{parentName:"p"},'"transferFrom"'),", { ",(0,r.yg)("inlineCode",{parentName:"p"},"dst?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"src?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"wad?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/enums/MetadataType"},(0,r.yg)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.yg)("p",null,"Transfers ",(0,r.yg)("inlineCode",{parentName:"p"},"value")," amount of tokens from address ",(0,r.yg)("inlineCode",{parentName:"p"},"from")," to address ",(0,r.yg)("inlineCode",{parentName:"p"},"to")),(0,r.yg)("p",null,"The transferFrom method is used for a withdraw workflow, allowing contracts to transfer tokens on your behalf. This can be used for example to allow a contract to transfer tokens on your behalf and/or to charge fees in sub-currencies"),(0,r.yg)("h4",{id:"parameters-6"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"from")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"string"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"to")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"string"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"value")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"BigNumberish"))))),(0,r.yg)("h4",{id:"returns-9"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/TxCreator"},(0,r.yg)("inlineCode",{parentName:"a"},"TxCreator")),"<",(0,r.yg)("inlineCode",{parentName:"p"},"TokenERC20"),", ",(0,r.yg)("inlineCode",{parentName:"p"},'"transferFrom"'),", { ",(0,r.yg)("inlineCode",{parentName:"p"},"dst?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"src?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," ; ",(0,r.yg)("inlineCode",{parentName:"p"},"wad?"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"BigNumber"),"  }, ",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/enums/MetadataType"},(0,r.yg)("inlineCode",{parentName:"a"},"MetadataType")),">"),(0,r.yg)("p",null,"A transaction creator"),(0,r.yg)("h4",{id:"event-data-3"},"Event data"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Property"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"src")),(0,r.yg)("td",{parentName:"tr",align:"left"},"string"),(0,r.yg)("td",{parentName:"tr",align:"left"},"The address that transferred the tokens from their wallet")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"dst")),(0,r.yg)("td",{parentName:"tr",align:"left"},"string"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Address of the recipient of the tokens")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"wad")),(0,r.yg)("td",{parentName:"tr",align:"left"},"BigNumber"),(0,r.yg)("td",{parentName:"tr",align:"left"},"Amount that was transferred")))),(0,r.yg)("h4",{id:"inherited-from-9"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token"},"ERC20Token"),".",(0,r.yg)("a",{parentName:"p",href:"/colonysdk/api/classes/ERC20Token#transferfrom"},"transferFrom")))}s.isMDXComponent=!0}}]);