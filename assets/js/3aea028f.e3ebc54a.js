"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[2577],{8860:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>m});var a=t(7953);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),d=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=d(e.components);return a.createElement(l.Provider,{value:n},e.children)},s="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=d(t),g=r,m=s["".concat(l,".").concat(g)]||s[g]||y[g]||i;return t?a.createElement(m,o(o({ref:n},c),{},{components:t})):a.createElement(m,o({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=g;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[s]="string"==typeof e?e:r,o[1]=p;for(var d=2;d<i;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},2743:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>y,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var a=t(4432),r=(t(7953),t(8860));const i={},o="Interface: ColonyTransaction<C, E, R, MD>",p={unversionedId:"api/interfaces/ColonyTransaction",id:"api/interfaces/ColonyTransaction",title:"Interface: ColonyTransaction<C, E, R, MD\\>",description:'A standard transaction ("force" in dApp)',source:"@site/vendor/colonyJS/packages/sdk/docs/api/interfaces/ColonyTransaction.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/ColonyTransaction",permalink:"/colonysdk/api/interfaces/ColonyTransaction",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Interface: ColonyTopic",permalink:"/colonysdk/api/interfaces/ColonyTopic"},next:{title:"Interface: ContractReceipt",permalink:"/colonysdk/api/interfaces/ContractReceipt"}},l={},d=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"encode",id:"encode",level:3},{value:"Returns",id:"returns",level:4},{value:"mined",id:"mined",level:3},{value:"Returns",id:"returns-1",level:4},{value:"send",id:"send",level:3},{value:"Returns",id:"returns-2",level:4}],c={toc:d},s="wrapper";function y(e){let{components:n,...t}=e;return(0,r.yg)(s,(0,a.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"interface-colonytransactionc-e-r-md"},"Interface: ColonyTransaction<C, E, R, MD",">"),(0,r.yg)("p",null,'A standard transaction ("force" in dApp)'),(0,r.yg)("p",null,"You can then ",(0,r.yg)("inlineCode",{parentName:"p"},"send")," the transaction, wait for it to be ",(0,r.yg)("inlineCode",{parentName:"p"},"mined")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"encode")," it.\nSee also ",(0,r.yg)("a",{parentName:"p",href:"https://docs.colony.io/colonysdk/guides/transactions"},"https://docs.colony.io/colonysdk/guides/transactions")," for more information"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"(async function() {\n  // Just send off the transaction and get back the tx object\n  // First tupel value is the ethers transaction, including the hash\n  // Second tupel value is a function that does the same as `.mined()` below\n  const [tx, mined] = await colony.claimFunds().tx().send();\n  console.info(tx.hash); // Transaction hash\n  const [eventData, receipt] = await mined();\n  // Wait for tx to be mined, get back the eventData, receipt\n  const [eventData, receipt] = await colony.claimFunds().tx().mined();\n  // A transaction can also be output as a raw, encoded string for later use (e.g. using `sendRawTransaction`)\n  const encoded = await colony.claimFunds().tx().encode();\n  console.log(encoded); // 0x89224a1e000000000000000000000000bdc38a08548b47015f5fe853aa6614cfb2cbfcc0\n})();\n")),(0,r.yg)("h2",{id:"type-parameters"},"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"C")),(0,r.yg)("td",{parentName:"tr",align:"left"},"extends ",(0,r.yg)("a",{parentName:"td",href:"/colonysdk/api/interfaces/ContractTransaction"},(0,r.yg)("inlineCode",{parentName:"a"},"ContractTransaction")))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"E")),(0,r.yg)("td",{parentName:"tr",align:"left"},"extends ",(0,r.yg)("a",{parentName:"td",href:"/colonysdk/api/interfaces/EventData"},(0,r.yg)("inlineCode",{parentName:"a"},"EventData"))," ","|"," ",(0,r.yg)("inlineCode",{parentName:"td"},"MotionCreatedEventObject"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"R")),(0,r.yg)("td",{parentName:"tr",align:"left"},"extends ",(0,r.yg)("a",{parentName:"td",href:"/colonysdk/api/interfaces/ContractReceipt"},(0,r.yg)("inlineCode",{parentName:"a"},"ContractReceipt")))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"MD")),(0,r.yg)("td",{parentName:"tr",align:"left"},"extends ",(0,r.yg)("a",{parentName:"td",href:"/colonysdk/api/enums/MetadataType"},(0,r.yg)("inlineCode",{parentName:"a"},"MetadataType")))))),(0,r.yg)("h2",{id:"methods"},"Methods"),(0,r.yg)("h3",{id:"encode"},"encode"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"encode"),"(): ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"string"),">"),(0,r.yg)("p",null,"Encode the transaction into a raw string"),(0,r.yg)("h4",{id:"returns"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"string"),">"),(0,r.yg)("p",null,"A raw, encoded transaction string"),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"mined"},"mined"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"mined"),"(): ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<","[",(0,r.yg)("inlineCode",{parentName:"p"},"E"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"R"),"]"," ","|"," [",(0,r.yg)("inlineCode",{parentName:"p"},"E"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"R"),", () => ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"MetadataTypeMap"),"[",(0,r.yg)("inlineCode",{parentName:"p"},"MD"),"]",">","]",">"),(0,r.yg)("p",null,"Wait until the tx is mined, returning the event data and the receipt"),(0,r.yg)("h4",{id:"returns-1"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<","[",(0,r.yg)("inlineCode",{parentName:"p"},"E"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"R"),"]"," ","|"," [",(0,r.yg)("inlineCode",{parentName:"p"},"E"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"R"),", () => ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"MetadataTypeMap"),"[",(0,r.yg)("inlineCode",{parentName:"p"},"MD"),"]",">","]",">"),(0,r.yg)("p",null,"A tupel of event data and contract receipt (and a function to retrieve metadata if applicable)"),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"send"},"send"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"send"),"(): ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<[",(0,r.yg)("inlineCode",{parentName:"p"},"C"),", () => ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<[",(0,r.yg)("inlineCode",{parentName:"p"},"E"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"R"),", () => ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"MetadataTypeMap"),"[",(0,r.yg)("inlineCode",{parentName:"p"},"MD"),"]",">","] ","|"," ","[",(0,r.yg)("inlineCode",{parentName:"p"},"E"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"R"),"]",">","]",">"),(0,r.yg)("p",null,"Send off the tx, returning the transaction including its hash, not waiting for it to be mined"),(0,r.yg)("h4",{id:"returns-2"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<[",(0,r.yg)("inlineCode",{parentName:"p"},"C"),", () => ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<[",(0,r.yg)("inlineCode",{parentName:"p"},"E"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"R"),", () => ",(0,r.yg)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"MetadataTypeMap"),"[",(0,r.yg)("inlineCode",{parentName:"p"},"MD"),"]",">","] ","|"," ","[",(0,r.yg)("inlineCode",{parentName:"p"},"E"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"R"),"]",">","]",">"),(0,r.yg)("p",null,"A tupel of a contract transaction and a function to wait for the mined event data as well as the receipt"))}y.isMDXComponent=!0}}]);